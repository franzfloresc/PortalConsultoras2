@using Newtonsoft.Json
@using Portal.Consultoras.Common
@using Portal.Consultoras.Web.Areas.Mobile.Models

@model  OfertaProductoPrincipalMobileModel

@{
    Layout = "~/Areas/Mobile/Views/Shared/_MobileLayout.cshtml";
}

@section styles{
    <style type="text/css">
        body {
            background: #FFF !important;
        }
    </style>
}

<div class="wrapper_resumen_mobile sin_padding">

    <div class="encabezado_liquidacion">
        <a href="@Url.Action("Index", "Bienvenida", new { area = "Mobile" })" class="enlace_regresar" title="Regresar">
            @*<img src="@Url.Content("~/Content/images/flecha_volver_mobile_blanca.svg")" alt="Regresar" />*@
        </a>
        <span>LIQUIDACIÓN WEB</span>
    </div>

    <div class="pestana_lbel mobileLiquidaciones"></div><!--PESTAÑA PARA DARLE ESTILO CON LBEL-->

<div class="row">
    <div class="lista-productos">
        @if (Model.listaProductosEnLiquidacion.Count == 0)
        {
            <div class="alert-top-icon text-success">
                <i class="icon-exclamation-circle"></i>
                <div>No existen productos en liquidación.</div>
            </div>
        }
        else
        {
            var posicion = 1;
            foreach (var item in Model.listaProductosEnLiquidacion)
            {
                var inhabilitar = item.Stock == 0;

                <div class="col-xs-6 col-sm-4 col-md-3">
                    <article class="panel-product upper">
                        <input type="hidden" class="valorCuv" value="@item.CUV" />
                        <input type="hidden" class="claseMarcaID" value="@item.MarcaID" />
                        <input type="hidden" class="clasePrecioUnidad" value="@item.PrecioOferta" />
                        <input type="hidden" class="claseConfiguracionOfertaID" value="@item.ConfiguracionOfertaID" />
                        <input type="hidden" class="DescripcionProd" value="@item.Descripcion" />
                        <input type="hidden" class="DescripcionMarca" value="@item.DescripcionMarca" />
                        <input type="hidden" class="DescripcionCategoria" value="@item.DescripcionCategoria" />
                        <input type="hidden" class="DescripcionEstrategia" value="@item.DescripcionEstrategia" />
                        <input type="hidden" class="posicionEstrategia" value="@posicion" />


                        <div class="productoAgregado" style="@(item.Agregado ? "" : "display:none;")">
                            <span class="product-add-image"></span>
                        </div>
                        <figure>
                            <div class="img-middle">
                                <img src=@item.ImagenProducto alt="@item.Descripcion" width="150" />
                            </div>
                            <figcaption><b>@item.DescripcionMarca</b></figcaption>
                        </figure>
                        <div class="product-precio">
                            @item.Descripcion
                        </div>
                        <br />
                        <div>
                            <span class="pull-left">
                                @Model.Simbolo
                                @if (Model.ISOPais == Constantes.CodigosISOPais.Colombia)
                                {
                                    @(string.Format("{0:#,##0}", item.PrecioOferta).Replace(',', '.'))
                                }
                                else
                                {
                                    @(string.Format("{0:#,##0.00}", item.PrecioOferta).Replace(',', '.'))
                                }
                            </span>
                            <span class="t-danger pull-right font-normal">Quedan : <span class="claseStock">@item.Stock</span> </span>
                            <br />
                        </div>

                        <div class="form-group group-xxs">
                            <div class="input-group group-operator">
                                <span class="input-group-btn">
                                    <button class="btn btn-default resta" type="button" @(inhabilitar ? "disabled='disabled'" : "")> <i class="icon-minus-belcorp"></i></button>
                                </span>
                                <input type="tel" class="form-control text-center change-value txtCantidad" value="1" min="1" max="99" @(inhabilitar ? "readonly='readonly'" : "") oninput="maxLengthCheck(this, 2)" onkeypress="return FuncionesGenerales.ValidarSoloNumeros(event);" />
                                <span class="input-group-btn">
                                    <button class="btn btn-default suma" type="button" @(inhabilitar ? "disabled='disabled'" : "")><i class="icon-plus-belcorp"></i></button>
                                </span>
                            </div>
                        </div>

                        <button type="button" class="btn btn-line-hover btn-block btnAgregarOfertaProducto"><i class="icon-lg icon-shop-belcorp"></i> Agregar</button>
                    </article>
                </div>
                {
                    posicion++;
                }
            }
        }
    </div>
</div>

<div class="alert alert-success alert-full" style="display: none;" id="divMensajeProductoAgregado">
    <img src="@Url.Content("~/Content/Images/mobile/img-icon/alert-success.png")" alt="Alert" class="img-responsive" />
    <p>Producto <br /> Agregado</p>
</div>

@section scripts
{
    <script type="text/javascript">

        var urlEnHorarioRestringido = '@Url.Action("EnHorarioRestringido", "Pedido", new {area = ""})';
        var urlValidarUnidadesPermitidasPedidoProducto = '@Url.Action("ValidarUnidadesPermitidasPedidoProducto", "OfertaLiquidacion", new { area = "" })';
        var urlObtenerStockActualProducto = '@Url.Action("ObtenerStockActualProducto", "OfertaLiquidacion", new { area = "" })';
        var urlInsertOfertaWebPortal = '@Url.Action("InsertOfertaWebPortal", "OfertaLiquidacion", new { area = "" })';
        var urlActualizarCantidadTotalPedido = '@Url.Action("ObtenerResumenPedido", "OfertaLiquidacion", new { area = "Mobile" })';

        ////////

        function ReservadoOEnHorarioRestringido(mostrarAlerta) {
            mostrarAlerta = typeof mostrarAlerta !== 'undefined' ? mostrarAlerta : true;
            var restringido = true;

            $.ajaxSetup({ cache: false });
            jQuery.ajax({
                type: 'GET',
                url: '@Url.Action("ReservadoOEnHorarioRestringido", "Pedido", new { area = "" })',
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                async: false,
                success: function (data) {
                    
                    if (checkTimeout(data)) {
                        if (data.success == false)
                            restringido = false;
                        else {

                            if (data.pedidoReservado) {
                                var fnRedireccionar = function () {
                                    ShowLoading();
                                    location.href = '@Url.Action("Validado", "Pedido", new { area = "Mobile" })';
                                }
                                if (mostrarAlerta == true) {
                                    CloseLoading();
                                    alert_msg(data.message, fnRedireccionar);
                                }

                                else fnRedireccionar();

                            }
                            else if (mostrarAlerta == true)
                                alert_msg(data.message);
                                //setTimeout(function () { location.href = '@Url.Action("Index", "Bienvenida", new { area = "Mobile" })'; }, 2500);
                        }
                    }
                },
                error: function (error) {
                    console.log(error);
                    alert_msg('Ocurrió un error al intentar validar el horario restringido o si el pedido está reservado. Por favor inténtelo en unos minutos.');
                }
            });
            return restringido;
        }

        function alert_msg(message, fnClose) {
            messageInfoValidado('<h3 class="text-primary">' + message + '</h3>', fnClose);

        }

        ////////

        $(document).ready(function () {

            TagManagerOfertaLiquidacion();

            $("body").on("click", ".suma", function () {
                var article = $(this).parents("article").eq(0);
                var cantidad = $(article).find(".txtCantidad").val();
                var cajaTexto = $(article).find(".txtCantidad");
                if (cantidad == 99)
                    $(cajaTexto).val(Number(99));
                else
                    $(cajaTexto).val(Number(cantidad) + 1);
            });

            $("body").on("click", ".resta", function () {
                var article = $(this).parents("article").eq(0);
                var cantidad = $(article).find(".txtCantidad").val();
                var cajaTexto = $(article).find(".txtCantidad");
                if (cantidad == 1)
                    $(cajaTexto).val(Number(1));
                else
                    $(cajaTexto).val(Number(cantidad) - 1);
            });


            $("body").on("click", ".btnAgregarOfertaProducto", function (e) {

                /////////
                if (ReservadoOEnHorarioRestringido())
                    return;

                ////////
                
                var article = $(this).parents("article").eq(0);
                AgregarOfertaProducto(article);
                e.preventDefault();
                (this).blur();
            });

            //HorarioRestringido();
            ReservadoOEnHorarioRestringido();

        });

        function AgregarOfertaProducto(article) {
            var cantidad = $(article).find(".txtCantidad").val();
            var CUV = $(article).find(".valorCuv").val();
            var MarcaID = $(article).find(".claseMarcaID").val();
            var PrecioUnidad = $(article).find(".clasePrecioUnidad").val();
            var ConfiguracionOfertaID = $(article).find(".claseConfiguracionOfertaID").val();
            var divProductoAgregado = $(article).find(".productoAgregado");
            var DescripcionProd = $(article).find(".DescripcionProd").val();
            var DescripcionMarca = $(article).find(".DescripcionMarca").val();
            var DescripcionCategoria = $(article).find(".DescripcionCategoria").val();
            var DescripcionEstrategia = $(article).find(".DescripcionEstrategia").val();
            var posicionEstrategia = $(article).find(".posicionEstrategia").val();

            if (cantidad == "" || cantidad == 0) {
                messageInfo("La cantidad ingresada debe ser mayor que 0, verifique.");
            } else {
                ShowLoading();

                $.ajaxSetup({ cache: false });
                $.getJSON(urlValidarUnidadesPermitidasPedidoProducto, { CUV: CUV }, function (data) {

                    if (parseInt(data.Saldo) < parseInt(cantidad)) {
                        var Saldo = data.Saldo;
                        var UnidadesPermitidas = data.UnidadesPermitidas;

                        $.getJSON(urlObtenerStockActualProducto, { CUV: CUV }, function (data) {

                            $(article).find(".claseStock").text(data.Stock);

                            CloseLoading();
                            if (Saldo == UnidadesPermitidas) {
                                messageInfo("Lamentablemente, la cantidad solicitada sobrepasa las Unidades Permitidas de Venta (" + UnidadesPermitidas + ") del producto.");
                            }
                            else {
                                if (Saldo == "0")
                                    messageInfo("Las Unidades Permitidas de Venta son solo (" + UnidadesPermitidas + "), pero Usted ya no puede adicionar más, debido a que ya agregó este producto a su pedido, verifique.");
                                else
                                    messageInfo("Las Unidades Permitidas de Venta son solo (" + UnidadesPermitidas + "), pero Usted solo puede adicionar (" + Saldo + ") más, debido a que ya agregó este producto a su pedido, verifique.");
                            }
                        });
                    } else {
                        var Item = {
                            MarcaID: MarcaID,
                            Cantidad: cantidad,
                            PrecioUnidad: PrecioUnidad,
                            CUV: CUV,
                            ConfiguracionOfertaID: ConfiguracionOfertaID
                        };

                        $.ajaxSetup({ cache: false });
                        $.getJSON(urlObtenerStockActualProducto, { CUV: CUV }, function (data) {

                            if (parseInt(data.Stock) < parseInt(cantidad)) {
                                $(article).find(".claseStock").text(data.Stock);

                                CloseLoading();
                                messageInfo("Lamentablemente, la cantidad solicitada sobrepasa el stock actual (" + data.Stock + ") del producto, verifique.");
                            }
                            else {
                                jQuery.ajax({
                                    type: 'POST',
                                    url: urlInsertOfertaWebPortal,
                                    dataType: 'json',
                                    contentType: 'application/json; charset=utf-8',
                                    data: JSON.stringify(Item),
                                    async: true,
                                    success: function (response) {
                                        CloseLoading();

                                        if (response.success == true) {
                                            $("#divMensajeProductoAgregado").show();
                                            $(divProductoAgregado).css('display', 'block');

                                            var stockRestante = parseInt(data.Stock) - parseInt(cantidad);
                                            if (stockRestante < 1) {
                                                $(article).find(".resta").attr('disabled', 'disabled');
                                                $(article).find(".suma").attr('disabled', 'disabled');
                                                $(article).find(".txtCantidad").attr('disabled', 'disabled');
                                                $(article).find(".btnAgregarOfertaProducto").attr('disabled', 'disabled');

                                                $(article).find(".claseStock").text("0");
                                                $(article).find(".txtCantidad").val("0");
                                            } else {
                                                $(article).find(".claseStock").text(stockRestante);
                                                $(article).find(".txtCantidad").val("1");
                                            }

                                            InfoCommerceGoogle(parseFloat(cantidad * PrecioUnidad).toFixed(2), CUV, DescripcionProd, DescripcionCategoria, PrecioUnidad, cantidad, DescripcionMarca, DescripcionEstrategia, posicionEstrategia);
                                            ActualizarCantidadTotalPedido();

                                            setTimeout(function () {
                                                $("#divMensajeProductoAgregado").fadeOut();
                                            }, 2000);
                                        }
                                        else {
                                            messageInfo(response.message);
                                        }
                                    },
                                    error: function (response, error) {
                                        if (checkTimeout(response)) {
                                            CloseLoading();
                                            console.log(response);
                                        }
                                    }
                                });
                            }
                        });
                    }
                });
            }
        }

        function HorarioRestringido() {
            var horarioRestringido = false;
            $.ajaxSetup({ cache: false });
            jQuery.ajax({
                type: 'GET',
                url: urlEnHorarioRestringido,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                async: false,
                success: function (data) {
                    if (checkTimeout(data)) {
                        if (data.success == true) {
                            window.messageInfo(data.message);
                            horarioRestringido = true;
                        }
                    }
                },
                error: function (data, error) {
                    if (checkTimeout(data)) {
                        window.messageInfo(data.message);
                    }
                }
            });
            return horarioRestringido;
        }

        function maxLengthCheck(object, cantidadMaxima) {
            if (object.value.length > cantidadMaxima)
                object.value = object.value.slice(0, cantidadMaxima);
        }

        function ActualizarCantidadTotalPedido() {
            jQuery.ajax({
                type: 'POST',
                url: urlActualizarCantidadTotalPedido,
                dataType: 'json',
                async: true,
                success: function (response) {
                    if (checkTimeout(response)) {
                        if (response.success) {
                            var data = response.data;
                            $(".num-menu-shop").html(data.CantidadProductos);
                        } else {
                            window.messageInfo(response.message);
                        }
                    }
                },
                error: function (response, error) {
                    if (checkTimeout(response)) {
                        console.log(response);
                    }
                }
            });
        }

        function InfoCommerceGoogle(ItemTotal, CUV, DescripcionProd, Categoria, Precio, Cantidad, Marca, variant, posicion) {
            if (ItemTotal >= 0 && Precio >= 0 && Cantidad > 0) {
                if (variant == null || variant == "" || variant == "NO DISPONIBLE") {
                    variant = "Estándar";
                }
                if (Categoria == null || Categoria == "") {
                    Categoria = "Sin Categoría";
                }
                dataLayer.push({
                    'event': 'addToCart',
                    'ecommerce': {
                        'add': {
                            'actionField': { 'list': 'Liquidación Web' },
                            'products': [{
                                'name': DescripcionProd,
                                'price': Precio,
                                'brand': Marca,
                                'id': CUV,
                                'category': 'NO DISPONIBLE',
                                'variant': variant,
                                'quantity': parseInt(Cantidad),
                                'position': parseInt(posicion)
                            }]
                        }
                    }
                })
            }
        }

        function TagManagerOfertaLiquidacion() {
            var cadListaofertaLiquidadas = $("#hdListaProductosEnLiquidacion").val();
            var listaofertaLiquidadas = JSON.parse(cadListaofertaLiquidadas);
            var cantidadofertaLiquidadas = $('.panel-product').length;

            var arrayEstrategia = new Array();
            var position = 1;
            for (var i = 0; i < cantidadofertaLiquidadas; i++) {
                var variant = "";
                var ofertaLiquidada = listaofertaLiquidadas[i];
                if (ofertaLiquidada.DescripcionEstrategia == null || ofertaLiquidada.DescripcionEstrategia == "" ||
                    ofertaLiquidada.DescripcionEstrategia == "NO DISPONIBLE") {
                    variant = "Estándar";
                } else {
                    variant = ofertaLiquidada.DescripcionEstrategia;
                }
                var impresionofertaLiquidada = {

                    'name': ofertaLiquidada.Descripcion,
                    'id': ofertaLiquidada.CUV,
                    'price': ofertaLiquidada.PrecioOferta.toString(),
                    'brand': ofertaLiquidada.DescripcionMarca,
                    'category': 'NO DISPONIBLE',
                    'variant': variant,
                    'list': 'Liquidación Web',
                    'position': position

                };
                position++;
                arrayEstrategia.push(impresionofertaLiquidada);
            }

            if (arrayEstrategia.length > 0) {
                dataLayer.push({
                    'event': 'productImpression',
                    'ecommerce': {
                        'impressions': arrayEstrategia
                    }
                });
            }
        }

    </script>
}