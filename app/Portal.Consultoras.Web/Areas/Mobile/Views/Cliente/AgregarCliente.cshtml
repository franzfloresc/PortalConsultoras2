@using System.Globalization
@using Portal.Consultoras.Web.Areas.Mobile.Models
@using Portal.Consultoras.Web.CustomHelpers
@model ClienteMobileModel

<style>
    #divValidationSummary {
        color: red
    }

    .clienteMensajeEditar {
        display: table;
        padding-left: 20px;
        padding-right: 20px;
    }

        .clienteMensajeEditar span {
            vertical-align: middle;
            display: table-cell;
            padding-right: 5px;
        }
</style>

<div class="btn_cerrar_agregarUnidades">
    <a href="javascript:;" onclick="CloseAgregarCliente(2);">
        <img src="@Url.Content("~/Content/Images/btn_cerrar_popup.svg")" alt="Cerrar" />
        <span class="texto_btn_cerrar">CERRAR</span>
    </a>
</div>
@if (Model.ClienteID == 0)
{
    <h6>AGREGAR <b>CLIENTE</b></h6>
}
else
{
    <h6>MODIFICAR <b>CLIENTE</b></h6>
}

<form id="frmAgregarCliente">
    @Html.HiddenFor(model => model.ClienteID)
    @Html.HiddenFor(model => model.CodigoCliente)

    <div class="form-group">
        @Html.TextBoxFor(model => model.NombreCliente, new { placeholder = "Nombres", maxlength = "100", @class = "", autocomplete = "off" })
        @Html.ValidationMessageFor(model => model.NombreCliente)
    </div>

    <div class="form-group">
        @Html.TextBoxFor(model => model.ApellidoCliente, new { placeholder = "Apellidos", maxlength = "100", @class = "", autocomplete = "off" })
        @Html.ValidationMessageFor(model => model.ApellidoCliente)
    </div>

    <div class="form-group">
        @Html.TextBoxFor(model => model.Telefono, new { placeholder = "Teléfono Fijo", maxlength = "20", @class = "input-number", autocomplete = "off" })
        @Html.ValidationMessageFor(model => model.Telefono)
    </div>

    <div class="form-group">
        @Html.TextBoxFor(model => model.Celular, new { placeholder = "Celular", maxlength = "20", @class = "input-number", autocomplete = "off" })
        @Html.ValidationMessageFor(model => model.Celular)
    </div>

    <div class="form-group">
        @Html.TextBoxFor(model => model.Email, new { placeholder = "Correo Electrónico (Opcional)", maxlength = "80", autocomplete = "off" })
        @Html.ValidationMessageFor(model => model.Email)
    </div>

    <input type="button" class="btnCliente_agregar" name="agregarCliente" value="GUARDAR" id="btnGuardar" />

    <br />
    <div id="divValidationSummary"></div>
</form>

<script type="text/javascript">
        $.validator.unobtrusive.parse("#frmAgregarCliente");

        $(".input-number").keypress(function (e) {
            $(this).val($(this).val().replace(/[^\d].+/, ""));
            if ((event.which < 48 || event.which > 57)) event.preventDefault();
        });

        $('#divAgregarCliente').modal({ backdrop: 'static', keyboard: false })

            $("#btnGuardar").on("click", function (e) {
                e.preventDefault();                
                $("#divValidationSummary").html("");
                if (jQuery.trim($('#Telefono').val()) == "" && jQuery.trim($('#Celular').val()) == "") {
                    $("#divValidationSummary").html("* Debes Ingresar al menos un teléfono de contacto");

                    if (!$("#frmAgregarCliente").valid()) return;

                    return;
                }


                if (!$("#frmAgregarCliente").valid()) return;

                var nombreCliente = jQuery.trim($('#NombreCliente').val());
                var apellidoCliente = jQuery.trim($('#ApellidoCliente').val());

                var item = {
                    ClienteID: $("#ClienteID").val(),
                    CodigoCliente: $("#CodigoCliente").val(),
                    NombreCliente: nombreCliente,
                    ApellidoCliente: apellidoCliente,
                    Nombre: jQuery.trim(nombreCliente + " " + apellidoCliente),
                    Email: $('#Email').val(),
                    Telefono: $('#Telefono').val(),
                    Celular: $('#Celular').val(),
                };

                ShowLoading();

                jQuery.ajax({
                    type: 'POST',
                    url: '@Url.Action("Guardar", "Cliente", new { area = "Mobile" })',
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(item),
                    async: true,
                    success: function (data) {
                        if (checkTimeout(data)) {
                            if (data.success == true) {
                                CloseLoading();

                                item.CodigoCliente = data.extra.split("|")[0];
                                item.ClienteID = data.extra.split("|")[1];

                                messageInfo(data.message, function (e) {
                                    debugger;
                                    if ($(e.target.parentElement).attr('class').includes("cerrar_popMobile")) { /*click en cerrar pop up*/
                                        DataLayerPedidosPendientes('virtualEvent', 'Carrito de Compras', 'Pop up Registro Cliente Satisfactorio', 'Cerrar');
                                    } else if ($(e.target).attr('class').includes("btn-aceptar")) {  /*click en Aceptar*/
                                        DataLayerPedidosPendientes('virtualEvent', 'Carrito de Compras', 'Pop up Registro Cliente Satisfactorio', 'Aceptar');
                                    }
                                    item.Insertado = data.insertado;
                                    if ($.isFunction(ClienteDetalleOK)) ClienteDetalleOK(item);
                                });
                                CloseAgregarCliente(1);


                            }
                            else {
                                CloseLoading();
                                messageInfo(data.message);
                            }


                        }
                    },
                    error: function (data, error) {
                        if (checkTimeout(data)) {
                            messageInfo(data.message);
                            CloseLoading();
                        }
                    }
                });
            });

    function CloseAgregarCliente(origenBoton) {

        if (origenBoton) {
            switch (origenBoton) {
                case 1: /*boton Guardar*/
                    DataLayerPedidosPendientes('virtualEvent', 'Carrito de Compras - Pedidos Pendientes', 'Pop up Agregar Cliente', 'guardar');
                    break
                case 2: /*boton Cerrar*/
                    DataLayerPedidosPendientes('virtualEvent', 'Carrito de Compras - Pedidos Pendientes', 'Pop up Agregar Cliente', 'cerrar');
                    break;
                default:
                    break;
            }
        }
            $("#divAgregarCliente").modal("hide");
        }
</script>
