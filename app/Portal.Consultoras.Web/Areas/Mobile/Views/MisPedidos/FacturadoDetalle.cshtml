@using Portal.Consultoras.Common
@using Portal.Consultoras.Web.Areas.Mobile.Models

@model PedidoWebMobilModel

<div class="block-white" style="margin-top:1px;">
    <br />
    <div class="upper">
        <div>
            <strong class="text-primary">
                Total Facturado
            </strong>
            <span class="pull-right">
                <strong>
                    @Model.Simbolo
                    @if (Model.CodigoISO == Constantes.CodigosISOPais.Colombia)
                    {
                        @(string.Format("{0:#,##0}", Model.ImporteTotal).Replace(',', '.'))
                    }
                    else
                    {
                        @(string.Format("{0:#,##0.00}", Model.ImporteTotal).Replace(',', '.'))
                    }
                </strong>
            </span>
        </div>
    </div>
    <hr style="border-top: 1px solid #bababa" />

    <div class="list-table-new">
        <ul class="list-table-title upper">
            <li>Productos <span class="table-title-right">Cant</span></li>
        </ul>
        <ul class="list-table-body">
            @foreach (var item in Model.ListaPedidoWebDetalle)
            {
                <li>
                    <div class="posr">
                        <div class="table-width">
                            <div class="upper">@item.DescripcionProd</div>
                            <div class="mb-10">
                                <div>@item.CUV</div>
                            </div>
                            Precio Unitario  @Model.Simbolo
                            @if (Model.CodigoISO == Constantes.CodigosISOPais.Colombia)
                            {
                                @(string.Format("{0:#,##0}", item.PrecioUnidad).Replace(',', '.'))
                            }
                            else
                            {
                                @(string.Format("{0:#,##0.00}", item.PrecioUnidad).Replace(',', '.'))
                            }
                            <br />
                            Total @Model.Simbolo
                            @if (Model.CodigoISO == Constantes.CodigosISOPais.Colombia)
                            {
                                @(string.Format("{0:#,##0}", item.ImporteTotal).Replace(',', '.'))
                            }
                            else
                            {
                                @(string.Format("{0:#,##0.00}", item.ImporteTotal).Replace(',', '.'))
                            }
                            <br />
                            <div class="caja" style="padding-top: 15px;">
                                <span> Cliente: </span>
                                @Html.DropDownListFor(x => item.ClienteID, new SelectList(Model.ListaClientes, "ClienteID", "Nombre", item.ClienteID), new { @class = "cbolstClientes", @PedidoId = item.PedidoID, @disabled = "disabled" })
                            </div>

                            @*Descuento @Model.Simbolo
                            @if (Model.CodigoISO == Constantes.CodigosISOPais.Colombia)
                            {
                                @(string.Format("{0:#,##0}", item.ImporteDescuento).Replace(',', '.'))
                            }
                            else
                            {
                                @(string.Format("{0:#,##0.00}", item.ImporteDescuento).Replace(',', '.'))
                            }
                            <div class="upper mt-20">
                                <strong>Importe a Pagar </strong>
                                <b>
                                    @Model.Simbolo
                                    @if (Model.CodigoISO == Constantes.CodigosISOPais.Colombia)
                                    {
                                        @(string.Format("{0:#,##0}", item.ImporteTotalPedido).Replace(',', '.'))
                                    }
                                    else
                                    {
                                        @(string.Format("{0:#,##0.00}", item.ImporteTotalPedido).Replace(',', '.'))
                                    }
                                </b>
                            </div>*@
                        </div>
                        <span class="cantidad-numero"> @item.Cantidad </span>
                    </div>
                </li>
            }
        </ul>
    </div>
    @{
        var sessionMobile = (Session["MobileAppConfiguracion"] == null ? new MobileAppConfiguracionModel() : (MobileAppConfiguracionModel)Session["MobileAppConfiguracion"]);

        if (sessionMobile.ClienteID == 0)
        { 
            <table class="table pcolor">
                <tbody>
                    <tr>
                        <td class="upper" style="padding-top:25px;">Importe Total<br><span class="color_facturado">Flete</span></td>
                        <td class="text-right" style="padding-top:25px;">
                            @Model.Simbolo
                            @if (Model.CodigoISO == Constantes.CodigosISOPais.Colombia)
                            {
                                @(string.Format("{0:#,##0}", Model.Subtotal).Replace(',', '.'))
                            }
                            else
                            {
                                @(string.Format("{0:#,##0.00}", Model.Subtotal).Replace(',', '.'))
                            }
                            <br />
                            <span class="color_facturado">
                                @Model.Simbolo
                            </span>
                            @if (Model.CodigoISO == Constantes.CodigosISOPais.Colombia)
                            {
                                <span class="color_facturado">@(string.Format("{0:#,##0}", Model.Flete).Replace(',', '.'))</span>
                            }
                            else
                            {
                                <span class="color_facturado">@(string.Format("{0:#,##0.00}", Model.Flete).Replace(',', '.'))</span>
                            }
                        </td>
                    </tr>
                </tbody>
            </table>
        }
    }
</div>
<div class="btn_facturado text-center" style="margin-top: -10px;">
    Total Facturado <br />
    <div class="text-lg">
        @Model.Simbolo
        @if (Model.CodigoISO == Constantes.CodigosISOPais.Colombia)
        {
            @(string.Format("{0:#,##0}", Model.ImporteTotal).Replace(',', '.'))
        }
        else
        {
            @(string.Format("{0:#,##0.00}", Model.ImporteTotal).Replace(',', '.'))
        }
    </div>
</div>

<script>
    $(".cbolstClientes").change(function (e) {
        var CodigoCliente = $(this).val();
        var CodigoPedido = $(this).attr("PedidoId");

        ShowLoading();

        jQuery.ajax({
            type: 'POST',
            url: '@Url.Action("ActualizarClientePedidoFacturado", "MisPedidos", new { area = "Mobile" })',
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify({ CodigoPedido: CodigoPedido, CodigoCliente: CodigoCliente }),
            async: true,
            success: function (data) {
                CloseLoading();
            },
            error: function (data, error) {
                if (checkTimeout(data)) {
                    CloseLoading();
                    console.log(data);
                }
            }
        });
    });
</script>