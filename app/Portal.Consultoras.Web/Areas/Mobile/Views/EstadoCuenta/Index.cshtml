@using Portal.Consultoras.Common
@using Portal.Consultoras.Web.Areas.Mobile.Models
@using Portal.Consultoras.Web.Helpers

@model EstadoCuentaMobilModel
@{
    var layout = ViewContext.MobileLayout();
    Layout = string.Format("~/Areas/Mobile/Views/Shared/{0}.cshtml", layout);
}

@if (System.Configuration.ConfigurationManager.AppSettings.Get("PaisesEsika").Contains(ViewBag.PaisAnalytics))
{
    <link rel="stylesheet" href="@Url.Content("~/Content/Css/Mobile/Esika/estado-cuenta.css")">
}
else
{
    <link rel="stylesheet" href="@Url.Content("~/Content/Css/Mobile/Lbel/estado-cuenta.css")">
}

<div class="titulo_mobile nombre_vista">
    @{  var mobileConfiguracion = Html.MobileAppConfiguracion();
        if (mobileConfiguracion.MostrarBotonAtras)
        {
            <a href="@Request.UrlReferrer" class="enlace_regresar catalogosR" title="Regresar"></a>
        }
    }
    ESTADO DE CUENTA
</div>

<div class="fondo_f2f2f2" style="border-bottom:0; background:white;">
    <div class="pestana_esika"></div>
    <div class="pestana_lbel"></div>
</div>   

<!-- NUEVA VISTA ESTADO DE CUENTA -->

<div class="vista_estado_de_cuenta">

    <div class="deuda_actual_estado_cuenta">
        <div class="texto_mi_deuda_actual">
            Mi deuda actual es
        </div>
        <div class="monto_deuda_actual">
            <div class="tipo_moneda_pais">@Model.Simbolo</div>
            <div class="monto_pago_deuda_actual">@Model.MontoPagarStr</div>
        </div>
        <div class="fecha_vencimiento_deuda_actual">
            <span>Vencimiento :</span>
            <span>@Model.FechaVencimiento</span>
        </div>
        <a href="@Url.Action("Index","PagoEnLinea")" class="btn_paga_en_linea_con_credito_visa">
            Paga en línea con visa
        </a>
    </div>

    @if (!string.IsNullOrEmpty(Model.UltimoMovimiento.Glosa))
    {
        <div class="ultimo_pago_recibido">
            <span>Último pago recibido</span>
            <span>@Model.UltimoMovimiento.FechaVencimientoFormatDiaMes</span>
        </div>
        <p class="info_horarios_efectivos_pagos mb-32">
            Los pagos realizados después de las 10 p.m podrás verlos al día siguiente.
        </p>
    }    

    <div class="contenedor_detalle_movimientos_estado_de_cuenta">
        <div class="titulo_movimientos_estado_cuenta">
            Movimientos
            <div class="barra_titulo_movimientos_estado_cuenta"></div>
        </div>
        <div class="grilla_detalle_movimientos_estado_de_cuenta">
            @foreach (var item in Model.ListaEstadoCuentaDetalle)
            {
                var estiloGris = "";
                var tipoMovimiento = "";
                var signo = "";

                if (item.TipoMovimiento == Constantes.EstadoCuentaTipoMovimiento.Abono)
                {
                    tipoMovimiento = "Abono";
                    signo = "-";
                }
                else
                {
                    tipoMovimiento = "Pedido";
                    estiloGris = "fila_gris_detalle_movimiento";
                }
                
                <div class="fila_grilla_detalle_movimiento @estiloGris">
                    <div class="col_grilla_detalle_movimientos fecha_movimiento_estado_de_cuenta">
                        @item.FechaVencimientoFormatDiaMes
                    </div>
                    <div class="col_grilla_detalle_movimientos descripcion_movimiento_estado_de_cuenta">
                    
                    <div class="tipo_movimiento">
                        @tipoMovimiento
                    </div>
                        
                    <div class="descripcion_tipo_movimiento">
                        @item.Glosa
                    </div>
                    </div>
                    <div class="col_grilla_detalle_movimientos monto_movimiento_estado_de_cuenta">
                        <span class="tipo_moneda_pais">@signo @Model.Simbolo</span>
                        <span class="monto_movimiento">@item.MontoStr</span>
                    </div>
                </div>
            }
        </div>
    </div>

    <a href="javascript:;" class="enlace_enviar_detalle_a_correo" title="Enviar detalle a mi correo" onclick="EnviarCorreoConsultora();">
        <span class="icono_enlace_enviar_detalle_a_correo">
            <img src="@Url.Content("~/Content/Images/icono_enviar_detalle_correo.svg")" alt="Enviar detalle a correo" />
        </span>
        <span>Enviar detalle a mi correo</span>
    </a>
    @Html.Hidden("hdn_Correo", Model.CorreoConsultora)
</div>

<!-- FIN - NUEVA VISTA ESTADO DE CUENTA -->

@section scripts{
    <script type="text/javascript">
        var urlEnviarCorreo = '@Url.Action("EnviarCorreo", "EstadoCuenta", new { area = "Mobile" })';
        var esIngresoExterno = '@(ViewContext.GetUniqueSession("IngresoExterno") == null ? 0 : 1)';

        $(document).ready(function () {
            if (esIngresoExterno == '1') $("#listaEstadoCuenta").show();
            else $("#ultimoEstadoCuenta").show();
        });

        function EnviarCorreoConsultora() {
            ShowLoading();

            dataLayer.push({
                'event': 'virtualEvent', 'category': 'Estado de cuenta', 'action': 'Enviar email', 'label': 'Detalle estado de cuenta'
            });

            var correo = $.trim($("#hdn_Correo").val());
            if (correo == "") {
                messageInfo("No tiene una cuenta de correo registrada.");
                CloseLoading();
            }

            jQuery.ajax({
                type: 'POST',
                url: urlEnviarCorreo,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({ correo: correo }),
                success: function (data) {
                    if (checkTimeout(data)) {
                        CloseLoading();
                        messageInfo(data.message);
                    }
                },
                error: function (data, error) {
                    if (checkTimeout(data)) {
                        CloseLoading();
                    }
                }
            });
        }

        function MostrarOcultarListaEstado() {
            dataLayer.push({ 'event': 'virtualEvent', 'category': 'Estado de cuenta', 'action': 'Ver listado', 'label': 'Detalle estado de cuenta' });
            $("#ultimoEstadoCuenta").hide();
            $("#listaEstadoCuenta").fadeIn();
        }
    </script>
}
