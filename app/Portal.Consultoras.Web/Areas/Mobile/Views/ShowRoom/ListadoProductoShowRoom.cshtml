@{
    ViewBag.Title = "Index2";
    Layout = "~/Areas/Mobile/Views/Shared/_MobileLayout.cshtml";
}

@using Portal.Consultoras.Common
@model Portal.Consultoras.Web.Models.ShowRoomEventoModel

@section styles
{
    <style type="text/css" id="estiloShowRoom">
        body {
            background: black;
            padding-top: 0px;
        }

        .slick-slide {
            padding: 0;
        }

        .slick-list {
            margin: 0 !important;
        }

        .ocultarPopup {
            display: none !important;
        }
    </style>

    <link href="@Url.Content("~/Content/Css/Mobile/slick.css")" rel="stylesheet" />
}

<input type="hidden" id="hdPosicionCarruselModel" value="@Model.PosicionCarrusel"/>
<input type="hidden" id="hdTotalProductos" value="@Model.ListaShowRoomOferta.Count"/>
<div class="row">
    <div class=" row_contador">
        <div class="slick-list">
            @{ var posicion = 1; }
            @foreach (var item in Model.ListaShowRoomOferta)
            {
                var ganaHasta = Convert.ToInt32(item.PrecioOferta) - Convert.ToInt32(item.PrecioCatalogo);
                var formatoGanaHasta = "";
                var formatoPrecioCatalogo = "";

                if (Model.CodigoIso == Constantes.CodigosISOPais.Colombia)
                {
                    formatoGanaHasta = string.Format("{0:#,##0}", ganaHasta).Replace(',', '.');
                    formatoPrecioCatalogo = string.Format("{0:#,##0}", item.PrecioCatalogo).Replace(',', '.');
                }
                else
                {
                    if (Model.CodigoIso == Constantes.CodigosISOPais.Chile)
                    {
                        formatoGanaHasta = string.Format("{0:#,##0}", ganaHasta);
                        formatoPrecioCatalogo = string.Format("{0:#,##0}", item.PrecioCatalogo);
                    }
                    else
                    {
                        formatoGanaHasta = Convert.ToInt32(ganaHasta).ToString();
                        formatoPrecioCatalogo = Convert.ToInt32(item.PrecioCatalogo).ToString();
                    }                                   
                }
                var inhabilitar = item.Stock == 0;

                var eje = posicion != 2 ? "" : "slick-current slick-active";
                
                <div class="productoShowRoom @eje" data-posicion="@posicion">
                    <input type="hidden" id="hdOfertaShowRoomID" value="@item.OfertaShowRoomID" />
                    <input type="hidden" class="valorCuv" value="@item.CUV" />
                    <input type="hidden" class="claseMarcaID" value="@item.MarcaID" />
                    <input type="hidden" class="clasePrecioUnidad" value="@item.PrecioCatalogo" />
                    <input type="hidden" class="claseConfiguracionOfertaID" value="@item.ConfiguracionOfertaID" />
                    <input type="hidden" class="DescripcionProd" value="@item.Descripcion" />
                    <input type="hidden" class="DescripcionMarca" value="@item.DescripcionMarca" />
                    <input type="hidden" class="posicionEstrategia" value="@posicion" />

                    <div class="imagen_principal_carrousel">
                        <a class="volver_set_carrousel" href="@Url.Action("Index")">Volver a Sets</a>

                        @if (string.IsNullOrEmpty(item.ImagenProducto))
                        {
                            <img src="@Url.Content("~/Content/Images/showroom/no_disponible.png")" alt="" />
                        }
                        else
                        {
                            <img src="@item.ImagenProducto" alt="" />
                        }
                    </div>
                    <div class="top_triangular">
                        <img src="@Url.Content("~/Content/Images/mobile/img-showroom/top_triangular.png")" alt="" />
                    </div>
                    <div class="contenedor_info_mobile">
                        <div class="titulo_lista">@item.Descripcion</div>
                        
                        @foreach (var detalle in item.ListaDetalleOfertaShowRoom)
                        {
                            <div class="item_detalle_set">
                            <div class="content_imagen_detalle">
                                @if (string.IsNullOrEmpty(detalle.Imagen))
                                {
                                    <img src="@Url.Content("~/Content/Images/showroom/no_disponible.png")" alt="" />
                                }
                                else
                                {
                                    <img src="@detalle.Imagen" alt="" />
                                }
                            </div>
                            <div class="descripcion_detalle">
                                <div class="titulo_descripcion">@detalle.NombreProducto</div>
                                @if (!string.IsNullOrEmpty(detalle.Descripcion1))
                                {
                                    <div class="descripcion_set_showroom">
                                        @detalle.Descripcion1
                                    </div>
                                }
                                @if (!string.IsNullOrEmpty(detalle.Descripcion2))
                                {
                                    <div class="descripcion_set_showroom">
                                        @detalle.Descripcion2
                                    </div>
                                }
                                @if (!string.IsNullOrEmpty(detalle.Descripcion3))
                                {
                                    <div class="descripcion_set_showroom">
                                        @detalle.Descripcion3
                                    </div>
                                }
                            </div>
                        </div>
                        }

                        <div class="precio_content content_centrado">
                            <div class="set_precio_m">
                                SET A SOLO<br>
                                <span>@Model.Simbolo @formatoPrecioCatalogo</span>
                            </div>
                            <div class="set_precio_gana_m">
                                GANA HASTA
                                <span>@Model.Simbolo @formatoGanaHasta</span>
                            </div>
                        </div>
                        <div class="cantidad_texto">CANTIDAD</div>
                        <a class="showroom_menos_carrousel restaCarrusel">-</a>
                        <input type="tel" class="showroom_cantidad_carrousel txtCantidad" value="1" min="1" max="99" oninput="maxLengthCheck(this, 2)" onkeypress=" return FuncionesGenerales.ValidarSoloNumeros(event); ">
                        <a class="showroom_mas_carrousel sumaCarrusel">+</a>
                        <hr class="clear" />
                        <div class="divBotonAgotado">
                            @if (inhabilitar)
                            {
                                <a class="btn_agregar_set">AGOTADO</a>
                            }
                            else
                            {
                                <a class="btn_agregar_set btnAgregarOfertaShowRoom">AGREGAR A PEDIDO</a>
                            }
                        </div>                                           
                    </div>
                </div>
                {
                    posicion++;
                }
            }            
        </div>
    </div>
</div>

<div id="divMensajeProductoAgregado" class="modal fade" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-alert ">
        <div class="modal-content">
            <div class="modal-body">
                <div class="texto_pedido_m">¡Has agregado <span id="spnNombreOfertaShowRoom">Hola</span> a tu pedido!</div>
                <a id="btnCerrarPedido" class="boton_volver_set">VOLVER A SETS</a>
                <a id="btnIrMipedido" class="boton_ver_pedido" href="@Url.Action("Detalle", "Pedido", new { area = "Mobile" })">VER MI PEDIDO</a>

            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script src="@Url.Content("~/Scripts/slick.min.js")"></script>
    <script type="text/javascript">
        var urlEnHorarioRestringido = '@Url.Action("EnHorarioRestringido", "Pedido", new {area = ""})';
        var urlValidarUnidadesPermitidasPedidoProducto = '@Url.Action("ValidarUnidadesPermitidasPedidoProducto", "ShowRoom", new {area = ""})';
        var urlObtenerStockActualProducto = '@Url.Action("ObtenerStockActualProducto", "ShowRoom", new {area = ""})';
        var urlInsertOfertaWebPortal = '@Url.Action("InsertOfertaWebPortal", "ShowRoom", new {area = ""})';
        var urlActualizarCantidadTotalPedido = '@Url.Action("ObtenerResumenPedido", "OfertaLiquidacion", new {area = "Mobile"})';

        $(document).ready(function() {
            $("body").on("click", ".sumaCarrusel", function() {
                var article = $(this).parents(".productoShowRoom").eq(0);
                var cantidad = $(article).find(".txtCantidad").val();
                var cajaTexto = $(article).find(".txtCantidad");
                if (cantidad == 99)
                    $(cajaTexto).val(Number(99));
                else
                    $(cajaTexto).val(Number(cantidad) + 1);
            });

            $("body").on("click", ".restaCarrusel", function() {
                var article = $(this).parents(".productoShowRoom").eq(0);
                var cantidad = $(article).find(".txtCantidad").val();
                var cajaTexto = $(article).find(".txtCantidad");
                if (cantidad == 1)
                    $(cajaTexto).val(Number(1));
                else
                    $(cajaTexto).val(Number(cantidad) - 1);
            });

            $("#btnCerrarPedido").click(function() {
                $("#divMensajeProductoAgregado").modal("hide");
                
                dataLayer.push({
                    'event': 'virtualEvent',
                    'category': 'Ofertas Showroom',
                    'action': 'Click popup Bolsa',
                    'label': 'Volver a sets'
                });
            });
            
            $("#btnIrMipedido").click(function () {
                dataLayer.push({
                    'event': 'virtualEvent',
                    'category': 'Ofertas Showroom',
                    'action': 'Click popup Bolsa',
                    'label': 'Ir a carrito'
                });
            });

            $('.slick-list').on('init', function(event, slick) {
                var posicion = $("#hdPosicionCarruselModel").val();
                if (parseInt(posicion) > 0)
                    posicion--;

                setTimeout(function() {
                    slick.setPosition();
                    slick.slickGoTo(parseInt(posicion));
                }, 500);
            });


            $('.slick-list').slick({
                slidesToShow: 1,
                slidesToScroll: 1,
                autoplay: false,
                dots: false,
                prevArrow: '<i class="slick-prev-showroom" onclick="javascript:TagManagerCarruselPrevia(false);"></i>',
                nextArrow: '<i class="slick-next-showroom" onclick="javascript:TagManagerCarruselSiguiente(false);"></i>',
                infinite: true,
                speed: 300,
                width: 320,
                responsive: [
                    {
                        breakpoint: 960,
                        settings: { slidesToShow: 1, slidesToScroll: 1 }
                    },
                    {
                        breakpoint: 680,
                        settings: { slidesToShow: 1, slidesToScroll: 1 }
                    },
                    {
                        breakpoint: 380,
                        settings: { slidesToShow: 1, slidesToScroll: 1 }
                    }
                ]
            });
            
            $(".slick-list").on('swipe', function (event, slick, direction) {
                if (direction == 'left') {
                    TagManagerCarruselSiguiente(true);
                } else if (direction == 'right') {
                    TagManagerCarruselPrevia(true);
                }
            });

            $("body").on("click", ".btnAgregarOfertaShowRoom", function(e) {
                var article = $(this).parents(".productoShowRoom").eq(0);
                var cantidad = $(article).find(".txtCantidad").val();

                AgregarOfertaShowRoom(article, cantidad);
                e.preventDefault();
                (this).blur();
            });

            AgregarTagManagerClickProducto();            
        });

        function AgregarOfertaShowRoom(article, cantidad) {
            var CUV = $(article).find(".valorCuv").val();
            var MarcaID = $(article).find(".claseMarcaID").val();
            var PrecioUnidad = $(article).find(".clasePrecioUnidad").val();
            var ConfiguracionOfertaID = $(article).find(".claseConfiguracionOfertaID").val();
            var nombreProducto = $(article).find(".DescripcionProd").val();
            var posicion = $(article).find(".posicionEstrategia").val();
            var descripcionMarca = $(article).find(".DescripcionMarca").val();

            if (cantidad == "" || cantidad == 0) {
                messageInfo("La cantidad ingresada debe ser mayor que 0, verifique.");
            } else {
                ShowLoading();

                $.ajaxSetup({ cache: false });
                $.getJSON(urlValidarUnidadesPermitidasPedidoProducto, { CUV: CUV }, function(data) {

                    if (parseInt(data.Saldo) < parseInt(cantidad)) {
                        var Saldo = data.Saldo;
                        var UnidadesPermitidas = data.UnidadesPermitidas;

                        $.getJSON(urlObtenerStockActualProducto, { CUV: CUV }, function(data) {

                            $(article).find(".claseStock").text(data.Stock);

                            CloseLoading();
                            if (Saldo == UnidadesPermitidas) {
                                messageInfo("Lamentablemente, la cantidad solicitada sobrepasa las Unidades Permitidas de Venta (" + UnidadesPermitidas + ") del producto.");
                            } else {
                                if (Saldo == "0")
                                    messageInfo("Las Unidades Permitidas de Venta son solo (" + UnidadesPermitidas + "), pero Usted ya no puede adicionar más, debido a que ya agregó este producto a su pedido, verifique.");
                                else
                                    messageInfo("Las Unidades Permitidas de Venta son solo (" + UnidadesPermitidas + "), pero Usted solo puede adicionar (" + Saldo + ") más, debido a que ya agregó este producto a su pedido, verifique.");
                            }
                        });
                    } else {
                        var Item = {
                            MarcaID: MarcaID,
                            Cantidad: cantidad,
                            PrecioUnidad: PrecioUnidad,
                            CUV: CUV,
                            ConfiguracionOfertaID: ConfiguracionOfertaID
                        };

                        $.ajaxSetup({ cache: false });
                        $.getJSON(urlObtenerStockActualProducto, { CUV: CUV }, function(data) {

                            if (parseInt(data.Stock) < parseInt(cantidad)) {
                                $(article).find(".claseStock").text(data.Stock);

                                CloseLoading();
                                messageInfo("Lamentablemente, la cantidad solicitada sobrepasa el stock actual (" + data.Stock + ") del producto, verifique.");
                            } else {
                                jQuery.ajax({
                                    type: 'POST',
                                    url: urlInsertOfertaWebPortal,
                                    dataType: 'json',
                                    contentType: 'application/json; charset=utf-8',
                                    data: JSON.stringify(Item),
                                    async: true,
                                    success: function(response) {
                                        CloseLoading();

                                        if (response.success == true) {
                                            $("#spnNombreOfertaShowRoom").html(nombreProducto);

                                            $("#divMensajeProductoAgregado").modal("show");

                                            var stockRestante = parseInt(data.Stock) - parseInt(cantidad);
                                            if (stockRestante < 1) {
                                                $(article).find(".txtCantidad").val("0");

                                                var htmlBotonAgotado = '<a class="btn_agregar_set">AGOTADO</a>';
                                                var divBotonAgotado = $(article).find(".divBotonAgotado");
                                                $(divBotonAgotado).html("");
                                                $(divBotonAgotado).html(htmlBotonAgotado);
                                            } else {
                                                $(article).find(".txtCantidad").val("1");
                                            }

                                            AgregarTagManagerProductoAgregado(CUV, nombreProducto, PrecioUnidad, cantidad, descripcionMarca);
                                            ActualizarCantidadTotalPedido();
                                        } else {
                                            messageInfo(response.message);
                                        }
                                    },
                                    error: function(response, error) {
                                        if (checkTimeout(response)) {
                                            CloseLoading();
                                            console.log(response);
                                        }
                                    }
                                });
                            }
                        });
                    }
                });
            }
        }

        function ActualizarCantidadTotalPedido() {
            jQuery.ajax({
                type: 'POST',
                url: urlActualizarCantidadTotalPedido,
                dataType: 'json',
                async: true,
                success: function(response) {
                    if (checkTimeout(response)) {
                        if (response.success) {
                            var data = response.data;
                            $(".num-menu-shop").html(data.CantidadProductos);
                        } else {
                            window.messageInfo(response.message);
                        }
                    }
                },
                error: function(response, error) {
                    if (checkTimeout(response)) {
                        console.log(response);
                    }
                }
            });
        }

        function AgregarTagManagerProductoAgregado(CUV, nombreProducto, PrecioUnidad, cantidad, descripcionMarca) {
            dataLayer.push({
                'event': 'addToCart',
                'ecommerce': {
                    'add': {
                        'products': [{
                            'name': nombreProducto,
                            'id': CUV,
                            'price': PrecioUnidad,
                            'brand': descripcionMarca,
                            'variant': 'Ofertas Showroom',
                            'category': 'NO DISPONIBLE',
                            'quantity': cantidad
                        }]
                    }
                }
            });
        }

        function AgregarTagManagerClickProducto() {
            var posicion = $("#hdPosicionCarruselModel").val();
            if (posicion == 0) posicion = 1;

            var article = $(".productoShowRoom[data-posicion=" + posicion + "]");
            var nombreProducto = $(article).find(".DescripcionProd").val();
            var cuv = $(article).find(".valorCuv").val();
            var precio = $(article).find(".clasePrecioUnidad").val();
            var marca = $(article).find(".DescripcionMarca").val();
            //var posicion = $(article).find(".posicionEstrategia").val();
            var list = 'Ofertas Showroom popUp';
            
            dataLayer.push({
                'event': 'productDetails',
                'ecommerce': {
                    'detail': {
                        'products': [{
                            'name': nombreProducto,
                            'id': cuv,
                            'price': precio,
                            'brand': marca,
                            'category': 'NO DISPONIBLE',
                        }]
                    }
                }
            });
        }

        function TagManagerCarruselPrevia(esDrag) {
            var totalProductos = $("#hdTotalProductos").val();
            var cantidadRecomendadosVisibles = $(".slick-active").length;

            var articleActual = $(".slick-active").get(cantidadRecomendadosVisibles - 1);
            var posicionEstrategia = $(articleActual).find(".posicionEstrategia").val();

            if (!esDrag) {
                if (posicionEstrategia == 1) {
                    posicionEstrategia = totalProductos;
                } else {
                    posicionEstrategia = posicionEstrategia - 1;
                }
            }

            var article = $(".productoShowRoom[data-posicion=" + posicionEstrategia + "]");
            var nombreProducto = $(article).find(".DescripcionProd").val();
            var cuv = $(article).find(".valorCuv").val();
            var precio = $(article).find(".clasePrecioUnidad").val();
            var marca = $(article).find(".DescripcionMarca").val();

            dataLayer.push({
                'event': 'productDetails',
                'ecommerce': {
                    'detail': {
                        'products': [{
                            'name': nombreProducto,
                            'id': cuv,
                            'price': precio,
                            'brand': marca,
                            'category': 'NO DISPONIBLE',
                        }]
                    }
                }
            });
        }

        function TagManagerCarruselSiguiente(esDrag) {
            var totalProductos = $("#hdTotalProductos").val();
            var cantidadRecomendadosVisibles = $(".slick-active").length;            

            var articleActual = $(".slick-active").get(cantidadRecomendadosVisibles - 1);
            var posicionEstrategia = $(articleActual).find(".posicionEstrategia").val();
            
            if (!esDrag) {
                if (posicionEstrategia == parseInt(totalProductos)) {
                    posicionEstrategia = 1;
                } else {
                    posicionEstrategia = parseInt(posicionEstrategia) + 1;
                }
            }
            
            var article = $(".productoShowRoom[data-posicion=" + posicionEstrategia + "]");
            var nombreProducto = $(article).find(".DescripcionProd").val();
            var cuv = $(article).find(".valorCuv").val();
            var precio = $(article).find(".clasePrecioUnidad").val();
            var marca = $(article).find(".DescripcionMarca").val();

            dataLayer.push({
                'event': 'productDetails',
                'ecommerce': {
                    'detail': {
                        'products': [{
                            'name': nombreProducto,
                            'id': cuv,
                            'price': precio,
                            'brand': marca,
                            'category': 'NO DISPONIBLE',
                        }]
                    }
                }
            });
        }

        function maxLengthCheck(object, cantidadMaxima) {
            if (object.value.length > cantidadMaxima)
                object.value = object.value.slice(0, cantidadMaxima);
        }
    </script>
}