@using Portal.Consultoras.Common;
@using Portal.Consultoras.Web.Models.PagoEnLinea;
@model PaymentInfo

@{
    ViewBag.Title = "Pago En Línea";
    Layout = "~/Areas/Mobile/Views/Shared/_MobileLayout.cshtml";
    var visibleFields = (string[])ViewBag.PagoLineaCampos;
}

@section styles{

    <link rel="stylesheet" href="@Url.Content("~/Content/Css/ui.jquery/Esika/jquery-ui.css")">

    @if (System.Configuration.ConfigurationManager.AppSettings.Get("PaisesEsika").Contains(ViewBag.PaisAnalytics == null ? "" : ViewBag.PaisAnalytics))
    {

        <link rel="stylesheet" href="@Url.Content("~/Content/Css/Mobile/Esika/pago-en-linea.css")">

    }
    else
    {

        <link rel="stylesheet" href="@Url.Content("~/Content/Css/Mobile/Lbel/pago-en-linea.css")">

    }

    <style type="text/css">
        .footer-page {
            display: none;
            margin-bottom: 54px;
        }

        #btn_init {
            display: none !important;
        }

        #btn_open {
            display: none !important;
        }
    </style>

}

<div class="cabecera_vista_pago_en_linea">
    <a id="linkRegresar" href="@Request.UrlReferrer" class="enlace_regresar ajustePosicionFlecha" style="display:normal" title="Regresar"></a>
    PAGO EN LÍNEA
</div>

<div class="content_belcorp">
    <div class="pestana_lbel"></div>
    <div class="proceso_de_pago_en_linea">
        <div class="cantidad_pasos_proceso_pago">

            <span class="paso_proceso_pago_en_linea paso_activo paso_completado">1</span>
            <span class="paso_proceso_pago_en_linea paso_activo paso_completado">2</span>
            <span class="paso_proceso_pago_en_linea mr-0 paso_activo">3</span>

            <div class="linea_conectora_pasos">
                <span class="fondo_pasos_proceso_pago_avance"></span>
            </div>
        </div>
        <div class="pasarela_pago">
            <h3 class="text-center">
                TARJETA DE CRÉDITO O DÉBITO
            </h3>
            <div class="formulario_pasarela_pago">
                @using (Html.BeginForm("PasarelaPago", "PagoEnLinea", FormMethod.Post, new {id = "frmPay"}))
                {
                    @Html.AntiForgeryToken()
                    <div class="grupo_campo_formulario_pasarela_pago">
                        <label class="nom_campo_formulario_pasarela_pago w-100">*Número de tarjeta :</label>
                        @Html.TextBoxFor(m => m.NumberCard, new { @class = "campo_formulario_pasarela_pago w-100 campo_num_tarjeta_credito_o_debito" })
                        @Html.ValidationMessageFor(m => m.NumberCard)
                        <div class="mensaje_validacion text-center w-100" style="display: none;">
                            <span class="icono_validacion_incorrecta"></span>
                            <span>El número ingresado no es correcto.</span>
                        </div>
                    </div>
                    <div class="grupo_campo_formulario_pasarela_pago">
                        <div class="w-69 pr-7 vAlignTop">
                            <label class="nom_campo_formulario_pasarela_pago w-100">*Fecha de expiración :</label>
                            @Html.DropDownListFor(m => m.ExpireMonth, Enumerable.Range(1, 12).Select(i => new SelectListItem { Value = i.ToString("00"), Text = i.ToString("00") }), "MES", new { @class = "campo_formulario_pasarela_pago campo_seleccion_fecha_expiracion campo_mes mr-5" })
                            @Html.DropDownListFor(m => m.ExpireYear, Enumerable.Range(DateTime.Now.Year, 20).Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString() }), "AÑO", new { @class = "campo_formulario_pasarela_pago campo_seleccion_fecha_expiracion campo_anio" })
                            @Html.ValidationMessageFor(m => m.ExpireMonth)
                            @Html.ValidationMessageFor(m => m.ExpireYear)
                            <div class="mensaje_validacion text-center w-100" style="display: none;">
                                <span class="icono_validacion_incorrecta"></span>
                                <span>La fecha no es válida.</span>
                            </div>
                        </div>
                        <div class="w-30 pl-8 vAlignTop">
                            <label class="nom_campo_formulario_pasarela_pago w-100">
                                <span>*CVV :</span>
                                <span class="tooltip_informativo">
                                    <img src="@Url.Content("~/Content/Images/icono_tooltip_informativo.svg")" alt="Tooltip Informativo" />
                                    <span class="info_tooltip_informativo">
                                        Son los 3 dígitos que se ubican en la parte posterior de tu tarjeta, al lado derecho.
                                    </span>
                                </span>
                            </label>
                            @Html.TextBoxFor(m => m.Cvv, new { @class = "campo_formulario_pasarela_pago w-100" })
                            @Html.ValidationMessageFor(m => m.Cvv)
                        </div>
                    </div>
                    <div class="grupo_campo_formulario_pasarela_pago">
                        <label class="nom_campo_formulario_pasarela_pago w-100">*Titular de la tarjeta :</label>
                        <input type="text" value="" class="campo_formulario_pasarela_pago w-100" placeholder="SOFÍA GARCÍA" />
                    </div>
                    if (visibleFields.Contains(Constantes.PagoEnLineaCampos.FechaNacimiento))
                    {
                        <div class="grupo_campo_formulario_pasarela_pago">
                            <label class="nom_campo_formulario_pasarela_pago w-100">*Fecha de nacimiento :</label>
                            @Html.TextBoxFor(m => m.Birthdate, new { @class = "campo_formulario_pasarela_pago w-100" , id = "CampoFechaNacimiento", placeholder = "00/00/0000" })
                            @Html.ValidationMessageFor(m => m.Birthdate)
                        </div>
                    }
                    if (visibleFields.Contains(Constantes.PagoEnLineaCampos.Email))
                    {
                        <div class="grupo_campo_formulario_pasarela_pago">
                            <label class="nom_campo_formulario_pasarela_pago w-100">*Correo Electrónico :</label>
                            @Html.TextBoxFor(m => m.Email, new { @class = "campo_formulario_pasarela_pago w-100", placeholder = "tucorreo@belcorp.biz" })
                            @Html.ValidationMessageFor(m => m.Email)
                        </div>
                    }
                    if (visibleFields.Contains(Constantes.PagoEnLineaCampos.Celular))
                    {
                        <div class="grupo_campo_formulario_pasarela_pago">
                            <label class="nom_campo_formulario_pasarela_pago w-100">*Número de celular :</label>
                            @Html.TextBoxFor(m => m.Phone, new { @class = "campo_formulario_pasarela_pago w-100", placeholder = "000000000" })
                            @Html.ValidationMessageFor(m => m.Phone)
                        </div>
                    }
                    <button type="submit" class="btn_pago_tarjeta_credito text-bold text-uppercase default-background w-100 mt-30">
                        Pagar
                    </button>
                }
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script>
        $(document).ready(function () {
            $("#CampoFechaNacimiento").datepicker();
            $("form#frmPay :input").each(function(){
                var input = $(this);
                var value = input.attr('data-val-length-max');
                console.log(value);
                if (value) {
                    input.prop('maxlength', value);
                }
            });
        });
    </script>    
    
}