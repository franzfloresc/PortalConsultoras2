@* R2319 - AAHA 03022015 - Parte 6 - Inicio *@
@model Portal.Consultoras.Web.Models.SolicitudClienteModel
@{
    ViewBag.Title = "Solicitudes de pedidos de nuevos clientes";
    Layout = "~/Views/Shared/_SACLayout.cshtml";
}
<script type="text/javascript">
    jQuery(document).ready(function () {
        fnGrilla();
        var mensaje = 'Máximo 400 caracteres';
        $('textarea[maxlength]').keyup(function () {

            var limit = parseInt($(this).attr('maxlength'));
            var text = $(this).val();
            var chars = text.length;

            if (chars > limit) {
                var new_text = text.substr(0, limit);
                $(this).val(new_text);
            }
        });
        $('textarea[maxlength]').focus(function () {
            var valor = $(this).val();
            if (valor == mensaje) {
                $(this).val('');
            }
        });
        $('textarea[maxlength]').blur(function () {
            var valor = $(this).val();
            if (valor == '') {
                $(this).val(mensaje);
            }
        });
        $('#btnEnviar').click(function () {
            var nombreGZ = $("#txtNombreGZ").val();
            var emailGZ = $("#txtEmailGZ").val();
            var mensajeaGZ = $("#txtMensajeaGZ").val();

            if ($.trim(nombreGZ) == "") {
                alert("No ingresó el nombre.");
                return false;
            }

            if ($.trim(emailGZ) == "") {
                alert("No ingresó el correo electrónico.");
                return false;
            } else if (!IsEmail(emailGZ)) {
                alert("No ingresó un correo electrónico válido.");
                return false;
            }

            if ($.trim(mensajeaGZ) == "" || $.trim(mensajeaGZ) == mensaje) {
                alert("No ingresó el mensaje.");
                return false;
            }

            var params = {
                NombreGZ: nombreGZ,
                EmailGZ: emailGZ,
                MensajeaGZ: mensajeaGZ,
                SolicitudClienteId: $("#SolicitudClienteId").val()
            };

            jQuery.ajax({
                type: 'POST',
                url: baseUrl + 'SolicitudCliente/Enviar',
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(params),
                async: true,
                success: function (data) {
                    if (checkTimeout(data)) {
                        if (data.success == true) {
                            alert(data.message);
                            $(this).hide();
                            $("#txtNombreGZ").attr("readonly", "readonly");
                            $("#txtEmailGZ").attr("readonly", "readonly");
                            $("#txtMensajeaGZ").attr("readonly", "readonly");
                        }
                        else {
                            alert(data.message);
                        }
                    }
                },
                error: function (data, error) {
                    if (checkTimeout(data)) {
                        alert(data.message);
                    }
                }
            });
        });
        $('#btnRegresar').click(function () {
            document.getElementById("frmSolicitudCreditoDetalle").action = baseUrl + 'SolicitudCliente/Index';
            document.getElementById("frmSolicitudCreditoDetalle").method = 'POST';
            document.getElementById("frmSolicitudCreditoDetalle").submit();
        });
    });
    function fnGrilla() {
        jQuery("#list").jqGrid({
            url: baseUrl + "SolicitudCliente/Obtener",
            hidegrid: false,
            datatype: 'json',
            postData: ({
                SolicitudClienteID: function () { return jQuery.trim($("#SolicitudClienteId").val()); }
            }),
            mtype: 'GET',
            contentType: "application/json; charset=utf-8",
            colNames: ['CUV', 'Descripción','Tono', 'Cantidad', 'Precio sin Descuento', 'Precio Total'],
            colModel: [
                { name: 'CUV', index: 'CUV', width: 20, editable: true, sortable: true, resizable: false, hidden: true },
                { name: 'DescripcionProducto', index: 'DescripcionProducto', width: 180, editable: true, sortable: false, resizable: false },
                { name: 'Tono', index: 'Tono', width: 30, editable: true, sortable: false, resizable: false, align: 'center' },
                { name: 'Cantidad', index: 'Cantidad', width: 30, editable: true, sortable: false, resizable: false, align: 'center' },
                { name: 'Precio', index: 'Precio', width: 40, editable: true, sortable: false, resizable: false, align: 'center' },
                { name: 'Total', index: 'Total', width: 40, editable: true, sortable: false, resizable: false, align: 'center' }
            ],
            jsonReader:
            {
                root: "rows",
                page: "page",
                total: "total", 
                records: "records",
                repeatitems: true,
                cell: "cell",
                id: "id"
            },
            pager: jQuery('#pager'),
            loadtext: 'Cargando datos...',
            recordtext: "{0} - {1} de {2} Registros",
            emptyrecords: 'No hay resultados',
            rowNum: 100,
            scrollOffset: 0,
            rowList: [10, 20, 30, 40, 50],
            sortname: 'Mensaje',
            sortorder: 'asc',
            viewrecords: true,
            multiselect: false,
            height: 'auto',
            width: 930,
            pgtext: 'Pág: {0} de {1}',
            altRows: true,
            altclass: 'jQGridAltRowClass',
            loadComplete: function () { },
            gridComplete: function () {
                $("#pager").hide();
            }
        });
        jQuery("#list").jqGrid('navGrid', "#pager", { edit: false, add: false, refresh: false, del: false, search: false });
        jQuery("#list").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');

        if ('@ViewBag.MarcaID' == '2') {
            jQuery("#list").hideCol("Precio").setGridWidth(930);
            jQuery("#list").hideCol("Total").setGridWidth(930);
        }
    }
    function IsEmail(email) {
        var re = /^(([^<>()[\]\\.,;:\s@@\"]+(\.[^<>()[\]\\.,;:\s@@\"]+)*)|(\".+\"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        return re.test(email);
    }
    function soloLetras(e) {
        key = e.keyCode || e.which;
        tecla = String.fromCharCode(key).toLowerCase();
        letras = " áéíóúabcdefghijklmnñopqrstuvwxyz";
        especiales = "8-37-39-46";

        tecla_especial = false
        for (var i in especiales) {
            if (key == especiales[i]) {
                tecla_especial = true;
                break;
            }
        }

        if (letras.indexOf(tecla) == -1 && !tecla_especial) {
            return false;
        }
    }
</script>
<style type="text/css">
    .wrap
    {
        padding: 5px 0 0 0;
    }
</style>
<form id="frmSolicitudCreditoDetalle">
    @Html.HiddenFor(p => p.Campania)
    @Html.HiddenFor(p=>p.Estado)
    @Html.HiddenFor(p=>p.Paginacion)
</form>
<div class="wrap_cab">
    <div class="filtros2">
        <div class="elements">
            <div class="div-2">
                <h1><span>Detalle de solicitud de pedido de nuevo cliente</span></h1>
            </div>
        </div>
    </div>
</div>
<div class="wrap">
</div>
<div class="wrap">
    <div class="container clearfix">
        <div class="border-wrapper_reg">
            @*CO587 - Validar nulos Inicio *@
            <div class="div-2">
                <div class="columna_titulo_ubigeo label1">@ViewBag.UnidadGeografica1</div>
                <div class="columna_descripcion_ubigeo label2">@Html.Encode(Model.UnidadGeografica1 != null ? Model.UnidadGeografica1.ToUpper() : string.Empty)</div>
                <div class="columna_titulo_ubigeo label1">@ViewBag.UnidadGeografica2</div>
                <div class="columna_descripcion_ubigeo label2">@Html.Encode(Model.UnidadGeografica2 != null ? Model.UnidadGeografica2.ToUpper() : string.Empty)</div>
                <div class="columna_titulo_ubigeo label1">@ViewBag.UnidadGeografica3</div>
                <div class="columna_descripcion_ubigeo label2">@Html.Encode(Model.UnidadGeografica3 != null ? Model.UnidadGeografica3.ToUpper() : string.Empty)</div>
            </div>
            <div class="div-2">
                <div class="columna_titulo label1">Dirección:</div>
                <div class="columna_descripcion label2">@Html.Encode(Model.Direccion != null ? Model.Direccion.ToUpper() : string.Empty)</div>
            </div>
            <div class="div-2">
                <div class="columna_titulo label1">Nombre del cliente:</div>
                <div class="columna_descripcion label2">@Html.Encode(Model.NombreCliente != null ? Model.NombreCliente.ToUpper() : string.Empty)</div>
            </div>
            <div class="div-2">
                <div class="columna_titulo label1">Correo electrónico:</div>
                <div class="columna_descripcion label2">@Html.Encode(Model.EmailCliente != null ? Model.EmailCliente : string.Empty)</div>
            </div>
            <div class="div-2">
                <div class="columna_titulo label1">Teléfono del cliente:</div>
                <div class="columna_descripcion label2">@Html.Encode(Model.TelefonoCliente != null ? Model.TelefonoCliente.ToUpper() : string.Empty)</div>
            </div>
            @*CO587 - Validar nulos Fin *@
            <div class="div-2">
                <div class="columna_titulo label1">Mensaje del cliente:</div>
                <div class="columna_descripcion label2">
                    @Model.Mensaje
                </div>
            </div>
        </div>
    </div>
</div>
@if (ViewBag.TieneDetalle != 0)
{
    <div class="wrap">
        <div class="container clearfix">
            <div class="border-wrapper">
                <table id="list"></table>
                <div id="pager"></div>
            </div>
        </div>
    </div>
    if (ViewBag.MarcaID != 2)
    {
    <div class="wrap">
        <div class="container clearfix">
            <div class="total-solicitud">Total Pedido: @ViewBag.Simbolo @ViewBag.MontoTotal</div>
        </div>
    </div>
    }
}
<div class="wrap">
    <div class="container clearfix">
        <div class="border-wrapper_reg">
            <div class="div-2">
                <div class="columna_titulo_gz label1">Sección:</div>
                <div class="columna_titulo_gz label1" style="margin-right: 315px;">
                    @Html.Encode(Model.Seccion)
                </div>
            </div>
            <div class="div-2">
                <div class="columna_titulo_gz label1">Nombre:</div>
                <div class="campo-text borde_redondeado">
                    @if (Model.NombreGZ != null && Model.NombreGZ != string.Empty)
                    {
                        <input type="text" id="txtNombreGZ" maxlength="250" readonly="readonly" value="@Html.Encode(Model.NombreGZ)" />
                    }
                    else
                    {
                        <input type="text" id="txtNombreGZ" maxlength="250" onkeypress="return soloLetras(event)" value="@Html.Encode(Model.NombreConsultoraAsignada)" />
                    }
                </div>
            </div>
            <div class="div-2">
                <div class="columna_titulo_gz label1">Correo electrónico:</div>
                <div class="campo-text borde_redondeado">
                    @if (Model.EmailGZ != null && Model.EmailGZ != string.Empty)
                    {
                        <input type="text" id="txtEmailGZ" maxlength="100" readonly="readonly" value="@Html.Encode(Model.EmailGZ)" />
                    }
                    else
                    {
                        <input type="text" id="txtEmailGZ" maxlength="100" value="@Html.Encode(Model.CorreoConsultoraAsginada)"/>
                    }
                </div>
            </div>
            <div class="div-2">
                <div class="columna_titulo_gz label1">Mensaje:</div>
            </div>
            <div class="div-2">
                @if (Model.MensajeaGZ != null && Model.MensajeaGZ != string.Empty)
                {
                    <textarea id="txtMensajeaGZ" maxlength="400" readonly="readonly">@Model.MensajeaGZ</textarea>
                    <input type="button" name="btnRegresar" id="btnRegresar" value="Regresar" class="btn" />
                }
                else
                {
                    <textarea id="txtMensajeaGZ" maxlength="400">El cliente nos ha hecho el pedido a través de la página web de L´Bel, Ésika, Cyzone u otro aplicativo digital. ¡Motiva a la Consultora que elijas a que se convierta en su Consultora de Belleza y le ofrezca los productos todas las campañas!</textarea>
                    <input type="button" name="btnEnviar" style="margin-top: -87px; margin-left: 709px;" id="btnEnviar" value="Enviar" class="btn" />
                    <input type="button" name="btnRegresar" style="margin-top: -40px; margin-left: 709px;" id="btnRegresar" value="Regresar" class="btn" />
                }
            </div>
        </div>
    </div>
</div>
<div id="loadingScreen"></div>
@Html.HiddenFor(p => p.SolicitudClienteId);
@* R2319 - AAHA 03022015 - Parte 6 - Fin *@