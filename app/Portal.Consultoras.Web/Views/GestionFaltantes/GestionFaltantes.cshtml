@model Portal.Consultoras.Web.Models.GestionFaltantesModel
@{
    ViewBag.Title = "Gestion Faltante";
}

<style type="text/css">
    #SelectedRowList {
        margin-top: 5px;
        border: 1px solid #999;
        background-color: #EEE;
        padding: 5px;
    }
</style>


<script type="text/javascript" src="~/Scripts/jquery.form.js"></script>
<script type="text/javascript">


    var arrayCheckDisabled = new Array();
    var arrayCheckDelete = new Array();
    var arrayCheckNotDelete = new Array();
    var selectTotal = false;
    var totalRegistros = 0;
    var arrayDataDelete = new Array();
    var flagSelectAll = false;

    function clearDataGlobal() {
        arrayCheckDisabled = [];
        arrayCheckDelete = [];
        arrayCheckNotDelete = [];
        selectTotal = false;
        totalRegistros = 0;
    }

    Array.prototype.removeItem = function (a) {
        for (i = 0; i < this.length; i++) {
            if (this[i] == a) {
                for (i2 = i; i2 < this.length - 1; i2++) {
                    this[i2] = this[i2 + 1];
                }
                this.length = this.length - 1;
                return;
            }
        }
    };
    Array.prototype.clear = function () {
        var ii = this.length;
        for (var i = 0; i < ii; i++) {
            this.pop();
        }
    };

    if (!Array.prototype.filter) {
        Array.prototype.filter = function (fun) {
            "use strict";

            if (this == null)
                throw new TypeError();

            var t = Object(this);
            var len = t.length >>> 0;
            if (typeof fun != "function")
                throw new TypeError();

            var res = [];
            var thisp = arguments[1];
            for (var i = 0; i < len; i++) {
                if (i in t) {
                    var val = t[i]; 
                    if (fun.call(thisp, val, i, t))
                        res.push(val);
                }
            }
            return res;
        };
    }

    if (!Array.prototype.indexOf) {
        Array.prototype.indexOf = function (elt) {
            var len = this.length >>> 0;

            var from = Number(arguments[1]) || 0;
            from = (from < 0)
                 ? Math.ceil(from)
                 : Math.floor(from);
            if (from < 0)
                from += len;
            for (; from < len; from++) {
                if (from in this &&
                    this[from] === elt)
                    return from;
            }
            return -1;
        };
    }

    function ActiveZone(isChecked) {
        if (isChecked && $('#ddlPais').val() == "") {
            alert("Debe seleccionar un País.");
            return false;
        }
        var elem = $("#txtZona");
        var elem2 = $("#ZonaID");
        if (isChecked) {
            elem.removeAttr("disabled").removeClass("input_disabled").addClass("input_normal");
            elem.focus();
        }
        else {
            elem.attr("disabled", "disabled").removeClass("input_normal").addClass("input_disabled");
            elem.val("");
            elem2.val("");
        }
        return true;
    }

    function getSelectionStart(el) {
        if (el.selectionStart) {
            return el.selectionStart;
        } else if (document.selection) {
            el.focus();

            var r = document.selection.createRange();
            if (r == null) {
                return 0;
            }

            var re = el.createTextRange(),
                rc = re.duplicate();
            re.moveToBookmark(r.getBookmark());
            rc.setEndPoint('EndToStart', re);

            return rc.text.length;
        }
        return 0;
    }

    jQuery(document).ready(function () {
        fnForm();
        if ($("#ddlPais").val() != 0)
        {
            var Id = $("#ddlPais").val();
            if (Id != null) {
                waitingDialog({});
                $.ajaxSetup({ cache: false });
                $.getJSON(baseUrl + 'BaseAdm/ObtenerCampaniasPorPaisOUsuario', { PaisID: Id == "" ? 0 : Id }, function (data) {
                    if (checkTimeout(data)) {
                        var ddlCampania = $("#ddlCampania");
                        ddlCampania.empty();
                        ddlCampania.append($('<option/>', {
                            value: 0,
                            text: "-- Seleccionar --"
                        }));
                        limpiar();
                        if (Id != "") {
                            if (data.lista.length > 0) {
                                for (var item in data.lista) {
                                    if (data.lista[item].CampaniaID) {
                                        ddlCampania.append($('<option/>', {
                                            value: data.lista[item].CampaniaID,
                                            text: data.lista[item].Codigo
                                        }));
                                    }
                                }
                            }
                        }
                        closeWaitingDialog();
                    }
                    if (checkTimeout(data)) {
                        var ddlCampania = $("#ddlCampaniaM");
                        ddlCampania.empty();
                        ddlCampania.append($('<option/>', {
                            value: 0,
                            text: "-- Seleccionar --"
                        }));
                        if (Id != "") {
                            if (data.lista.length > 0) {
                                for (var item in data.lista) {
                                    if (data.lista[item].CampaniaID) {
                                        ddlCampania.append($('<option/>', {
                                            value: data.lista[item].CampaniaID,
                                            text: data.lista[item].Codigo
                                        }));
                                    }
                                }
                            }
                        }
                        closeWaitingDialog();
                    }

                });
            }

        }
        $("#ddlPais").change(function () {
            var Id = $(this).val();
            if (Id != null) {
                waitingDialog({});
                $.ajaxSetup({ cache: false });
                $.getJSON(baseUrl + 'BaseAdm/ObtenerCampaniasPorPaisOUsuario', { PaisID: Id == "" ? 0 : Id }, function (data) {
                    if (checkTimeout(data)) {
                        var ddlCampania = $("#ddlCampania");
                        ddlCampania.empty();
                        ddlCampania.append($('<option/>', {
                            value: 0,
                            text: "-- Seleccionar --"
                        }));
                        limpiar();
                        if (Id != "") {
                            if (data.lista.length > 0) {
                                for (var item in data.lista) {
                                    if (data.lista[item].CampaniaID) {
                                        ddlCampania.append($('<option/>', {
                                            value: data.lista[item].CampaniaID,
                                            text: data.lista[item].Codigo
                                        }));
                                    }
                                }
                            }
                        }
                        closeWaitingDialog();
                    }
                });
            }
        });

        $("#ddlPaisM").change(function () {
            var Id = $(this).val();
            if (Id != null) {
                waitingDialog({});
                $.ajaxSetup({ cache: false });
                $.getJSON(baseUrl + 'BaseAdm/ObtenerCampaniasPorPaisOUsuario', { PaisID: Id == "" ? 0 : Id }, function (data) {
                    if (checkTimeout(data)) {
                        var ddlCampania = $("#ddlCampaniaM");
                        ddlCampania.empty();
                        ddlCampania.append($('<option/>', {
                            value: 0,
                            text: "-- Seleccionar --"
                        }));
                        if (Id != "") {
                            if (data.lista.length > 0) {
                                for (var item in data.lista) {
                                    if (data.lista[item].CampaniaID) {
                                        ddlCampania.append($('<option/>', {
                                            value: data.lista[item].CampaniaID,
                                            text: data.lista[item].Codigo
                                        }));
                                    }
                                }
                            }
                        }
                        closeWaitingDialog();
                    }
                });
            }
        });

        fnGrilla();

        if ('@ViewBag.FaltanteUltimoMinuto' == 0) {
            var colPos = 6;
            var myGrid = $('#list');
            myGrid.jqGrid('hideCol', myGrid.getGridParam("colModel")[colPos].name);
            myGrid.jqGrid('setColProp', myGrid.getGridParam("colModel")[colPos].name, { width: 0 });
            myGrid.jqGrid('setGridWidth', 900);
            $("#divFaltanteUltimoMin").css("visibility", "hidden");
            $("#divFaltanteUltimoMinMasivo").css("visibility", "hidden");
        }
        jQuery("#list").jqGrid('hideCol', ["vOpcion"]);

        $(".contenido_tab").hide();
        $("ul.tabs li:first").addClass("activa").show(); 
        $(".contenido_tab:first").show(); 

        $("ul.tabs li").click(function () {
            $("ul.tabs li").removeClass("activa"); 
            $(this).addClass("activa"); 
            $(".contenido_tab").hide();
            var activatab = $(this).find("a").attr("href");
            $(activatab).fadeIn();

            return false;
        });

        $("#txtFiltro01").keypress(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == 13) {
                event.preventDefault ? event.preventDefault() : event.returnValue = false;
                Buscar();
            }
            else {
                var keyChar = String.fromCharCode(keycode);
                var re = /[0-9]/;
                return re.test(keyChar);
            }
        });

        $("#txtFiltro02").keypress(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == 13) {
                event.preventDefault ? event.preventDefault() : event.returnValue = false;
                Buscar();
            }
            else {
                var keyChar = String.fromCharCode(keycode);
                var re = /[0-9]/;
                return re.test(keyChar);
            }
        });

        $("#txtFiltro03").keypress(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == 13) {
                event.preventDefault ? event.preventDefault() : event.returnValue = false;
                Buscar();
            }
            else {
                var keyChar = String.fromCharCode(keycode);
                var re = /[a-zA-Z0-9ñÑáéíóúÁÉÍÓÚ _.\/-]/;
                return re.test(keyChar);
            }
        });

        $("#ddlCampania").change(function () {

            Buscar();

            if (this.selectedIndex == 0)
                this.options[0].value = "0";
            $("#lblmensaje").html("");
            $("#txtCodigo").val("");
            $("#VentaID").val("");
            $("#txtDescripcion").text("");
            jQuery("#list").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');
        });
        $("#txtFechaRegistro").datepicker({
            showOn: "button",
            buttonImage: '@Url.Content("~/Content/Images/calendar.png")',
            buttonImageOnly: true,
            dateFormat: 'dd/mm/yy'

        }).mask('99/99/9999');

        $("#txtZona")
            .bind("keypress", function (event) {
                var keycode = (event.keyCode ? event.keyCode : event.which);
                var keyChar = String.fromCharCode(keycode);
                var re = /[0-9, ]/;
                return re.test(keyChar);
            })
            .bind("keyup", function (event) {
                var text_ = split(this.value);
                text_ = text_.unique();
                var array = jQuery.parseJSON($("#ZonaID").val()) || { items: [] };
                var a = { items: [] };
                for (var i = 0; i < text_.length; i++) {
                    if (text_[i] != "") {
                        for (var p in array.items) {
                            if (!array.items.hasOwnProperty(p)) break;
                            if (array.items[+p] && (array.items[+p].codigo == text_[i].toLowerCase())) {
                                a.items.push({ codigo: text_[i].toLowerCase(), id: array.items[+p].id });
                                break;
                            }
                        }
                    }
                }
                $("#ZonaID").val(JSON.stringify(a));
            })
            .bind("keydown", function (event) {
                if (event.keyCode == 16 || event.keyCode == 17 || event.keyCode == 18 ||
                   event.keyCode == 190 || event.keyCode == 186 || event.keyCode == 187 ||
                   event.keyCode == 222 || event.keyCode == 191 || event.keyCode == 189) {
                    event.preventDefault();
                    return false;
                }
                if (event.keyCode === $.ui.keyCode.TAB &&
                    $(this).data("autocomplete").menu.active) {
                    event.preventDefault();
                }
            }).autocomplete({
                source: function (request, response) {
                    if (document.selection) {
                        document.getElementById('txtZona').focus();
                        var range = document.selection.createRange();
                        range.moveStart('character', document.getElementById('txtZona').value.length);
                        range.moveEnd('character', 0);
                        range.select();
                    }
                    var posicion = getSelectionStart(document.getElementById('txtZona'));
                    var part = split(request.term.substring(0, posicion));
                    var last = part[part.length - 1] || "";
                    last = jQuery.trim(last.substring(last.lastIndexOf(' ')));
                    $.ajax({
                        url: baseUrl + "GestionFaltantes/SelectZonaByCodigo", type: "GET", dataType: "json",
                        data: {
                            paisID: $('#ddlPais').val(),
                            codigo: last,
                            rowCount: 10
                        },
                        success: function (data) {
                            if (checkTimeout(data)) {
                                var array = jQuery.parseJSON($("#ZonaID").val()) || { items: [] };
                                response($.map(data, function (item) {
                                    for (var p in array.items) {
                                        if (array.items.hasOwnProperty(p) && array.items[+p].codigo == item.Codigo.toLowerCase()) return;
                                    }
                                    if (item && item.hasOwnProperty('ZonaID')) {
                                        return {
                                            label: item.Codigo,
                                            value: item.ZonaID,
                                            data: item
                                        };
                                    }
                                }));
                            }
                        }
                    });
                },
                focus: function () {
                    return false;
                },
                select: function (event, ui) {
                    var jsonb = {};
                    arr = { items: [] };
                    var text_ = [];
                    var currval = this.value;
                    if (document.selection) {
                        this.focus();
                        var range = document.selection.createRange();
                        range.moveStart('character', this.value.length);
                        range.moveEnd('character', 0);
                        range.select();
                    }
                    var posicion = getSelectionStart(document.getElementById('txtZona'));

                    if (currval.length === 0) {
                        text_ = split(this.value);
                        text_.unshift(ui.item.label);
                        jsonb = {
                            codigo: ui.item.label.toLowerCase(),
                            id: ui.item.value
                        };
                        arr.items.push(jsonb);
                    }
                    else if (currval.length === posicion) {
                        text_ = split(this.value);
                        arr = jQuery.parseJSON($("#ZonaID").val()) || { items: [] };
                        if (text_[text_.length - 1] !== "" && arr.items[text_.length - 1])
                            delete arr.items[text_.length - 1];
                        text_.pop();
                        var index = text_.length;
                        while (index >= 0) {
                            if (text_[index] && (text_[index] == "" || text_[index].toLowerCase() == ui.item.label.toLowerCase())) {
                                text_.splice(index, 1);
                                index = text_.length;
                            }
                            else index--;
                        }

                        text_.push(ui.item.label);
                        jsonb = {
                            codigo: ui.item.label.toLowerCase(),
                            id: ui.item.value
                        };
                        arr.items.push(jsonb);
                    }
                    else {
                        var ext = this.value.substring(0, posicion);
                        ext = split(ext);
                        ext.pop();
                        var index = ext.length;
                        while (index >= 0) {
                            if (ext[index] && (ext[index] == "" || ext[index].toLowerCase() == ui.item.label.toLowerCase())) {
                                ext.splice(index, 1);
                                index = ext.length;
                            }
                            else index--;
                        }
                        ext.push(ui.item.label);

                        var ext2 = this.value.substring(posicion);
                        ext2 = split(ext2);
                        ext2.shift();
                        index = ext2.length;
                        while (index >= 0) {
                            if (ext2[index] && (ext2[index] == "" || ext2[index].toLowerCase() == ui.item.label.toLowerCase())) {
                                ext2.splice(index, 1);
                                index = ext2.length;
                            }
                            else index--;
                        }

                        text_ = ext.concat(ext2);
                        jsond2 = jQuery.parseJSON($("#ZonaID").val()) || { items: [] };
                        for (var i = 0; i < text_.length; i++) {
                            for (var p in jsond2.items) {
                                if (!jsond2.items.hasOwnProperty(p)) break;
                                if (jsond2.items[+p].codigo == text_[i].toLowerCase()) {
                                    arr.items.push(jsond2.items[+p]); break;
                                }
                                else if (text_[i].toLowerCase() == ui.item.label.toLowerCase()) {
                                    arr.items.push({ codigo: ui.item.label.toLowerCase(), id: ui.item.value });
                                    break;
                                }
                            }
                        }
                    }
                    this.value = text_.join(", ");
                    $("#ZonaID").val(JSON.stringify(arr));
                    event.preventDefault();
                    return false;
                },
                minLength: 0,
                multiple: true,
                multipleSeparator: ","
            }).blur(function () {
                var currv = this.value.replace(/([%&¿#"=¡!<>_\-¨:;´.*+?\/^$|(){}\[\]])/mg, "");
                arr = split(currv);
                index = arr.length;
                while (index >= 0) {
                    if (arr[index] == "") {
                        arr.splice(index, 1);
                        index = arr.length;
                    }
                    else index--;
                }
                arr = arr.unique();
                this.value = arr.join(", ");
            });

        $("#txtCodigo")
            .bind("keypress", function (event) {
                var keycode = (event.keyCode ? event.keyCode : event.which);
                var keyChar = String.fromCharCode(keycode);
                var re = /[0-9, ]/;
                return re.test(keyChar);
            })
            .bind("keyup", function (event) {
                if ($("#ddlPais").val() == "") {
                    if (this.value.length == 0) { $("#lblmensaje").html(""); return; }
                    $("#lblmensaje").html("Debe seleccionar un País."); return;
                }
                if ($("#ddlCampania").val() == "") {
                    if (this.value.length == 0) { $("#lblmensaje").html(""); return; }
                    $("#lblmensaje").html("Debe seleccionar una campaña"); return;
                }

                var text_ = split(this.value);
                text_ = text_.unique();
                var array = jQuery.parseJSON($("#VentaID").val()) || { items: [] };
                var a = { items: [] };
                var des = [];
                for (var i = 0; i < text_.length; i++) {
                    if (text_[i] != "") {
                        for (var p in array.items) {
                            if (!array.items.hasOwnProperty(p)) break;
                            if (array.items[+p] && (array.items[+p].codigo == text_[i].toLowerCase())) {
                                a.items.push({ codigo: text_[i].toLowerCase(), descripcion: array.items[+p].descripcion });
                                break;
                            }
                        }
                    }
                }
                $("#VentaID").val(JSON.stringify(a));
                for (var p in a.items) {
                    if (a.items.hasOwnProperty(p))
                        des.push(a.items[+p].descripcion);
                }
                $("#txtDescripcion").text(des.join(",\r"));
            })
            .bind("keydown", function (event) {
                if (event.keyCode == 16 || event.keyCode == 17 || event.keyCode == 18 ||
                   event.keyCode == 190 || event.keyCode == 186 || event.keyCode == 187 ||
                   event.keyCode == 222 || event.keyCode == 191 || event.keyCode == 189) {
                    event.preventDefault();
                    return false;
                }
                if (event.keyCode === $.ui.keyCode.TAB &&
                    $(this).data("autocomplete").menu.active) {
                    event.preventDefault();
                }
            }).autocomplete({
                source: function (request, response) {

                    if (document.selection) {
                        document.getElementById('txtCodigo').focus();
                        var range = document.selection.createRange();
                        range.moveStart('character', document.getElementById('txtCodigo').value.length);
                        range.moveEnd('character', 0);
                        range.select();
                    }
                    var posicion = getSelectionStart(document.getElementById('txtCodigo'));
                    var part = split(request.term.substring(0, posicion));
                    var last = part[part.length - 1] || "";
                    last = jQuery.trim(last.substring(last.lastIndexOf(' ')));
                    $.ajax({
                        url: baseUrl + "GestionFaltantes/SelectCodigoProducto", type: "GET", dataType: "json",
                        data: {
                            campaniaID: $("#ddlCampania").val(),
                            paisID: $('#ddlPais').val(),
                            codigo: last,
                            rowCount: 10
                        },
                        success: function (data) {
                            if (checkTimeout(data)) {
                                var array = jQuery.parseJSON($("#VentaID").val()) || { items: [] };
                                response($.map(data, function (item) {
                                    for (var p in array.items) {
                                        if (array.items.hasOwnProperty(p) && array.items[+p].codigo == item.CUV.toLowerCase()) return;
                                    }
                                    if (item && item.CUV) {
                                        return {
                                            label: item.CUV,
                                            value: jQuery.trim(item.Descripcion),
                                            data: item
                                        };
                                    }
                                }));
                            }
                        }
                    });
                },
                focus: function () {
                    return false;
                },
                select: function (event, ui) {
                    var jsonb = {};
                    arr = { items: [] };
                    var text_ = descrip_ = [];
                    var currval = this.value;
                    if (document.selection) {
                        this.focus();
                        var range = document.selection.createRange();
                        range.moveStart('character', this.value.length);
                        range.moveEnd('character', 0);
                        range.select();
                    }
                    var posicion = getSelectionStart(document.getElementById('txtCodigo'));
                    if (currval.length === 0) {
                        text_ = split(this.value);
                        text_.unshift(ui.item.label);
                        jsonb = {
                            codigo: ui.item.label.toLowerCase(),
                            descripcion: ui.item.value
                        };
                        arr.items.push(jsonb);
                    }
                    else if (currval.length === posicion) {
                        text_ = split(this.value);
                        arr = jQuery.parseJSON($("#VentaID").val()) || { items: [] };
                        if (text_[text_.length - 1] !== "" && arr.items[text_.length - 1])
                            delete arr.items[text_.length - 1];
                        text_.pop();
                        var index = text_.length;
                        while (index >= 0) {
                            if (text_[index] && (text_[index] == "" || text_[index].toLowerCase() == ui.item.label.toLowerCase())) {
                                text_.splice(index, 1);
                                index = text_.length;
                            }
                            else index--;
                        }

                        text_.push(ui.item.label);
                        jsonb = {
                            codigo: ui.item.label.toLowerCase(),
                            descripcion: ui.item.value
                        };
                        arr.items.push(jsonb);
                    }
                    else {
                        var ext = this.value.substring(0, posicion);
                        ext = split(ext);
                        ext.pop();
                        var index = ext.length;
                        while (index >= 0) {
                            if (ext[index] && (ext[index] == "" || ext[index].toLowerCase() == ui.item.label.toLowerCase())) {
                                ext.splice(index, 1);
                                index = ext.length;
                            }
                            else index--;
                        }
                        ext.push(ui.item.label);

                        var ext2 = this.value.substring(posicion);
                        ext2 = split(ext2);
                        ext2.shift();
                        index = ext2.length;
                        while (index >= 0) {
                            if (ext2[index] && (ext2[index] == "" || ext2[index].toLowerCase() == ui.item.label.toLowerCase())) {
                                ext2.splice(index, 1);
                                index = ext2.length;
                            }
                            else index--;
                        }

                        text_ = ext.concat(ext2);
                        jsond2 = jQuery.parseJSON($("#VentaID").val()) || { items: [] };
                        for (var i = 0; i < text_.length; i++) {
                            for (var p in jsond2.items) {
                                if (!jsond2.items.hasOwnProperty(p)) break;
                                if (jsond2.items[+p].codigo == text_[i].toLowerCase()) {
                                    arr.items.push(jsond2.items[+p]); break;
                                }
                                else if (text_[i].toLowerCase() == ui.item.label.toLowerCase()) {
                                    arr.items.push({ codigo: ui.item.label.toLowerCase(), descripcion: ui.item.value });
                                    break;
                                }
                            }
                        }
                    }
                    this.value = text_.join(", ");
                    $("#VentaID").val(JSON.stringify(arr));
                    for (var p in arr.items) {
                        if (arr.items.hasOwnProperty(p))
                            descrip_.push(arr.items[+p].descripcion);
                    }
                    $("#txtDescripcion").text(descrip_.join(",\r"));
                    event.preventDefault();
                    return false;
                },
                minLength: 0,
                multiple: true,
                multipleSeparator: ","
            }).blur(function () {
                var currv = this.value.replace(/([%&¿#"=¡!<>_\-¨:;´.*+?\/^$|(){}\[\]])/mg, "");
                arr = split(currv);
                index = arr.length;
                while (index >= 0) {
                    if (arr[index] == "") {
                        arr.splice(index, 1);
                        index = arr.length;
                    }
                    else index--;
                }
                arr = arr.unique();
                this.value = arr.join(", ");
            });

    });

    function fnGrilla() {
        

        jQuery("#list").jqGrid({
            url: baseUrl + "GestionFaltantes/Consultar",
            hidegrid: false,
            datatype: 'json',
            postData: ({
                vBusqueda1: function() {
                    return jQuery.trim($("#txtFiltro01").val());
                },
                vBusqueda2: function() {
                    return jQuery.trim($("#txtFiltro02").val());
                },
                vBusqueda3: function() {
                    return jQuery.trim($("#txtFiltro03").val());
                },
                paisID: function() {
                    return $("#ddlPais").val();
                },
                campaniaID: function() {
                    return $("#ddlCampania").val();
                },
                fecha: function() {
                    if ($("#txtFechaRegistro").val() === undefined)
                        return "";
                    else
                        return $("#txtFechaRegistro").val();
                }
            }),
            mtype: 'GET',
            contentType: "application/json; charset=utf-8",
            colNames: ['CodZona', 'CodCampania', 'Zona', 'CUV', 'Descripción producto Agotado', 'Faltante último minuto', 'Fecha de Registro','Opción'],
            colModel: [
                {
                    name: 'ZonaID',
                    index: 'ZonaID',
                    width: 0,
                    editable: false,
                    align: 'center',
                    hidden: true
                },
                {
                    name: 'CampaniaID',
                    index: 'CampaniaID',
                    width: 0,
                    editable: false,
                    align: 'center',
                    hidden: true
                },
                { name: 'Zona', index: 'Zona', width: 20, editable: true, resizable: false, align: 'left' },
                { name: 'CUV', index: 'CUV', width: 20, editable: true, resizable: false, align: 'left' },
                { name: 'Descripcion', index: 'Descripcion', width: 50, editable: true, resizable: false, align: 'left' },
                { name: 'FaltanteUltimoMinuto', index: 'FaltanteUltimoMinuto', width: 30, editable: true, align: 'left', resizable: false, formatter: LoadCheckState },
                { name: 'FechaRegistro', index: 'FechaRegistro', width: 20, editable: true, resizable: false, align: 'left' },
                { name: 'vOpcion', index: 'vOpcion', width: 10, editable: true, sortable: false, align: 'center', resizable: false, formatter: ShowActions }
            ],
            multiselect: true,

            beforeSelectRow: function (id, e) {

                    var $self = $(this),
                        iCol = $.jgrid.getCellIndex($(e.target).closest("td")[0]),
                        cm = $self.jqGrid("getGridParam", "colModel");
                    if (cm[iCol].name === "cb") {
                        return true;
                    }
                    return false;
            },
            onSelectRow: function (id,select) {
                var oneItemsDeselect = false;
                $.each(arrayDataDelete, function (i, rowDataDelete) {
                    if (rowDataDelete.id == id) {
                        rowDataDelete.eliminar = select;
                    }
                    if (!rowDataDelete.eliminar) {
                        oneItemsDeselect = true;
                    }
                });

                flagSelectAll = !oneItemsDeselect;
                $("#cb_list").attr("checked", flagSelectAll);
            },
            onSelectAll: function (aRowids, select) {
                $.each(arrayDataDelete, function (i, rowDataDelete) {
                    rowDataDelete.eliminar = select;
                });
                flagSelectAll = select;

            },

            jsonReader:
            {
                root: "rows",
                page: "page",
                total: "total",
                records: "records",
                repeatitems: true,
                cell: "cell",
                id: "id"
            },
            ExpandColClick: true,
            pager: jQuery('#pager'),
            loadtext: 'Cargando datos...',
            recordtext: "{0} - {1} de {2} Registros",
            emptyrecords: 'No hay resultados',
            rowNum: 10,
            scrollOffset: 0,
            rowList: [10, 20, 30, 40, 50],
            sortname: 'Zona',
            sortorder: 'asc',
            viewrecords: true,
            height: 250,
            width: 900,
            pgtext: 'Pág: {0} de {1}',
            altRows: true,
            altclass: 'jQGridAltRowClass',
            loadComplete: function (data) {

            },
            gridComplete: function () {
                var arrayCheck = $('.cbox');
                for (var ii = 0; ii < arrayCheck.length; ii++) {
                    rowCheck = arrayCheck[ii];
                    $.each(arrayDataDelete, function (i, rowDataDelete) {
                        if ('jqg_list_' + rowDataDelete.id == rowCheck.id) {

                            if (rowDataDelete.eliminar || false) {
                                $('#list').jqGrid('setSelection', rowDataDelete.id);
                            } else {
                                $('#list').jqGrid('resetSelection', rowDataDelete.id);
                            }
                            return false;
                        }
                    });
                }
                $("#cb_list").attr("checked", flagSelectAll);
            }
        });

        $('#list').on('reloadGrid', function () {

            $.ajax({
                url: baseUrl + "GestionFaltantes/Consultar",
                datatype: 'json',
                async: false,
                data: ({
                    vBusqueda1: function () {
                        return jQuery.trim($("#txtFiltro01").val());
                    },
                    vBusqueda2: function () {
                        return jQuery.trim($("#txtFiltro02").val());
                    },
                    vBusqueda3: function () {
                        return jQuery.trim($("#txtFiltro03").val());
                    },
                    paisID: function () {
                        return $("#ddlPais").val();
                    },
                    campaniaID: function () {
                        return $("#ddlCampania").val();
                    },
                    fecha: function () {
                        if ($("#txtFechaRegistro").val() === undefined)
                            return "";
                        else
                            return $("#txtFechaRegistro").val();
                    },
                    flagPaginacion: 0,
                    _search: false,
                    rows: 10,
                    page: 1,
                    sidx: 'Zona',
                    sord: 'asc'
                }),
                type: 'GET'
            }).success(function (data) {
                arrayDataDelete = data.rows;
                flagSelectAll = false;
        });

        })
        jQuery("#list").jqGrid('navGrid', "#pager", { edit: false, add: false, refresh: false, del: false, search: false });
        jQuery("#list").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');

       function checkBox(e) {
            e = e || event;
            e.stopPropagation ? e.stopPropagation() : e.cancelBubble = true;
        }


        function ShowActions(cellvalue, options, rowObject) {
            var cellValueInt = parseInt(cellvalue);
            var Del = "&nbsp;<a href='javascript:;' onclick=\"return jQuery('#list').Eliminar('" + rowObject[1] + "','" + rowObject[3] + "','" + rowObject[0] + "','" + rowObject[2] + "','" + rowObject[5] + "','" + rowObject[6] + "');\" >" + "<img src='@Url.Content("~/Content/Images/Delete.png")' alt='Eliminar Registro' title='Eliminar Registro' border='0' /></a>";
            return Del;
        }

        function ShowActions2(cellvalue, options, rowObject) {
            var Id = options.rowId;
            var idCheck = 'jqg_list_' + Id;
            if (rowObject[7] == 0 && arrayCheckDisabled.indexOf(idCheck) == -1) {

                arrayCheckDisabled.push(idCheck);

            } else {

                if (rowObject[7] == 1 && arrayCheckDisabled.indexOf(idCheck) != -1) {
                    arrayCheckDisabled.removeItem(idCheck);
                }
            }

            return rowObject[7];
        }

        function LoadCheckState(val, options) {
            var name = options.colModel.name;
            var Page = $(".ui-pg-input").val();

            var Id = name + options.rowId;
            return "<input id=\"" + Id + "\" " + (val == 'SI' ? "checked=\"checked\"" : "") + " type=\"checkbox\" disabled='disabled' offval=\"no\" />";
        }

        function objToString(obj) {
            var str = '';
            for (var p in obj) {
                if (obj.hasOwnProperty(p)) {
                    str += p + ':' + obj[p] + '\n';
                }
            }
            return str;
        }

        $("#btnEliminar").click(function() {
            if (arrayDataDelete.length == 0) {
                alert("No se ha seleccionado registro para eliminar.");
            } else {

                objetos = { Items: [] };

                flag = 1;
                totalRegistros = arrayDataDelete.length;
                for (var i = 0; i < arrayDataDelete.length; i++) {
                    if (arrayDataDelete[i].eliminar == true) {
                        var arrayResultado = arrayDataDelete[i].id.split("|");
                        if (arrayResultado.length == 3) {

                            objetos.Items.push({
                                "CampaniaID": arrayResultado[0].toString(),
                                "CUV": arrayResultado[1].toString(),
                                "ZonaID": arrayResultado[2].toString(),
                            });
                        }

                    }
                }
                $('#list').Eliminar2(objetos, flag, E_pais, E_campania, E_zona, E_cuv, E_producto, E_fecha);

            }

        });
        $.jgrid.extend({
            Eliminar2: function(objetos, flag, pais, campania, zona, cuv, e_producto, fecha) {
                data = { "Lista": objetos, "Flag": flag, "Pais": pais, "Campania": campania, "Zona": zona, "CUV": cuv, "EProducto": e_producto, "Fecha": fecha };
                var elimina = confirm('¿ Está seguro que desea eliminar los registros seleccionados?');
                if (!elimina)
                    return false;
                waitingDialog({});

                if ($("#cb_list").attr("checked")) {

                    var campaniaID = $("#ddlCampania").val();
                    var zona = $("#txtFiltro01").val();
                    var cuv = $("#txtFiltro02").val();
                    var fecha = $("#txtFechaRegistro").val();
                    var descripcion = $("#txtFiltro03").val();

                    var params = {
                        CampaniaID: campaniaID,
                        Zona: zona,
                        CUV: cuv,
                        Fecha: fecha,
                        Descripcion: descripcion
                    };

                    jQuery.ajax({
                        type: 'POST',
                        url: baseUrl + 'GestionFaltantes/EliminarTodos',
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify(params),
                        async: true,
                        success: function (data) {
                            if (checkTimeout(data)) {
                                closeWaitingDialog();
                                if (data.success == true) {
                                    alert(data.message);
                                    jQuery("#list").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');

                                    Buscar();
                                    return true;
                                } else
                                    alert(data.message);
                                limpiar(false);
                                Buscar();
                                return false;
                            }
                        },
                        error: function (data, error) {
                            if (checkTimeout(data)) {
                                closeWaitingDialog();
                                alert("Ocurrió un error inesperado al momento de eliminar el registro. Consulte con su administrador del sistema para obtener mayor información");
                            }
                        }
                    });

                } else {
                    jQuery.ajax({
                        type: 'POST',
                        url: baseUrl + 'GestionFaltantes/Eliminar2',
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify(data),
                        async: true,
                        success: function (data) {
                            if (checkTimeout(data)) {
                                closeWaitingDialog();
                                if (data.success == true) {
                                    alert(data.message);
                                    jQuery("#list").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');

                                    Buscar();
                                    return true;
                                } else
                                    alert(data.message);
                                limpiar(false);
                                Buscar();
                                return false;
                            }
                        },
                        error: function (data, error) {
                            if (checkTimeout(data)) {
                                closeWaitingDialog();
                                alert("Ocurrió un error inesperado al momento de eliminar el registro. Consulte con su administrador del sistema para obtener mayor información");
                            }
                        }
                    });
                }
                return false;


            },
            Eliminar: function(Campaniaid, cuv_, Zonaid, Zona, faltanteum, estado) {
                if (estado == "0") {
                    alert("No se puede eliminar el registro, ya que es solo de lectura");
                    return false;
                }

                var elimina = confirm('¿ Está seguro que desea eliminar el registro seleccionado?');
                if (!elimina)
                    return false;
                waitingDialog({});
                jQuery.ajax({
                    type: 'POST',
                    url: baseUrl + 'GestionFaltantes/Eliminar',
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify({
                        CampaniaID: Campaniaid,
                        CUV: cuv_,
                        ZonaID: Zonaid,
                        Zona: Zona,
                        FaltanteUM: faltanteum
                    }),
                    async: true,
                    success: function(data) {
                        if (checkTimeout(data)) {
                            closeWaitingDialog();
                            if (data.success == true) {
                                alert(data.message);
                                jQuery("#list").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');
                            } else
                                alert(data.message);
                            return false;
                        }
                    },
                    error: function(data, error) {
                        if (checkTimeout(data)) {
                            closeWaitingDialog();
                            alert("Ocurrió un error inesperado al momento de eliminar el registro. Consulte con su administrador del sistema para obtener mayor información");
                        }
                    }
                });
                return false;
            }
        });
    }

    function split(val) {
        return val.split(/^[,\s]*|\s*,\s*|[,\s]+$|^$/);
    }

    Array.prototype.unique = function (a) {
        return function () { return this.filter(a); };
    }(function (a, b, c) {
        return c.indexOf(a.toLowerCase(), b + 1) < 0;
    });

    function limpiar(elem) {
        var ddlCampania = $("#ddlCampania");
        if (elem) {
            $("#ddlPais")[0].selectedIndex = 0;
            ddlCampania.empty();
            ddlCampania.append($('<option/>', {
                value: 0,
                text: "-- Seleccionar --"
            }));
        }
        ddlCampania[0].selectedIndex = 0;
        $("#rbZonaEspec").attr("checked", false);
        $("#rbFaltanteUltimoMin").attr("checked", false);
        ActiveZone(false);
        $("#txtCodigo").val("");
        $("#VentaID").val("");
        $("#txtDescripcion").text("");
        $("#txtFiltro01").val("");
        $("#txtFiltro02").val("");
        $("#txtFiltro03").val("");
        $("#lblmensaje").html("");
        jQuery("#list").jqGrid("clearGridData");
    }

    function Buscar() {

        E_pais = $('#ddlPais').val() != "" ? parseInt($('#ddlPais').val()) : 0;
        E_campania = $('#ddlCampania').val() != "" ? parseInt($('#ddlCampania').val()) : 0;
        E_zona = $('#txtFiltro01').val() != "" ? parseInt($('#txtFiltro01').val()) : 0;
        E_cuv = $('#txtFiltro02').val() != "" ? $('#txtFiltro02').val() : "0";
        E_producto = $('#txtFiltro03').val() != "" ? $('#txtFiltro03').val() : "0";
        E_fecha = $('#txtFechaRegistro').val() != "" ? $('#txtFechaRegistro').val() : "01/01/1900";
        clearDataGlobal();

        jQuery("#list").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');
    }

    function limpiarM() {
        var ddlCampania = $("#ddlCampaniaM");
        $("#ddlPaisM")[0].selectedIndex = 0;
        ddlCampania.empty();
        ddlCampania.append($('<option/>', {
            value: 0,
            text: "-- Seleccionar --"
        }));
        $('#divuplArchivo').html($('#divuplArchivo').html());
    }

    function Guardar() {
        var paisID = $("#ddlPais").val();
        if (paisID == "") {
            alert("Debe seleccionar un País.");
            return;
        }
        var campaniaID = $("#ddlCampania").val();
        if (campaniaID == "" || campaniaID == "0") {
            alert("Debe seleccionar una Campaña.");
            return;
        }
        var isChecked = $("#rbZonaEspec").is(':checked');
        var isCheckedFUM = $("#rbFaltanteUltimoMin").is(':checked');
        var txtZona = $("#txtZona").val();
        if (isChecked && txtZona == "") {
            alert("Debe ingresar al menos una Zona.");
            return;
        }
        var txtCodigo = $("#txtCodigo").val();
        if (txtCodigo == "") {
            alert("Debe ingresar al menos un Código de venta.");
            return;
        }

        var msg;
        if (isChecked && txtZona != "")
            msg = confirm("¿Está seguro que desea agregar a la lista los Códigos y/o Zonas?");
        else
            msg = confirm("No se ha especificado ninguna Zona. Se registrarán todas las Zonas existentes para el País seleccionado\n¿Está seguro que desea continuar?");
        if (msg) {
            waitingDialog({});

            var params = { paisID: '', campaniaID: '0', faltanteUltimoMin: '0', codigos: [] };
            if (isChecked && txtZona != "") {
                for (var p in ZonaID.items) { 
                    if (!ZonaID.items.hasOwnProperty(p)) continue;
                    if (ZonaID.items[+p]) {
                        for (var m in VentaID.items) {
                            if (!VentaID.items.hasOwnProperty(m)) continue;
                            if (VentaID.items[+m]) {
                                params.productos.push({
                                    CampaniaID: campaniaID,
                                    CUV: VentaID.items[+m].codigo,
                                    ZonaID: ZonaID.items[+p].id
                                });
                            }
                        }
                    }
                }
            }
            else {
                for (var m in VentaID.items) { 
                    if (!VentaID.items.hasOwnProperty(m)) continue;
                    if (VentaID.items[+m]) {
                        params.productos.push({
                            CUV: VentaID.items[+m].codigo,
                            Zona: 'TODAS'
                        });
                    }
                }
            }
            params.paisID = paisID;
            params.campaniaID = campaniaID;
            params.faltanteUltimoMin = isCheckedFUM == true ? '1' : '0';
            params.codigos.push(txtZona);
            params.codigos.push(txtCodigo);

            $.ajax({
                type: "POST",
                url: baseUrl + "GestionFaltantes/Insertar",
                data: JSON.stringify(params),
                contentType: 'application/json',
                success: function (data) {
                    if (checkTimeout(data)) {
                        closeWaitingDialog();
                        
                        if (data.success == true) {
                            limpiar(true);
                            alert(data.message);
                            jQuery("#list").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');
                        }
                        else
                            alert(data.message);
                    }
                },
                error: function (data, error) {
                    if (checkTimeout(data)) {
                        closeWaitingDialog();
                        alert("Ocurrió un error inesperado al momento de registrar los datos. Consulte con su administrador del sistema para obtener mayor información");
                    }
                }
            });
        }
        else return false;
    }

    function Procesar() {
        var uplArchivo = $("#uplArchivo").val();
        if (uplArchivo == "") {
            alert("Debe seleccionar un archivo Excel para realizar la carga masiva.");
            return false;
        }

        var paisID = $("#ddlPaisM").val();
        if (paisID == "") {
            alert("Debe seleccionar un Pais.");
            return false;
        }

        var campaniaID = $("#ddlCampaniaM").val();
        if (campaniaID == "" || campaniaID == "0") {
            alert("Debe seleccionar una Campaña.");
            return false;
        }

        waitingDialog({});
        $("#frmProcesarMasivo").submit();
    }

    function fnForm() {
        $('#frmProcesarMasivo').ajaxForm({
            beforeSubmit: function () {
            },
            success: function (data) {
                if (checkTimeout(data)) {
                    closeWaitingDialog();
                    alert(data);
                    limpiarM();
                }
            },
            error: function (request, status, error) {
                if (checkTimeout(request)) {
                    closeWaitingDialog();
                    alert("Ocurrrió un error inesperado al procesar la carga masiva de Faltantes. Consulte con su administrador del sistema para obtener mayor información");
                }
            }
        });
    }

    function DescargarModelo() {
        waitingDialog({});
        setTimeout(function () { DownloadAttachExcel(); }, 0);
    }

    function DownloadAttachExcel() {
        if (checkTimeout()) {
            var content = baseUrl + "GestionFaltantes/DescargaModelo";
            var iframe_ = document.createElement("iframe");
            iframe_.style.display = "none";
            iframe_.setAttribute("src", content);

            if (navigator.userAgent.indexOf("MSIE") > -1 && !window.opera) { // Si es Internet Explorer
                iframe_.onreadystatechange = function () {
                    switch (this.readyState) {
                        case "loading":
                            waitingDialog({});
                            break;
                        case "complete":
                        case "interactive":
                        case "uninitialized":
                            closeWaitingDialog();
                            break;
                        default:
                            closeWaitingDialog();
                            break;
                    }
                };
            }
            else {
                // Si es Firefox o Chrome
                $(iframe_).ready(function () {
                    closeWaitingDialog();
                });
            }
            document.body.appendChild(iframe_);
        }
    }
</script>

<div class="wrap_cab">

    <div class="filtros2">
        <div class="elements">
            <div class="div-2">
                <h1>Gestión de <span>Faltantes</span></h1>
            </div>
        </div>
    </div>

</div>

<div class="wrap">
    <div class="container clearfix">
        <div class="border-wrapper">
            <ul class="tabs">
                <li><a href="#tab-manual">Carga Manual</a></li>
                <li><a href="#tab-masiva">Carga Masiva</a></li>
            </ul>
            <div class="contenedor_tab">
                <div id="tab-manual" class="contenido_tab">
                    <div class="div-3">
                        <div class="titF">Pais:</div>
                        <div class="select_tab">
                            @Html.DropDownListFor(model => model.PaisID, new SelectList(Model.listaPaises, "PaisID", "Nombre"), "-- Seleccionar --", new { id = "ddlPais" })
                        </div>
                    </div>
                    <div class="div-3">
                        <p>Ingresar en los siguientes campos, las zona(s) y el/los código(s) de venta (CUV) de producto(s) faltante(s) en la campaña actual:</p>
                    </div>
                    <div class="div-3">
                        <div class="titF">Campaña:</div>
                        <div class="select_tab">
                            @Html.DropDownListFor(model => model.CampaniaID, new SelectList(Model.listaCampanias, "CampaniaID", "Codigo"), new { id = "ddlCampania" })
                        </div>
                    </div>
                    <div class="div-3">
                        <div class="check_tab">
                            <input id="rbZonaEspec" type="checkbox" onclick="return ActiveZone(this.checked);" />
                        </div>
                        <div style="float: left">
                            <p for="radio2">Especificar Zonas:</p>
                        </div>
                        <div class="select_tab">
                            <input id="txtZona" type="text" disabled="disabled" class="input_disabled" />
                            <input type="hidden" id="ZonaID" name="ZonaID" />
                            <div class="mensaje_tab">
                                <span>Ingresa varias zonas separándolas con una coma.</span>
                            </div>
                        </div>
                    </div>
                    <div class="div-3">
                        <div class="titF">Código(s) de Venta:</div>
                        <div class="select_tab">
                            <input id="txtCodigo" type="text" />
                            <input type="hidden" id="VentaID" name="VentaID" />
                            <div class="mensaje_tab">
                                <span>Ingresa varios códigos separándolas con una coma.</span>
                            </div>
                        </div>
                    </div>


                    <div style="padding: 0; margin: 15px; overflow: hidden">
                        @Html.TextArea("txtDescripcion", new
                    {
                        @readonly = "readonly",
                        maxlength = 500,
                        style = "width: 700px; height: 150px"
                    })
                    </div>

                    <div id="divFaltanteUltimoMin" class="div-3">
                        <div class="check_tab">
                            <input id="rbFaltanteUltimoMin" type="checkbox" />
                        </div>
                        <div style="float: left">
                            <p for="radio2">Faltante de último minuto.</p>
                        </div>
                    </div>

                    <div style="padding: 0; margin: 15px; overflow: hidden">
                        <div class="addlist_tab">
                            <input id="btnAgregar" type="button" value="Agregar" onclick="Guardar();" />
                        </div>
                        <div class="deletelist_tab">
                            <input id="btnBorrar" type="button" value="Limpiar" onclick="limpiar(this);" />
                        </div>
                    </div>

                    <div style="padding: 0; margin: 15px; overflow: hidden">

                        <div style="width: 100%; padding: 0 0 0 12px; margin: 0;">
                            <h3>Lista de Faltantes</h3>
                        </div>

                        <div class="div-3">
                            <div class="titA">Zona:</div>
                            <div class="filtros_faltantes">
                                <input id="txtFiltro01" type="text" maxlength="6">
                            </div>
                            <div class="titA">CUV:</div>
                            <div class="filtros_faltantes">
                                <input id="txtFiltro02" type="text" maxlength="6" />
                            </div>
                            <div class="titG">Producto agotado:</div>
                            <div class="filtros_faltantes">
                                <input id="txtFiltro03" type="text" maxlength="100" />
                            </div>
                            <div class="input_search">
                                <input type="button" onclick="Buscar();" name="" id="btnBuscar" value="Buscar" />
                            </div>
                        </div>
                        <div class="div-3">
                            <div class="titJ" style="text-align: left; width: 70px; padding: 0px; margin-left: 12px">Fecha de Registro:</div>
                            <div class="calendar borde_redondeado">
                                <input type="text" id="txtFechaRegistro">
                            </div>
                            <div class="input_search">
                                <input type="button" style="float: right; margin-right: 14px;" onclick="" name="" id="btnEliminar"  value="Eliminar" />
                        </div>
                        </div>
                    </div>
                    <div class="grid_tab" style="padding: 0; margin: 0 15px 15px 15px; overflow: hidden">
                        <div id="temp" hidden="hidden"></div>
                        <table id="list"></table>
                        <div id="pager"></div>
                    </div>
                </div>
                <div id="tab-masiva" class="contenido_tab">
                    @using (Html.BeginForm("ProcesarMasivo", "GestionFaltantes", FormMethod.Post, new { id = "frmProcesarMasivo", enctype = "multipart/form-data" }))
                    {
                        <div class="div-3">
                            <div class="titB">País:</div>
                            <div class="selectA borde_redondeado">
                                @Html.DropDownListFor(model => model.PaisID, new SelectList(Model.listaPaises, "PaisID", "Nombre",""), "-- Seleccionar --", new { id = "ddlPaisM" })
                            </div>
                        </div>
                        <div class="div-3">
                            <div class="titB">Archivo:</div>
                            <div id="divuplArchivo" class="titB">
                                <input id="uplArchivo" name="uplArchivo" type="file" />
                            </div>
                        </div>
                        <div class="div-3">
                            <div class="titB">Campaña:</div>
                            <div class="selectA borde_redondeado">
                                @Html.DropDownListFor(model => model.CampaniaID, new SelectList(Model.listaCampanias, "CampaniaID", "Codigo"), new { id = "ddlCampaniaM" })
                            </div>
                        </div>
                        <div id="divFaltanteUltimoMinMasivo" class="div-3">
                            <div class="titB"></div>
                            <div class="check_tab">
                                @Html.CheckBoxFor(model => model.FaltanteUltimoMinuto, new { id = "rbFaltanteUltimoMinMasivo" })
                            </div>
                            <div style="float: left">
                                <p for="radio2">Faltante de último minuto.</p>
                            </div>
                        </div>
                        <div class="div-3">
                            <div class="titB"></div>
                            <div class="input_modifica_horizontal">
                                <input id="btnProcesar" type="button" value="Procesar Archivos" onclick="Procesar();" />
                            </div>
                            <div class="input_modifica_horizontal">
                                <input id="btnBorrarM" type="button" value="Borrar Campos" onclick="limpiarM();" />
                            </div>
                        </div>
                        <div class="div-4">
                            <div class="noti3">
                                Puede descargar 
                            <a href="#" onclick="DescargarModelo()">aquí</a>
                                el modelo de plantilla, para la carga masiva de productos faltantes.
                            </div>
                        </div>
                        <div style="clear: both">
                            <div style="clear: both">
                                <div style="width: 300px; padding: 30px 0">
                                    <div style="width: 150px; float: left; text-align: center">
                                    </div>
                                    <div style="width: 150px; float: left; text-align: center">
                                    </div>
                                </div>
                            </div>
                        </div>
                        @Html.HiddenFor(model => model.PaisID, new { id = "hdpaisID", value = "0" })
                        @Html.HiddenFor(model => model.CampaniaID, new { id = "hdcampaniaID", value = "0" })
                    }
                </div>
                <div id="loadingScreen"></div>
            </div>
        </div>
    </div>
</div>
