@model Portal.Consultoras.Web.Models.CronogramaModel
@{
    ViewBag.Title = "Cronograma Demanda Anticipada";
}

<script type="text/javascript">

    String.prototype.lpad = function (padString, length) {
        var str = this;
        while (str.length < length)
            str = padString + str;
        return str;
    }

    function LimpiarDependencias(Id) {
        var ddlZona = $('#ddlZona');
        var ddlZonaRZ = $('#ddlZonaRegistroZona');
        var ddlCampania = $('#ddlCampania');
        var ddlCampaniaRZ = $('#ddlCampaniaRegistroZona');
        ddlCampania.empty();
        ddlCampaniaRZ.empty();
        ddlZona.empty();
        ddlZonaRZ.empty();
        if (Id != "") {
            ddlZona.append($('<option/>', {
                value: "",
                text: "-- Todas --"
            }));
            ddlZonaRZ.append($('<option/>', {
                value: "",
                text: "-- Seleccionar --"
            }));
        } else {
            ddlZona.append($('<option/>', {
                value: "",
                text: "-- Seleccionar --"
            }));
            ddlZonaRZ.append($('<option/>', {
                value: "",
                text: "-- Seleccionar --"
            }));
        }
        ddlCampania.append($('<option/>', {
            value: "",
            text: "-- Seleccionar --"
        }));
        ddlCampaniaRZ.append($('<option/>', {
            value: "",
            text: "-- Seleccionar --"
        }));
    }

    jQuery(document).ready(function () {
        $("#hdTipoCronograma").val('@Portal.Consultoras.Common.Constantes.TipoCronograma.Anticipado');
        fnGrilla();
        IniDivRegistro();

        $('#txtFecIniFac').keypress(function (e) {
            return false;
        });
        $('#txtFecFinFac').keypress(function (e) {
            return false;
        });
        $('#txtFecIniReFac').keypress(function (e) {
            return false;
        });
        $('#txtFecIniFac').keydown(function (e) {
            return false;
        });
        $('#txtFecIniReFac').keydown(function (e) {
            return false;
        });


        $("#btnBuscar").click(function () {
            if (jQuery.trim($("#ddlPais").val()) == "") {
                alert("Debe seleccionar un País, verifique");
                return false;
            }
            if (jQuery.trim($("#ddlCampania").val()) != "")
                fnGrilla();
            else
                alert("Debe seleccionar una Campaña, verifique");
        });

        $('#ddlPais').change(function () {
            var Id = $(this).val();
            if (Id != "") {
                waitingDialog({});
                $.ajaxSetup({ cache: false });
                $.ajax({
                    type: 'GET',
                    url: baseUrl + 'Cronograma/ObtenterCampaniasPorPais',
                    data: "PaisID=" + (Id == "" ? 0 : Id),
                    cache: false,
                    dataType: 'Json',
                    success: function (data) {
                        if (checkTimeout(data)) {
                            LimpiarDependencias(Id);
                            var ddlCampania = $('#ddlCampania');
                            var ddlZona = $('#ddlZona');
                            var ddlCampaniaRZ = $('#ddlCampaniaRegistroZona');
                            var ddlZonaRZ = $('#ddlZonaRegistroZona');
                            ddlCampania.empty();
                            ddlCampaniaRZ.empty();
                            if (data.lista.length > 0) {
                                ddlCampania.append($('<option/>', {
                                    value: "",
                                    text: "-- Seleccionar --"
                                }));
                                ddlCampaniaRZ.append($('<option/>', {
                                    value: "",
                                    text: "-- Seleccionar --"
                                }));
                                if (Id != "") {
                                    for (var item in data.lista) {
                                        ddlCampania.append($('<option/>', {
                                            value: data.lista[item].CampaniaID,
                                            text: data.lista[item].Codigo
                                        }));
                                        ddlCampaniaRZ.append($('<option/>', {
                                            value: data.lista[item].CampaniaID,
                                            text: data.lista[item].Codigo
                                        }));
                                    }
                                }
                            }
                            if (data.listaZonas.length > 0) {
                                for (var item in data.listaZonas) {
                                    if (data.listaZonas.hasOwnProperty(item)) {
                                        ddlZona.append($('<option/>', {
                                            value: data.listaZonas[item].ZonaID,
                                            text: data.listaZonas[item].Codigo
                                        }));
                                        ddlZonaRZ.append($('<option/>', {
                                            value: data.listaZonas[item].ZonaID,
                                            text: data.listaZonas[item].Codigo
                                        }));
                                    }
                                }
                            }
                            closeWaitingDialog();
                        }
                    },
                    error: function (x, xh, xhr) {
                        if (checkTimeout(x)) {
                            closeWaitingDialog();
                        }
                    }
                });
            } else LimpiarDependencias(Id);
        });
    });


        function fnGrilla() {
            jQuery("#list").jqGrid({
                url: baseUrl + "Cronograma/ConsultarCronogramaAnticipado",
                hidegrid: false,
                datatype: 'json',
                postData: ({
                    CampaniaID: function () { return jQuery.trim($("#ddlCampania").val()); },
                    TipoCronogramaID: function () { return jQuery.trim($("#hdTipoCronograma").val()); },
                    PaisID: function () { return jQuery.trim($("#ddlPais").val()); },
                    ZonaID: function () { return jQuery.trim($("#ddlZona").val()); }
                }),
                mtype: 'GET',
                contentType: "application/json; charset=utf-8",
                colNames: ['CampaniaID', 'Zona', 'Fecha Facturación', 'Fecha Refacturación', '', 'ZonaID'],
                colModel: [
                    { name: 'CampaniaID', index: 'CampaniaID', width: 20, editable: true, resizable: false, hidden: true },
                    { name: 'Zona', index: 'Zona', width: 80, editable: true, resizable: false },
                    { name: 'FechaInicioWeb', index: 'FechaInicioWeb', width: 80, editable: true, resizable: false },
                    { name: 'FechaInicioDD', index: 'FechaInicioDD', width: 80, editable: true, resizable: false },
                    { name: 'Acciones', index: 'Acciones', width: 15, editable: true, sortable: false, align: 'center', resizable: false, formatter: ShowActions },
                    { name: 'ZonaID', index: 'ZonaID', width: 20, editable: true, resizable: false, hidden: true },
                ],
                jsonReader:
                    {
                        root: "rows",
                        page: "page",
                        total: "total",
                        records: "records",
                        repeatitems: true,
                        cell: "cell",
                        id: "id",
                        zonaID: "zonaID"
                    },
                pager: jQuery('#pager'),
                loadtext: 'Cargando datos...',
                recordtext: "{0} - {1} de {2} Registros",
                emptyrecords: 'No hay resultados',
                rowNum: 10,
                scrollOffset: 0,
                rowList: [10, 20, 30, 40, 50],
                sortname: 'Nombre',
                sortorder: 'asc',
                viewrecords: true,
                multiselect: false,
                height: 'auto',
                width: 930,
                pgtext: 'Pág: {0} de {1}',
                altRows: true,
                altclass: 'jQGridAltRowClass',
                loadComplete: function () { },
                gridComplete: function () { }
            });
            jQuery("#list").jqGrid('navGrid', "#pager", { edit: false, add: false, refresh: false, del: false, search: false });
            jQuery("#list").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');

            function ShowActions(cellvalue, options, rowObject) {
                var Campania = $("#ddlCampania option:selected").text();
                var Pais = $("#ddlPais option:selected").text();
                var Edit = "&nbsp;<a href='javascript:;' onclick=\"jQuery('#list').Editar('" + options.rowId + "','" + rowObject[1].replace(/\"*/g, '') + "','" + Campania + "','" + Pais + "','" + rowObject[0] + "');\" >" + "<img src='@Url.Content("~/Content/Images/Edit.png")' alt='Editar Cronograma' title='Editar Cronograma' border='0' /></a>";
                var Del = "&nbsp;<a href='javascript:;' onclick=\"jQuery('#list').Eliminar('" + options.rowId + "','" + rowObject[1].replace(/\"*/g, '') + "','" + Campania + "','" + Pais + "','" + rowObject[0] + "');\" >" + "<img src='@Url.Content("~/Content/Images/Delete.png")' alt='Eliminar Cronograma' title='Eliminar Cronograma' border='0' /></a>";
                return Edit + Del;
            };
        }

        $.jgrid.extend({
            Editar: function (Id, Zona, Campania, Pais, CampaniaID) {
                
                $('#txtFecIniFac').val(jQuery("#list").jqGrid('getCell', Id, 'FechaInicioWeb'));
                $('#txtFecIniReFac').val(jQuery("#list").jqGrid('getCell', Id, 'FechaInicioDD'));

                $("#lblPais").text(Pais);
                $("#lblCampania").text(Campania);
                $("#lblZona").text(Zona);

                $('#hdCampaniaID').val(CampaniaID);
                $('#hdZonaID').val(Id);
                HideDiv();
                return false;
            },
            Eliminar: function (Id, Zona, Campania, Pais, CampaniaID) {
                var elimina = confirm('¿ Está seguro que desea eliminar el registro seleccionado ?');
                if (!elimina)
                    return false;
                waitingDialog({});
                jQuery.ajax({
                    type: 'POST',
                    url: baseUrl + 'Cronograma/Delete',
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify({
                        PaisID: $("#ddlPais option:selected").val(),
                        CampaniaID: CampaniaID,
                        ZonaID: Id,
                        CodigoZona: Zona,
                        CodigoCampania: Campania
                    }),
                    async: true,
                    success: function (data) {
                        if (checkTimeout(data)) {
                            closeWaitingDialog();
                            if (data.success == true) {
                                alert(data.message);
                                jQuery("#list").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');
                            }
                            else
                                alert(data.message);
                        }
                    },
                    error: function (data, error) {
                        if (checkTimeout(data)) {
                            closeWaitingDialog();
                            alert("Ocurrió un Error al tratar de realizar la acción.");
                        }
                    }
                });
                return false;
            }
        });


        function GetDateJson(jsonDate) {
            var jsonDate = jsonDate;
            var value = new Date(parseInt(jsonDate.substr(6)));
            var ret = value.getMonth() + 1 + "/" + value.getDate() + "/" + value.getFullYear();
            return ret;
        }

        function ShowDiv() {
            LimpiarCampos();
            $("#Registro").hide();
            $("#Listado").show('slow');
        }

        function HideDiv() {
            $("#Listado").hide('slow');
            $("#Registro").show();
        }

        function ShowDivRegistroZonas() {
            LimpiarCamposZonas();
            $("#RegistroZonas").hide();
            $("#Listado").show('slow');
        }

        function HideDivRegistroZonas() {
            if (jQuery.trim($("#ddlPais").val()) == "") {
                alert("Debe seleccionar un País, verifique");
                return false;
            }
            $("#ddlPaisRegistroZona").val($("#ddlPais").val());
            $('#ddlPaisRegistroZona').prop('disabled', 'disabled');
            $("#Listado").hide('slow');
            $("#RegistroZonas").show();
        }

        function LimpiarCampos() {
            $("#lblPais").text('');
            $("#lblCampania").text('');
            $("#lblZona").text('');
            $('#hdCampaniaID').val('');
            $('#hdZonaID').val('');
            $('#txtFecIniFac').val('');
            $('#txtFecFinFac').val('');
            $('#txtFecIniReFac').val('');
            $('#txtFecFinReFac').val('');
            $('#txtFecIniFacN').val('');
            $('#txtFecIniReFacN').val('');
        }

        function LimpiarCamposZonas() {
            $('#txtFecIniFacZona').val('');
            $('#txtFecIniReFacZona').val('');
            $('#ddlCampaniaRegistroZona').val('');
            $('#ddlZonaRegistroZona').val('');
        }

        function IniDivRegistro() {

            $("#txtFecIniFacN").datepicker({
                showOn: "button",
                buttonImage: '@Url.Content("~/Content/Images/calendar.png")',
                buttonImageOnly: true,
                dateFormat: 'dd/mm/yy'
            }).mask('99/99/9999');

            $("#txtFecIniReFacN").datepicker({
                showOn: "button",
                buttonImage: '@Url.Content("~/Content/Images/calendar.png")',
                buttonImageOnly: true,
                dateFormat: 'dd/mm/yy'
            }).mask('99/99/9999');

            $("#txtFecIniFacZona").datepicker({
                showOn: "button",
                buttonImage: '@Url.Content("~/Content/Images/calendar.png")',
                buttonImageOnly: true,
                dateFormat: 'dd/mm/yy'
                        }).mask('99/99/9999');

            $("#txtFecIniReFacZona").datepicker({
                showOn: "button",
                buttonImage: '@Url.Content("~/Content/Images/calendar.png")',
                buttonImageOnly: true,
                dateFormat: 'dd/mm/yy'
            }).mask('99/99/9999');
        }

    function GuardarCronograma() {
        var FechaFacturacionIni = jQuery.trim($("#txtFecIniFacN").val());
        var FechaReFacturacionIni = jQuery.trim($("#txtFecIniReFacN").val());
        var AnioCampania = jQuery.trim($("#ddlCampania option:selected").text().substr(0, 4));
        var PaisId = $("#ddlPais").val();

        var vMessage = "";

        if (FechaFacturacionIni == "")
            vMessage += "- Debe ingresar la Fecha de Facturación.\n";

        if (FechaReFacturacionIni == "")
            vMessage += "- Debe ingresar la Fecha de Refacturación.\n";

        if (compare_dates(FechaFacturacionIni, FechaReFacturacionIni))
            vMessage += "- La Fecha de Refacturación debe ser mayor o igual a la Fecha de Facturación.\n";

        if (FechaFacturacionIni != "") {
            if (FechaFacturacionIni.length == 10) {
                var AnioFechaFac = jQuery.trim($("#txtFecIniFacN").val()).substr(6, 4);
                if (AnioCampania < AnioFechaFac)
                    vMessage += "- Debe ingresar Una Fecha de Facturación correspondiente al año de la Campaña.\n";
            }
        }
        if (FechaReFacturacionIni != "") {
            if (FechaReFacturacionIni.length == 10) {
                var AnioFechaReFac = jQuery.trim($("#txtFecIniReFacN").val()).substr(6, 4);
                if (AnioCampania < AnioFechaReFac)
                    vMessage += "- Debe ingresar Una Fecha de Refacturación correspondiente al año de la Campaña.\n";
            }
        }

        if (vMessage != "") {
            alert(vMessage);
            $('#txtFecIniFacN').focus();
            return false;
        } else {

                var Cronograma = {
                    CampaniaID: jQuery('#hdCampaniaID').val(),
                    ZonaID: jQuery('#hdZonaID').val(),
                    TipoCronogramaID: jQuery('#hdTipoCronograma').val(),
                    FechaInicioWeb: jQuery('#txtFecIniFacN').val(),
                    FechaFinWeb: jQuery('#txtFecIniFacN').val(),
                    FechaInicioDD: $("#txtFecIniReFacN").val(),
                    FechaFinDD: $("#txtFecIniReFacN").val(),
                    PaisID: PaisId,
                    CodigoZona: $("#lblZona").text(),
                    CodigoCampania: $("#lblCampania").text()
                };

                jQuery.ajax({
                    type: 'POST',
                    url: baseUrl + 'Cronograma/Update',
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(Cronograma),
                    async: true,
                    success: function (data) {
                        if (checkTimeout(data)) {
                            if (data.success) {
                                var item = data.items;
                                alert(data.message);
                                ShowDiv();
                                jQuery("#list").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');
                            }
                            else {
                                alert(data.message);
                            }
                        }
                    },
                    error: function (data, error) {
                        if (checkTimeout(data)) {
                            alert("Ocurrio un Error, vuelva a ingresar");
                        }
                    }
                });
                return false;


        }
    }

    function GuardarCronogramaNuevo() {
        var FechaFact = jQuery.trim($("#txtFecIniFacZona").val());
        var FechaReFact = jQuery.trim($("#txtFecIniReFacZona").val());
        var AnioCampania = jQuery.trim($("#ddlCampaniaRegistroZona option:selected").text().substr(0, 4));
        var PaisId = $("#ddlPaisRegistroZona").val();

        var vMessage = "";

        if (jQuery('#ddlCampaniaRegistroZona').val() == "")
            vMessage += "- Debe ingresar la Campaña.\n";

        if (jQuery('#ddlZonaRegistroZona').val() == "")
            vMessage += "- Debe ingresar la Zona.\n";

        if (FechaFact == "")
            vMessage += "- Debe ingresar la Fecha de Facturación.\n";

        if (FechaReFact == "")
            vMessage += "- Debe ingresar la Fecha de Refacturación.\n";

        if (compare_dates(FechaFact, FechaReFact))
            vMessage += "- La Fecha de Refacturación debe ser mayor o igual a la Fecha de Facturación.\n";

        if (FechaFact != "") {
            if (FechaFact.length == 10) {
                var AnioFechaFac = jQuery.trim($("#txtFecIniFacZona").val()).substr(6, 4);
                if (AnioCampania < AnioFechaFac)
                    vMessage += "- Debe ingresar Una Fecha de Facturación correspondiente al año de la Campaña.\n";
            }
        }
        if (FechaReFact != "") {
            if (FechaReFact.length == 10) {
                var AnioFechaReFac = jQuery.trim($("#txtFecIniReFacZona").val()).substr(6, 4);
                if (AnioCampania < AnioFechaReFac)
                    vMessage += "- Debe ingresar Una Fecha de Refacturación correspondiente al año de la Campaña.\n";
            }
        }

        if (vMessage != "") {
            alert(vMessage);
            $('#txtFecIniFacZona').focus();
            return false;
        } else {

            var Cronograma = {
                CampaniaID: jQuery('#ddlCampaniaRegistroZona').val(),
                ZonaID: jQuery('#ddlZonaRegistroZona').val(),
                TipoCronogramaID: jQuery('#hdTipoCronograma').val(),
                FechaInicioWeb: jQuery('#txtFecIniFacZona').val(),
                FechaFinWeb: jQuery('#txtFecIniFacZona').val(),
                FechaInicioDD: $("#txtFecIniReFacZona").val(),
                FechaFinDD: $("#txtFecIniReFacZona").val(),
                PaisID: PaisId,
                CodigoZona: jQuery.trim($("#ddlZonaRegistroZona option:selected").text()),
                CodigoCampania: jQuery.trim($("#ddlCampaniaRegistroZona option:selected").text())
            };

            jQuery.ajax({
                type: 'POST',
                url: baseUrl + 'Cronograma/Insert',
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(Cronograma),
                async: true,
                success: function (data) {
                    if (checkTimeout(data)) {
                        if (data.success) {
                            var item = data.items;
                            alert(data.message);
                            ShowDivRegistroZonas();
                            jQuery("#list").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');
                        }
                        else {
                            alert(data.message);
                        }
                    }
                },
                error: function (data, error) {
                    if (checkTimeout(data)) {
                        alert("Ocurrio un Error, vuelva a ingresar");
                    }
                }
            });
            return false;
        }
    }


    function ValidacionCronogramaDA() {

            var Cronograma = {
                fechaFacturacion: jQuery('#txtFecIniFac').val()
            };

            jQuery.ajax({
                type: 'POST',
                url: baseUrl + 'Cronograma/GetCronogramaDA',
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(Cronograma),
                async: false,
                success: function (data) {
                    if (checkTimeout(data)) {
                        if (data.success) {
                            alert("No es posible actualizar la fecha de demanda por que ya se ha ejecutado");
                            return false;
                        }
                        else {
                            GuardarCronograma();
                            return true;
                        }
                    }
                },
                error: function (data, error) {
                    if (checkTimeout(data)) {
                        alert("Ocurrio un Error, vuelva a ingresar");
                    }
                }
            }); 
       
    }


</script>

<div id="Listado">

    <input type="hidden" id="hdTipoCronograma" />

    <div class="wrap_cab">
        <div class="filtros2">
            <div class="elements">
                <div class="div-2">
                    <h1>Cronograma de <span>Demanda Anticipada</span></h1>
                </div>
                <div class="div-3">
                    <div class="titG">País:</div>
                    <div class="selectA borde_redondeado">
                        @Html.DropDownListFor(model => model.CampaniaID, new SelectList(Model.listaPaises, "PaisID", "Nombre"), "-- Seleccionar --", new { id = "ddlPais" })
                    </div>
                    <div class="titB">Campaña:</div>
                    <div class="selectA borde_redondeado">
                        @Html.DropDownListFor(model => model.CampaniaID, new SelectList(Model.listaCampania, "CampaniaID", "NombreCorto"), "-- Seleccionar --", new { id = "ddlCampania" })
                    </div>

                </div>
                <div class="div-3">
                    <div class="titG">Zona:</div>
                    <div class="selectA borde_redondeado">
                        @Html.DropDownListFor(model => model.ZonaID, new SelectList(Model.listaZonas, "ZonaID", "Codigo"), "-- Seleccionar --", new { id = "ddlZona" })
                    </div>
                    <div class="input_search">
                        <input type="submit" name="" id="btnBuscar" value="Buscar" />
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="wrap">
        <div class="container clearfix">
            <div class="border-wrapper">
                <table id="list"></table>
                <div id="pager"></div>
            </div>
            <div class="div-3">
                <div class="titAuto">
                    <div class="input_search">
                        <input type="button" name="btnNuevo" id="btnNuevo" value="Nuevo" onclick="return HideDivRegistroZonas();" />
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

<div id="Registro" style="display: none;">
    <input type="hidden" id="hdCampaniaID" />
    <input type="hidden" id="hdZonaID" />

    <div class="wrap_cab">
        <div class="filtros">
            <div class="elements">
                <div class="div-2">
                    <h1>Edición de Fechas del <span>Cronograma de Demanda Anticipada</span></h1>
                </div>
            </div>
        </div>
    </div>

    <div class="wrap">
        <div class="container clearfix">
            <div class="border-wrapper_reg">
                <div class="div-3">
                    <table class="Edit_reg" style="text-align: left; width: 100%">
                        <tr>
                            <td>
                                <div class="label1">País:</div>
                                <div class="label2" id="lblPais"></div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="label1">Campaña:</div>
                                <div class="label2" id="lblCampania"></div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="label1">Zona:</div>
                                <div class="label2" id="lblZona"></div>
                            </td>
                        </tr>
                    </table>
                </div>
                <h3>Fechas Originales</h3>
                <div class="div-3">
                    <div class="titF">Fecha Facturación:</div>
                    <div class="selectP2 borde_redondeado">
                        <input type="text" id="txtFecIniFac" readonly="true" />
                    </div>
                </div>

                <div class="div-3">
                    <div class="titF">Fecha Refacturación:</div>
                    <div class="selectP2 borde_redondeado">
                        <input type="text" id="txtFecIniReFac" readonly="true" />
                    </div>
                </div>

                <h3>Fechas Nuevas</h3>
                <div class="div-3">
                    <div class="titF">Fecha Facturación:</div>
                    <div class="calendar borde_redondeado">
                        <input type="text" id="txtFecIniFacN" />
                    </div>
                </div>

                <div class="div-3">
                    <div class="titF">Fecha Refacturación:</div>
                    <div class="calendar borde_redondeado">
                        <input type="text" id="txtFecIniReFacN" />
                    </div>
                </div>

                <div class="div-3">
                    <div class="titF"></div>
                    <div class="titC"></div>
                    <div class="input_global">
                        <input type="button" value="Guardar" id="btnGuardar" onclick="return ValidacionCronogramaDA();" />
                    </div>
                    <div class="input_global">
                        <input type="button" value="Cancelar" id="btnCancelar" onclick="ShowDiv();" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="RegistroZonas" style="display: none;">
    <div class="wrap_cab">
        <div class="filtros">
            <div class="elements">
                <div class="div-2">
                    <h1>Registro de Zonas para el <span>Cronograma de Demanda Anticipada</span></h1>
                </div>
            </div>
        </div>
    </div>
    <div class="wrap">
        <div class="container clearfix">
            <div class="border-wrapper_reg">
                <h3>Información General</h3>
                <div class="div-3">
                    <div class="titF">País:</div>
                    <div class="selectA borde_redondeado">
                        @Html.DropDownListFor(model => model.CampaniaID, new SelectList(Model.listaPaises, "PaisID", "Nombre"), "-- Seleccionar --", new { id = "ddlPaisRegistroZona" })
                    </div>
                </div>
                <div class="div-3">
                    <div class="titF">Campaña:</div>
                    <div class="selectA borde_redondeado">
                        @Html.DropDownListFor(model => model.CampaniaID, new SelectList(Model.listaCampania, "CampaniaID", "NombreCorto"), "-- Seleccionar --", new { id = "ddlCampaniaRegistroZona" })
                    </div>
                </div>
                <div class="div-3">
                    <div class="titF">Zona:</div>
                    <div class="selectA borde_redondeado">
                        @Html.DropDownListFor(model => model.ZonaID, new SelectList(Model.listaZonas, "ZonaID", "Codigo"), "-- Seleccionar --", new { id = "ddlZonaRegistroZona" })
                    </div>
                </div>
                <h3>Fechas</h3>
                <div class="div-3">
                    <div class="titF">Fecha Facturación:</div>
                    <div class="calendar borde_redondeado">
                        <input type="text" id="txtFecIniFacZona" />
                    </div>
                </div>
                <div class="div-3">
                    <div class="titF">Fecha Refacturación:</div>
                    <div class="calendar borde_redondeado">
                        <input type="text" id="txtFecIniReFacZona" />
                    </div>
                </div>
                <div class="div-3">
                    <div class="titF"></div>
                    <div class="titC"></div>
                    <div class="input_global">
                        <input type="button" value="Guardar" id="btnGuardarZona" onclick="return GuardarCronogramaNuevo();" />

                    </div>
                    <div class="input_global">
                        <input type="button" value="Cancelar" id="btnCancelarZona" onclick="ShowDivRegistroZonas();" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="loadingScreen"></div>



