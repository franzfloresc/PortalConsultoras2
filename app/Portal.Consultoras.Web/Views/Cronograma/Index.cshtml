@model Portal.Consultoras.Web.Models.CronogramaModel
@{
    ViewBag.Title = "Cronograma";
}
<script type="text/javascript">


    function LimpiarDependencias(Id) {
        var ddlZona = $('#ddlZona');
        var ddlCampania = $('#ddlCampania');
        ddlCampania.empty();
        ddlZona.empty();
        if (Id != "") {
            ddlZona.append($('<option/>', {
                value: "",
                text: "-- Todas --"
            }));
        } else {
            ddlZona.append($('<option/>', {
                value: "",
                text: "-- Seleccionar --"
            }));
        }
        ddlCampania.append($('<option/>', {
            value: "",
            text: "-- Seleccionar --"
        }));
    }

    jQuery(document).ready(function () {
        $("#hdTipoCronograma").val('@Portal.Consultoras.Common.Constantes.TipoCronograma.Regular');
        fnGrilla();
        if ('@ViewBag.TieneCronogramaExtendido' == 0) {
            var colPos = 4;
            var myGrid = $('#list');
            myGrid.jqGrid('hideCol', myGrid.getGridParam("colModel")[colPos].name);
            myGrid.jqGrid('setColProp', myGrid.getGridParam("colModel")[colPos].name, { width: 0 });
            myGrid.jqGrid('setGridWidth', 930);
        }
        $("#btnBuscar").click(function () {

            if (jQuery.trim($("#ddlPais").val()) == "") {
                alert("Debe seleccionar un País, verifique");
                return false;
            }
            if (jQuery.trim($("#ddlCampania").val()) != "") {
                $("#hdTipoConsulta").val('1');
                fnGrilla();
            }
            else
                alert("Debe seleccionar una Campaña, verifique");
        });

        $('#ddlCampania').click(function () {
            var n = 10;
            var val = this.selectedIndex;
            if ((this.selectedIndex < ($(this).find('option').length - n)) && (this.selectedIndex > n)) {
                this.selectedIndex += n;
                this.selectedIndex -= (2 * n);
                this.selectedIndex += n;
            } else {
                this.selectedIndex = ((this.selectedIndex < n) ? 0 : $(this).find('option').length - 1);
                this.selectedIndex = val;
            }
        });

        $('#ddlPais').change(function () {
            var Id = $(this).val();
            if (Id != "") {
                waitingDialog({});
                $.ajaxSetup({
                    cache: false
                });
                $.getJSON(baseUrl + 'Cronograma/ObtenterCampaniasPorPais', { PaisID: Id == "" ? 0 : Id }, function (data) {
                    if (checkTimeout(data)) {
                        LimpiarDependencias(Id);

                        var ddlCampania = $('#ddlCampania');
                        var ddlZona = $('#ddlZona');
                        ddlCampania.empty();
                        if (data.lista.length > 0) {
                            ddlCampania.append($('<option/>', {
                                value: "",
                                text: "-- Seleccionar --"
                            }));
                            if (Id != "") {
                                for (var item in data.lista) {
                                    ddlCampania.append($('<option/>', {
                                        value: data.lista[item].CampaniaID,
                                        text: data.lista[item].Codigo
                                    }));
                                }
                            }
                        }
                        if (data.listaZonas.length > 0) {
                            for (var item in data.listaZonas) {
                                if (data.listaZonas.hasOwnProperty(item)) {
                                    ddlZona.append($('<option/>', {
                                        value: data.listaZonas[item].ZonaID,
                                        text: data.listaZonas[item].Codigo
                                    }));
                                }
                            }
                        }
                        closeWaitingDialog();
                    }
                });
            } else LimpiarDependencias(Id);
        });

    });

    function fnGrilla() {
            jQuery("#list").jqGrid({
                url: baseUrl + "Cronograma/ConsultarCronograma",
                hidegrid: false,
                datatype: 'json',
                postData: ({
                    CampaniaID: function () { return jQuery.trim($("#ddlCampania").val()); },
                    TipoCronogramaID: function () { return jQuery.trim($("#hdTipoCronograma").val()); },
                    PaisID: function () { return jQuery.trim($("#ddlPais").val()); },
                    ZonaID: function () { return jQuery.trim($("#ddlZona").val()); },
                    Consulta: function () { return jQuery.trim($("#hdTipoConsulta").val()); }
                }),
                mtype: 'GET',
                contentType: "application/json; charset=utf-8",
                colNames: ['', '', 'Zona', 'Fecha Facturación', 'Fecha Fin Facturación', 'Fecha Refacturación', ''],
                colModel: [
                    { name: 'CampaniaID', index: 'CampaniaID', width: 20, editable: true, resizable: false, hidden: true },
                    { name: 'ZonaID', index: 'ZonaID', width: 20, editable: true, resizable: false, hidden: true },
                    { name: 'Zona', index: 'Zona', width: 80, editable: true, resizable: false },
                    { name: 'FechaInicioWeb', index: 'FechaInicioWeb', width: 80, editable: true, resizable: false },
                    { name: 'FechaFinWeb', index: 'FechaFinWeb', width: 80, editable: true, resizable: false },
                    { name: 'FechaInicioDD', index: 'FechaInicioDD', width: 80, editable: true, resizable: false },
                    { name: 'Options', index: 'Options', width: 12, editable: true, sortable: false, align: 'center', resizable: false, formatter: ShowActions, hidden: true }
                ],
                jsonReader:
                {
                    root: "rows",
                    page: "page",
                    total: "total",
                    records: "records",
                    repeatitems: true,
                    cell: "cell",
                    id: "id"
                },
                pager: jQuery('#pager'),
                loadtext: 'Cargando datos...',
                recordtext: "{0} - {1} de {2} Registros",
                emptyrecords: 'No hay resultados',
                rowNum: 10,
                scrollOffset: 0,
                rowList: [10, 20, 30, 40, 50],
                sortname: 'Nombre',
                sortorder: 'asc',
                viewrecords: true,
                multiselect: false,
                height: 'auto',
                width: 930,
                pgtext: 'Pág: {0} de {1}',
                altRows: true,
                altclass: 'jQGridAltRowClass',
                loadComplete: function () { },
                gridComplete: function () { }
            });
            jQuery("#list").jqGrid('navGrid', "#pager", { edit: false, add: false, refresh: false, del: false, search: false });
            jQuery("#list").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');
        }

        function ShowActions(cellvalue, options, rowObject) {

            var cellValueInt = parseInt(cellvalue);
            var Des = "&nbsp;<a href='javascript:;' onclick=\"return jQuery('#list').CronogramaAnticipado('" + rowObject[0] + "','" + rowObject[1] + "');\" >" + "<img src='@Url.Content("~/Content/Images/cronograma.png")' alt='Registrar Cronograma como Anticipado' title='Registrar Cronograma como Anticipado' border='0' /></a>";
            return Des;
        };


        $.jgrid.extend({
            CronogramaAnticipado: function (CampaniaID, ZonaID) {
                $.ajax({
                    url: baseUrl + "Cronograma/MigrarAnticipado", type: "POST", dataType: "json",
                    data: {
                        CampaniaID: CampaniaID,
                        ZonaID: ZonaID
                    },
                    success: function (data) {
                        if (checkTimeout(data)) {
                            if (data.success) {
                                alert(data.message)
                            } else {
                                alert(data.message)
                            }
                        }
                    }
                });
                return false;
            }
        });
</script>
<input type="hidden" id="hdTipoCronograma" />
<input type="hidden" id="hdTipoConsulta" value="0" />
<div class="wrap_cab">

    <div class="filtros2">
        <div class="elements">
            <div class="div-2">
                <h1><span>Consulta Cronograma</span></h1>
            </div>
            <div class="div-3">
                <div class="titG">País:</div>
                <div class="selectA borde_redondeado">
                    @Html.DropDownListFor(model => model.PaisID, new SelectList(Model.listaPaises, "PaisID", "Nombre",Model.PaisID), "-- Seleccionar --", new { id = "ddlPais" })
                </div>
                <div class="titB">Campaña:</div>
                <div class="selectA borde_redondeado">
                    @Html.DropDownListFor(model => model.CampaniaID, new SelectList(Model.listaCampania, "CampaniaID", "NombreCorto", Model.CampaniaID), "-- Seleccionar --", new { id = "ddlCampania" })
                </div>

            </div>
            <div class="div-3">
                <div class="titG">Zona:</div>
                <div class="selectA borde_redondeado">
                    @Html.DropDownListFor(model => model.ZonaID, new SelectList(Model.listaZonas, "ZonaID", "Codigo"), "-- Seleccionar --", new { id = "ddlZona" })
                </div>
                <div class="input_search">
                    <input type="submit" name="" id="btnBuscar" value="Buscar" />
                </div>
                <input type="hidden" id="hdNombreAnt" />
            </div>
        </div>
    </div>
</div>
<!--/ .wrap-->

<div class="wrap">
    <div class="container clearfix">
        <div class="border-wrapper">

            <table id="list"></table>
            <div id="pager"></div>

        </div>
    </div>
</div>
<div id="loadingScreen"></div>
