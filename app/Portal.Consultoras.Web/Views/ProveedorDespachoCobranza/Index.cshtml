@{
    ViewBag.Title = "Index";
}

@model Portal.Consultoras.Web.Models.ProveedorDespachoCobranzaModel
@{
    ViewBag.Title = "Rol";
}
<script type="text/javascript" src="~/Scripts/jquery.form.js"></script>
<script type="text/ecmascript">
    var isoPAIS = "";
    jQuery(document).ready(function () {
        
        IniDialog();
        IniDialogCampo();

        $("#Calle").keypress(
        function (evt) {
            var charCode = (evt.which) ? evt.which : window.event.keyCode;    
                var keyChar = String.fromCharCode(charCode);
                var re = /[a-zA-Z0-9ñÑáéíóúÁÉÍÓÚ _.\/-]/;
                return re.test(keyChar);
        });

        $("#Calle").keypress(
        function (evt) {
            var charCode = (evt.which) ? evt.which : window.event.keyCode;
            var keyChar = String.fromCharCode(charCode);
            var re = /[a-zA-Z0-9ñÑáéíóúÁÉÍÓÚ _.\/-]/;
            return re.test(keyChar);
        });

        $("#Colonia").keypress(
        function (evt) {
            var charCode = (evt.which) ? evt.which : window.event.keyCode;
            var keyChar = String.fromCharCode(charCode);
            var re = /[a-zA-Z0-9ñÑáéíóúÁÉÍÓÚ _.\/-]/;
            return re.test(keyChar);
        });

        $("#Delegacion").keypress(
        function (evt) {
            var charCode = (evt.which) ? evt.which : window.event.keyCode;
            var keyChar = String.fromCharCode(charCode);
            var re = /[a-zA-Z0-9ñÑáéíóúÁÉÍÓÚ _.\/-]/;
            return re.test(keyChar);
        });

        $("#Estado").keypress(
        function (evt) {
            var charCode = (evt.which) ? evt.which : window.event.keyCode;
            var keyChar = String.fromCharCode(charCode);
            var re = /[a-zA-Z0-9ñÑáéíóúÁÉÍÓÚ _.\/-]/;
            return re.test(keyChar);
        });

        $("#CodigoZIP").keypress(
        function (evt) {
            var charCode = (evt.which) ? evt.which : window.event.keyCode;
            var keyChar = String.fromCharCode(charCode);
            var re = /[a-zA-Z0-9ñÑáéíóúÁÉÍÓÚ _.\/-]/;
            return re.test(keyChar);
        });

        OcultarCamposDireccion(1);

        $("#btnBuscar").click(function () {
            if ($("#ddlPais").val() == "") {
                alert("Debe seleccionar un País, verifique");
                return false;
            }
            fnGrilla();
        });
        
        $("#btnBuscarCampos").click(function () {

            if ($("#ddlPais").val() == "") {
                alert("Debe seleccionar un País, verifique");
                return false;
            }

            var valorProveedorId = $("#ddlProveedorDespachoCobranza").val();
            var valorCampos = $("#ddlCampos").val();

            if (valorProveedorId== "") {
                alert("Debe seleccionar un Proveedor.");
                $("#ddlProveedorDespachoCobranza").focus();
                return;
            }

            fnGrillaMnto();
        });


        $("#ddlCampoCampos").change(function () {

            var Id = $(this).val();
            if (Id != "") {

                if (Id == 3 || Id == 4) {
                    OcultarCamposDireccion(2);
                } else {
                    OcultarCamposDireccion(1);
                }

                var item = {
                    CampoId: Id,
                    ProveedorDespachoCobranzaID: $('#ddlCampoCampos').val()
                };

                jQuery.ajax({
                    type: 'POST',
                    url: baseUrl + 'ProveedorDespachoCobranza/ObtenerDatosCampo',
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(item),
                    async: true,
                    success: function (data) {
                        closeWaitingDialog();
                        if (data.success == true) {
                            var item = data.items;
                            if (data.valor != "") {
                                alert(data.valor);
                                $('#DialoCampo').dialog('close');
                            }
                        }
                        else {
                            alert(data.message);
                        }
                        
                    },
                    error: function (data, error) {
                        closeWaitingDialog();
                        alert("Error del Sistema.");
                    }
                });
            }
        });

        $('#frmProveedorDespachoCobranza').ajaxForm({
            beforeSubmit: function () {
                var vMessage = '';

                if (jQuery.trim($('#NombreComercial').val()) == "")
                    vMessage = "Debe ingresar un Nombre Comercial.";

                if (vMessage != "") {
                    alert(vMessage);
                    $('#NombreComercial').focus();
                    return false;
                }

                if (jQuery.trim($('#RazonSocial').val()) == "")
                    vMessage = "Debe ingresar una Razón Social.";

                if (vMessage != "") {
                    alert(vMessage);
                    $('#RazonSocial').focus();
                    return false;
                }

                if (jQuery.trim($('#RFC').val()) == "")
                    vMessage = "Debe ingresar un RFC.";

                if (vMessage != "") {
                    alert(vMessage);
                    $('#RFC').focus();
                    return false;
                }

                if (vMessage != "") {
                    alert(vMessage);
                    return false;
                }

                if (vMessage.length > 0) {
                    alert(vMessage);
                    return false;
                }
            },
            success: fnRespuestaProveedorDespachoCobranza,
            debug: true
        });

        function fnRespuestaProveedorDespachoCobranza(responseText, statusText, xhr, $form) {
            if (checkTimeout(responseText)) {
                $("#list").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');
                if (responseText && typeof responseText === "string") {
                    alert($.parseJSON(responseText).message);
                } else {
                    alert(responseText.message);
                }
                $('#DialoProveedorDespachoCobranza').dialog('close');
            }
        }

        function fnRespuestaCampo(responseText, statusText, xhr, $form) {
            if (checkTimeout(responseText)) {
                if (responseText && typeof responseText === "string") {
                    alert($.parseJSON(responseText).message);
                } else {
                    alert(responseText.message);
                }
                $('#DialoCampo').dialog('close');
            }
        }

        var countPais = $("#ddlPais option").length;
        if (countPais > 1) {
            $("#ddlPais").prop('selectedIndex', 1);
            fnGrilla();
        }

        var countProveedor = $("#ddlProveedorDespachoCobranza option").length;
        if (countProveedor > 1) {
            $("#ddlProveedorDespachoCobranza").prop('selectedIndex', 1);
            fnGrillaMnto();
        }

    });

    function OcultarCamposDireccion(Ocultar){
    
        if (Ocultar == 1) {
            $('#DivCalle').hide();
            $('#DivColonia').hide();
            $('#DivDelegacion').hide();
            $('#DivEstado').hide();
            $('#DivZIP').hide();
            $('#DivValor').show();
        } else {
            $('#DivCalle').show();
            $('#DivColonia').show();
            $('#DivDelegacion').show();
            $('#DivEstado').show();
            $('#DivZIP').show();
            $('#DivValor').hide();
        }
    
    }

    function IniDialog() {
        $('#DialoProveedorDespachoCobranza').dialog({
            autoOpen: false,
            resizable: false,
            modal: true,
            closeOnEscape: true,
            width: 600,
            draggable: true,
            title: "Registro de Proveedor",
            buttons:
            {
                "Guardar": function () {
                    var vMessage = "";
                    $('#frmProveedorDespachoCobranza').submit();
                },
                "Cerrar": function () {
                    $(this).dialog('close');
                }
            }
        });
    }

        function IniDialogCampo() {
            $('#DialoCampo').dialog({
                autoOpen: false,
                resizable: false,
                modal: true,
                closeOnEscape: true,
                width: 600,
                draggable: true,
                title: "Registro de Campos por proveedor",
                buttons:
                {
                    "Guardar": function () {
                        var vMessage = "";

                        if ($('#ddlCampoCampos').val() == 3 || $('#ddlCampoCampos').val() == 4) {

                            if (jQuery.trim($('#Calle').val()) == "")
                                vMessage = "Debe ingresar una Calle.";

                            if (vMessage != "") {
                                alert(vMessage);
                                $('#Calle').focus();
                                return false;
                            }

                            if (jQuery.trim($('#Colonia').val()) == "")
                                vMessage = "Debe ingresar un Colonia.";

                            if (vMessage != "") {
                                alert(vMessage);
                                $('#Colonia').focus();
                                return false;
                            }

                            if (jQuery.trim($('#Delegacion').val()) == "")
                                vMessage = "Debe ingresar un Delegación.";

                            if (vMessage != "") {
                                alert(vMessage);
                                $('#Delegacion').focus();
                                return false;
                            }

                            if (jQuery.trim($('#Estado').val()) == "")
                                vMessage = "Debe ingresar un Estado.";

                            if (vMessage != "") {
                                alert(vMessage);
                                $('#Estado').focus();
                                return false;
                            }

                            if (jQuery.trim($('#CodigoZIP').val()) == "")
                                vMessage = "Debe ingresar un Código Postal.";

                            if (vMessage != "") {
                                alert(vMessage);
                                $('#CodigoZIP').focus();
                                return false;
                            }

                        } else {

                            if (jQuery.trim($('#Valor').val()) == "")
                                vMessage = "Debe ingresar un Valor.";

                            if (vMessage != "") {
                                alert(vMessage);
                                $('#Valor').focus();
                                return false;
                            }

                        }

                        if (jQuery.trim($('#ddlCampoCampos').val()) == "")
                            vMessage = "Debe seleccionar un Campo de la lista.";

                        if (vMessage != "") {
                            alert(vMessage);
                            $('#ddlCampoCampos').focus();
                            return false;
                        }

                        if (jQuery.trim($('#ddlCampoProveedorDespachoCobranza').val()) == "")
                            vMessage = "Debe seleccionar un Proveedor de la lista.";

                        if (vMessage != "") {
                            alert(vMessage);
                            $('#ddlCampoProveedorDespachoCobranza').focus();
                            return false;
                        }
                        else {
                            RegistrarCampo();
                        }
                    },
                    "Cerrar": function () {
                        $(this).dialog('close');
                    }
                }
            });
        }

        function ShowDialog(id) {
            showDialog(id);
        }

        function CloseDialog(id) {
            $("#" + id).dialog('close');
        }

        function RegistrarProveedor() {
            var item = {
                NombreComercial: jQuery.trim($("#NombreComercial").val()),
                RazonSocial: jQuery.trim($("#RazonSocial").val()),
                RFC: jQuery.trim($("#RFC").val()),
                ProveedorDespachoCobranzaID: $('#hdProveedorDespachoCobranzaID').val()
            };

            jQuery.ajax({
                type: 'POST',
                url: baseUrl + 'ProveedorDespachoCobranza/Mantener',
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(item),
                async: true,
                success: function (data) {
                    if (checkTimeout(data)) {
                        if (data.success == true) {
                            var item = data.items;
                            alert(data.message);
                            CloseDialog("DialoProveedorDespachoCobranza");
                            jQuery("#list").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');
                        }
                        else {
                            alert(data.message);
                        }
                    }
                },
                error: function (data, error) {
                    if (checkTimeout(data)) {
                        alert(data.message);
                        CloseDialog("DialoProveedorDespachoCobranza");
                    }
                }
            });
        }

        function RegistrarCampo() {
            var tmpValor = "";
            var Calle = "";
            Id = $(ddlCampoCampos).val();
            // si es direccion o domicilio fiscal
            if (Id == 3 || Id == 4) {

                    Calle = $("#Calle").val();
                    Colonia = jQuery.trim($("#Colonia").val());
                    Delegacion = jQuery.trim($("#Delegacion").val());
                    Estado = jQuery.trim($("#Estado").val());
                    CodigoZIP = jQuery.trim($("#CodigoZIP").val());
                    tmpValor = Calle + ',' + Colonia + ',' + Delegacion + ',' + Estado + ',' + CodigoZIP;
                    
            }
                //si son los otros campos
            else {
                    //Valor Actual
                    tmpValor = jQuery.trim($("#Valor").val());
                }

            var item = {
                NombreComercial: jQuery.trim($("#NombreComercial").val()),
                RazonSocial: jQuery.trim($("#RazonSocial").val()),
                RFC: jQuery.trim($("#RFC").val()),
                ProveedorDespachoCobranzaID: $('#ddlCampoProveedorDespachoCobranza').val(),
                Valor: tmpValor,
                Accion: jQuery.trim($('#hdAccion').val()),
                CampoId: jQuery.trim($("#ddlCampoCampos").val()),
                ValorAnterior: jQuery.trim($('#hdValorAnterior').val())
                //1 Agregar, 2 Actualizar, 3 Eliminar  
            };

            jQuery.ajax({
                type: 'POST',
                url: baseUrl + 'ProveedorDespachoCobranza/MantenerCampo',
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(item),
                async: true,
                success: function (data) {
                    if (checkTimeout(data)) {
                        if (data.success == true) {
                            var item = data.items;
                            alert(data.message);
                            CloseDialog("DialoCampo");
                            jQuery("#listMnto").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');
                        }
                        else {
                            alert(data.message);
                        }
                    }
                },
                error: function (data, error) {
                    if (checkTimeout(data)) {
                        alert(data.message);
                        CloseDialog("DialoProveedorDespachoCobranza");
                    }
                }
            });
        }

        function fnGrilla() {
            jQuery("#list").jqGrid({
                url: baseUrl + "ProveedorDespachoCobranza/Consultar",
                hidegrid: false,
                datatype: 'json',
                postData: ({
                    vpaisID: function () { return $("#ddlPais").val() }
                }),
                mtype: 'GET',
                contentType: "application/json; charset=utf-8",
                colNames: ['Código', 'Nombre Comercial', 'Razón Social', 'RFC', 'Acción'],
                colModel: [
                    { name: 'ProveedorDespachoCobranzaID', index: 'ProveedorDespachoCobranzaID', width: 8, editable: false, align: 'center', hidden: false },
                    { name: 'NombreComercial', index: 'NombreComercial', width: 40, editable: true, resizable: false },
                    { name: 'RazonSocial', index: 'RazonSocial', width: 35, editable: true, resizable: false },
                    { name: 'RFC', index: 'RFC', width: 17, editable: true, resizable: false },
                    { name: 'Activo', index: 'Activo', width: 25, editable: true, sortable: false, align: 'center', resizable: false, formatter: ShowActions },
                ],
                jsonReader:
                {
                    root: "rows",
                    page: "page",
                    total: "total",
                    records: "records",
                    repeatitems: true,
                    cell: "cell",
                    id: "id"
                },
                pager: jQuery('#pager'),
                loadtext: 'Cargando datos...',
                recordtext: "{0} - {1} de {2} Registros",
                emptyrecords: 'No hay resultados',
                rowNum: 10,
                scrollOffset: 0,
                rowList: [10, 20, 30, 40, 50],
                sortname: 'NombreComercial',
                sortorder: 'desc',
                viewrecords: true,
                multiselect: false,
                height: 'auto',
                width: 930,
                pgtext: 'Pág: {0} de {1}',
                altRows: true,
                altclass: 'jQGridAltRowClass',
                gridComplete: function () { }
            });
            jQuery("#list").jqGrid('navGrid', "#pager", { edit: false, add: false, refresh: false, del: false, search: false });
            jQuery("#list").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');
            function ShowActions(cellvalue, options, rowObject) {
                var cellValueInt = parseInt(cellvalue);
                var Edit = "&nbsp;<a href='javascript:;' onclick=\"return jQuery('#list').Edit('" + rowObject[0] + "');\" >" + "<img src='@Url.Content("~/Content/Images/Edit.png")' alt='Editar Registro' title='Editar Registro' border='0' /></a>";
                var Del = "&nbsp;<a href='javascript:;' onclick=\"return jQuery('#list').Elim('" + rowObject[0] + "');\" >" + "<img src='@Url.Content("~/Content/Images/Delete.png")' alt='Eliminar Registro' title='Eliminar Registro' border='0' /></a>";
                return Edit + Del;
            };
        }
        $.jgrid.extend({
            Elim: function (ProveedorDespachoCobranzaID) {
                var elimina = confirm('¿ Está seguro que desea eliminar el registro seleccionado ?');
                if (!elimina)
                    return false;
                waitingDialog({});
                jQuery.ajax({
                    type: 'POST',
                    url: baseUrl + 'ProveedorDespachoCobranza/Eliminar',
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify({
                        ProveedorDespachoCobranzaID: ProveedorDespachoCobranzaID
                    }),
                    async: true,
                    success: function (data) {
                        if (checkTimeout(data)) {
                            closeWaitingDialog();
                            if (data.success == true) {
                                alert(data.message);
                                jQuery("#list").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');
                            }
                            else
                                alert(data.message);
                        }
                    },
                    error: function (data, error) {
                        if (checkTimeout(data)) {
                            closeWaitingDialog();
                            alert("ERROR");
                        }
                    }
                });
                return false;
            },
            Edit: function (ProveedorDespachoCobranzaID) {
                if (ProveedorDespachoCobranzaID) {
                    $('#NombreComercial').val(jQuery("#list").jqGrid('getCell', ProveedorDespachoCobranzaID, 'NombreComercial'));
                    $('#RazonSocial').val(jQuery("#list").jqGrid('getCell', ProveedorDespachoCobranzaID, 'RazonSocial'));
                    $('#RFC').val(jQuery("#list").jqGrid('getCell', ProveedorDespachoCobranzaID, 'RFC'));
                    $('#hdProveedorDespachoCobranzaID').val(jQuery("#list").jqGrid('getCell', ProveedorDespachoCobranzaID, 'ProveedorDespachoCobranzaID'));

                    ShowDialog('DialoProveedorDespachoCobranza');
                }
                else
                {
                    alert("No selecciono ningun Proveedor Despacho");
                }
                return false;
            }
        });

        function NuevoProveedor() {
            LimpiarProveedor();
            ShowDialog('DialoProveedorDespachoCobranza');
        }

        function LimpiarProveedor() {
            $('#hdProveedorDespachoCobranzaID').val("");
            $('#NombreComercial').val("");
            $('#RazonSocial').val("");
            $('#RFC').val("");
        }

        function NuevoCampo() {
            LimpiarCampo();
            $('#hdAccion').val("1");
            ShowDialog('DialoCampo');
            $('#ddlCampoProveedorDespachoCobranza').removeAttr('disabled');
            $('#ddlCampoCampos').removeAttr('disabled');
        }

        function LimpiarCampo() {
            $('#Valor').val("");
            $('#hdAccion').val("");
            $('#hdCampoProveedorDespachoCobranzaID').val("");
            $('#hdValorAnterior').val("");

            $('#Calle').val("");
            $('#Colonia').val("");
            $('#Delegacion').val("");
            $('#Estado').val("");
            $('#CodigoZIP').val("");

            $('#ddlCampoCampos')[0].selectedIndex = 0;
            $('#ddlCampoProveedorDespachoCobranza')[0].selectedIndex = 0;
        }

        function fnGrillaMnto() {
            jQuery("#listMnto").jqGrid({
                url: baseUrl + "ProveedorDespachoCobranza/ConsultarMnto",
                hidegrid: false,
                datatype: 'json',
                postData: ({
                    PaisID: function () { return $("#ddlPais").val() },
                    ProveedorDespachoCobranzaId: function () { return ($("#ddlProveedorDespachoCobranza").val() == "" ? "0" : $("#ddlProveedorDespachoCobranza").val()); },
                    CampoID: function () { return ($("#ddlCampos").val() == "" ? "0" : $("#ddlCampos").val()); }
                }),
                mtype: 'GET',
                contentType: "application/json; charset=utf-8",
                colNames: ['Código', 'Nombre Comercial', 'CampoId', 'Descripción', 'Valor', 'Acción'],
                colModel: [
                    { name: 'ProveedorDespachoCobranzaID', index: 'ProveedorDespachoCobranzaID', width:5, editable: false, align: 'center', hidden: true },
                    { name: 'NombreComercial', index: 'NombreComercial', width: 10, editable: true, resizable: false },
                    { name: 'campoid', index: 'campoid', width: 10, editable: true, resizable: false, hidden: true },
                    { name: 'nombrecampo', index: 'nombrecampo', width: 10, editable: true, resizable: false },
                    { name: 'valor', index: 'valor', width: 10, editable: true, resizable: false },
                    { name: 'Activo', index: 'Activo', width: 10, editable: true, sortable: false, align: 'center', resizable: false, formatter: ShowActionsMnto }
                ],
                jsonReader:
                {
                    root: "rows",
                    page: "page",
                    total: "total",
                    records: "records",
                    repeatitems: true,
                    cell: "cell",
                    id: "id"
                },
                pager: jQuery('#pagerMnto'),
                loadtext: 'Cargando datos...',
                recordtext: "{0} - {1} de {2} Registros",
                emptyrecords: 'No hay resultados',
                rowNum: 10,
                scrollOffset: 0,
                rowList: [10, 20, 30, 40, 50],
                sortname: 'ID',
                sortorder: 'asc',
                viewrecords: true,
                multiselect: false,
                height: 'auto',
                width: 930,
                pgtext: 'Pág: {0} de {1}',
                altRows: true,
                altclass: 'jQGridAltRowClass',
                loadComplete: function () { },
                gridComplete: function () {
                    showDialog("DialogTonoMarca");
                }
            });
            jQuery("#listMnto").jqGrid('navGrid', "#pagerMnto", { edit: false, add: false, refresh: false, del: false, search: false });
            jQuery("#listMnto").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');

            function ShowActionsMnto(cellvalue, options, rowObject) {
                var cellValueInt = parseInt(cellvalue);
                var EditMnto = "&nbsp;<a href='javascript:;' onclick=\"return jQuery('#listMnto').Editar('" + rowObject[0] + "','" + rowObject[2] + "','" + rowObject[4] + "');\" >" + "<img src='@Url.Content("~/Content/Images/Edit.png")' alt='Editar Registro' title='Editar Registro' border='0' /></a>";
                var DelMnto = "&nbsp;<a href='javascript:;' onclick=\"return jQuery('#listMnto').Eliminar('" + rowObject[0] + "','" + rowObject[2] + "','" + rowObject[4] + "');\" >" + "<img src='@Url.Content("~/Content/Images/Delete.png")' alt='Eliminar Registro' title='Eliminar Registro' border='0' /></a>";
                return EditMnto + DelMnto;
            };
        }
        $.jgrid.extend({
            Eliminar: function (ProveedorDespachoCobranzaID, CampoId, Valor) {
                var elimina = confirm('¿ Está seguro que desea eliminar el registro seleccionado ?');
                if (!elimina)
                    return false;
                waitingDialog({});
                jQuery.ajax({
                    type: 'POST',
                    url: baseUrl + 'ProveedorDespachoCobranza/ActualizarCampo',
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify({
                        ProveedorDespachoCobranzaID: ProveedorDespachoCobranzaID,
                        Valor: Valor,
                        Accion: 3,
                        CampoId: CampoId
                    }),
                    async: true,
                    success: function (data) {
                        if (checkTimeout(data)) {
                            closeWaitingDialog();
                            if (data.success == true) {
                                alert(data.message);
                                jQuery("#listMnto").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');
                            }
                            else
                                alert(data.message);
                        }
                    },
                    error: function (data, error) {
                        if (checkTimeout(data)) {
                            closeWaitingDialog();
                            alert("ERROR");
                        }
                    }
                });
                return false;
            },
            Editar: function (ProveedorDespachoCobranzaID, CampoId, Valor) {
                if (ProveedorDespachoCobranzaID) {
                    var tmpValor = Valor;
                    LimpiarCampo();
                    $('#hdCampoProveedorDespachoCobranzaID').val(jQuery("#list").jqGrid('getCell', ProveedorDespachoCobranzaID, 'ProveedorDespachoCobranzaID'));

                    $('#ddlCampoProveedorDespachoCobranza').val(ProveedorDespachoCobranzaID);
                    $("#ddlCampoCampos").val(CampoId);

                    $('#ddlCampoProveedorDespachoCobranza').attr("disabled", "disabled");
                    $('#ddlCampoCampos').attr("disabled", "disabled");

                    if (CampoId == 3 || CampoId == 4) {
                        OcultarCamposDireccion(2);

                        var res = tmpValor.split(",");

                        if (res[0]) {
                            $('#Calle').val(res[0]);
                        }

                        if (res[1]) {
                            $('#Colonia').val(res[1]);
                        }

                        if (res[2]) {
                            $('#Delegacion').val(res[2]);
                        }

                        if (res[3]) {
                            $('#Estado').val(res[3]);
                        }

                        if (res[4]) {
                            $('#CodigoZIP').val(res[4]);
                        }
                    }else{
                        OcultarCamposDireccion(1);
                        $('#Valor').val(Valor);
                    }
                    $('#hdValorAnterior').val(Valor);
                    $('#hdAccion').val(2);
                    ShowDialog("DialoCampo");
                }
                else {
                    alert("No selecciono ningun Campo");
                }
                return false;
            }
        });
</script>

<div class="wrap_cab">
    <div class="filtros">
        <div class="elements">
            <div class="div-2">
                <h1>Información de Despachos de Cobranza</span></h1>
            </div>
                <div class="div-3">
                    <div class="titB">País:</div>
                    <div class="selectA borde_redondeado">
                        @Html.DropDownListFor(model => model.PaisID, new SelectList(Model.lstPais, "PaisID", "Nombre"), "-- Seleccionar --", new { id = "ddlPais" })
                    </div>
                    <div class="input_search">
                        <input type="button" id="btnBuscar" value="Buscar" />
                    </div>
                </div>
        </div>
    </div>
</div>

<div class="wrap">
    <div class="container clearfix">
        <div class="border-wrapper">
            <table id="list"></table>
            <div id="pager"></div>
        </div>
        <div class="div-3">
            <div class="titAuto">
                <div class="input_search">
                    <input type="button" name="btnNuevo" id="btnNuevo" value="Nuevo" onclick="javascript: NuevoProveedor();">
                </div>
            </div>
        </div>
    </div>
</div>

<div class="wrap">
    <div class="container clearfix">
        <div class="div-2">
            <h3>Administración de campos por proveedor</h3>
        </div>

        <div class="div-3">
            <div class="titB">Proveedor:</div>
            <div class="selectA borde_redondeado">
                @Html.DropDownListFor(model => model.lstProveedores, new SelectList(Model.lstProveedores, "ProveedorDespachoCobranzaID", "NombreComercial"), "-- Seleccionar --", new { id = "ddlProveedorDespachoCobranza" })
            </div>
        </div>
        <div class="div-3">
            <div class="titB">Campo:</div>
            <div class="selectA borde_redondeado">
                @Html.DropDownListFor(model => model.PaisID, new SelectList(Model.lstCampo, "Campoid", "Nombre"), "-- Seleccionar --", new { id = "ddlCampos" })
            </div>
            <div class="input_search">
                <input type="button" id="btnBuscarCampos" value="Buscar" />
            </div>
        </div>

    </div>
</div>

<div class="wrap">
    <div class="container clearfix">
        <div class="border-wrapper">
            <table id="listMnto"></table>
            <div id="pagerMnto"></div>
        </div>

        <div class="div-3">
            <div class="titAuto">
                <div class="input_search">
                    <input type="button" id="btnNuevoCampo" value="Nuevo" onclick="javascript: NuevoCampo();" />
                </div>
            </div>
        </div>
    </div>
</div>
<div id="loadingScreen"></div>
<div id="DialoProveedorDespachoCobranza" style="display: none">
    @using (Html.BeginForm("Mantener", "ProveedorDespachoCobranza", FormMethod.Post, new { id = "frmProveedorDespachoCobranza", enctype = "multipart/form-data" }))
    {   
        
        @Html.HiddenFor(model => model.ProveedorDespachoCobranzaID, new { id = "hdProveedorDespachoCobranzaID" })
        <div class="Content_modal">
            <div class="div-3">
                <div class="titB">Nombre Comercial:</div>
                <div class="selectA borde_redondeado">
                    @Html.TextBox("NombreComercial", null, new { maxlength = 100 })
                </div>
            </div>

            <div class="div-3">
                <div class="titB">Razón Social:</div>
                <div class="selectA borde_redondeado">
                    @Html.TextBox("RazonSocial", null, new { maxlength = 100 })
                </div>
            </div>
            <div class="div-3">
                <div class="titB">RFC:</div>
                <div class="selectA borde_redondeado">
                    @Html.TextBox("RFC", null, new { maxlength = 50 })
                </div>
            </div>
        </div>
    }
</div>

<div id="DialoCampo" style="display: none">      
        @Html.HiddenFor(model => model.CampoId, new { id = "hdAccion" })
        @Html.HiddenFor(model => model.CampoId, new { id = "hdValorAnterior" })
        @Html.HiddenFor(model => model.ProveedorDespachoCobranzaID, new { id = "hdCampoProveedorDespachoCobranzaID" })
        <div class="Content_modal">
            <div class="div-3">
                <div class="titB">Proveedor:</div>
                <div class="selectA borde_redondeado">
                    @Html.DropDownListFor(model => model.lstProveedores, new SelectList(Model.lstProveedores, "ProveedorDespachoCobranzaID", "NombreComercial"), "-- Seleccionar --", new { id = "ddlCampoProveedorDespachoCobranza" })
                </div>
            </div>
            <div class="div-3">
                <div class="titB">Campo:</div>
                <div class="selectA borde_redondeado">
                      @Html.DropDownListFor(model => model.PaisID, new SelectList(Model.lstCampo, "Campoid", "Nombre"), "-- Seleccionar --", new { id = "ddlCampoCampos" })
                </div>
            </div>
            <div class="div-3" id="DivValor">
                <div class="titB">Valor:</div>
                <div class="selectA borde_redondeado">
                     @Html.TextBox("Valor", null, new { maxlength = 100 })
                </div>
            </div>

            <div class="div-3" id="DivCalle">
                <div class="titB">Calle:</div>
                <div class="selectA borde_redondeado">
                     @Html.TextBox("Calle", null, new { maxlength = 100 })
                </div>
            </div>
            <div class="div-3" id="DivColonia">
                <div class="titB">Colonia:</div>
                <div class="selectA borde_redondeado">
                     @Html.TextBox("Colonia", null, new { maxlength = 100 })
                </div>
            </div>
            <div class="div-3" id="DivDelegacion">
                <div class="titB">Delegación:</div>
                <div class="selectA borde_redondeado">
                     @Html.TextBox("Delegacion", null, new { maxlength = 100 })
                </div>
            </div>
            <div class="div-3" id="DivEstado">
                <div class="titB">Estado:</div>
                <div class="selectA borde_redondeado">
                     @Html.TextBox("Estado", null, new { maxlength = 100 })
                </div>
            </div>
            <div class="div-3" id="DivZIP">
                <div class="titB">Código Postal:</div>
                <div class="selectA borde_redondeado">
                     @Html.TextBox("CodigoZIP", null, new { maxlength = 100 })
                </div>
            </div>

        </div>
</div>


