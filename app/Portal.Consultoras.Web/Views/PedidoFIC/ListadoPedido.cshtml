@model Portal.Consultoras.Web.Models.PedidoFICDetalleModel
@Html.Hidden("hdfSimbolo", Model.Simbolo)
@Html.Hidden("hdfTotal", Model.Total)
@Html.Hidden("hdfTotalMinimo", Model.Total_Minimo)
<table id="tbListadoPedido">
    <thead>
        <tr>
            <th style="width: 10%;">Codigo  
            </th>
            <th style="width: 20%;">Producto  
            </th>
            <th style="width: 10%;">Cantidad  
            </th>
            <th style="width: 15%;">Precio Unitario  
            </th>
            <th style="width: 15%;">Precio Total  
            </th>
            <th style="width: 20%;">
                <div class="filter">
                    <select id="ddlClientes" onchange="CambiarCliente(this)"></select>
                </div>
            </th>
            <th style="width: 10%;">Acción
            </th>
        </tr>
    </thead>
    <tbody>
        @{
            var FuncionUpd = string.Empty;
            var FuncionCan = string.Empty;
            var idUpd = string.Empty;
            var idCan = string.Empty;
            var idDiv = string.Empty;
            var idDivE = string.Empty;
            var clase_row = string.Empty;
        }
        @foreach (var item in Model.ListaDetalle)
        {
            if (!item.EliminadoTemporal)
            {
                clase_row = item.EstadoItem == 0 ? item.ClaseFila : "f3";
            <tr class="@clase_row">
                <td class="center">
                    @Html.Hidden("hdPedidoID" + item.PedidoDetalleID, item.PedidoID, new { @class = "pedidoIDClass" })
                    @Html.Hidden("hdPedidoDetalleID" + item.PedidoDetalleID, item.PedidoDetalleID, new { @class = "pedidoDetalleClass" })
                    @Html.Hidden("hdfLPCUV" + item.PedidoDetalleID, item.CUV, new { @class = "classCuvProducto" })
                    @Html.Hidden("hdfLPCampania" + item.PedidoDetalleID, item.CampaniaID, new { @class = "classCampaniaID" })
                    @Html.DisplayFor(modelItem => item.CUV)
                </td>
                <td>
                    <div class="table_label">
                        @Html.LabelFor(modelItem => item.DescripcionProd, item.DescripcionProd, new { id = "lblLPDesProd" + item.PedidoDetalleID })
                    </div>
                </td>
                <td class="center">
                    <span>

                        @Html.Hidden("txtLPTempCant" + item.PedidoDetalleID, item.Cantidad)
                        @Html.TextBoxFor(modelItem => item.Cantidad, new { id = "txtLPCant" + item.PedidoDetalleID, maxlength = "2", onblur = "UpdateLiquidacion(" + item.CampaniaID + "," + item.PedidoID + "," + item.PedidoDetalleID + "," + item.TipoOfertaSisID + ",'" + item.CUV.ToString() + "','1','" + item.Cantidad + "')", style = "border-style: none; background-color:#F0F6F8; width: 30px;", @class = "ValidaNumeralPedido" })
                    </span>
                </td>
                <td class="center">
                    <span style="vertical-align: super; font-size: small;">@Model.Simbolo</span>
                    <span>
                        @Html.Hidden("hdfLPPrecioU" + item.PedidoDetalleID, item.PrecioUnidad, new { @class = "classPrecioUnidad" })
                        @Html.LabelFor(modelItem => item.PrecioUnidad, string.Format("{0:#,##0.00}", item.PrecioUnidad))
                    </span>
                </td>
                <td class="center">
                    <span style="vertical-align: super; font-size: small;">@Model.Simbolo</span>
                    <span>
                        @if (item.IndicadorMontoMinimo == 1)
                        {
                            //@Html.Hidden("lblLPImpTotalMinimo" + item.ImporteTotal, item.ImporteTotal, new { @class = "classImporteTotal_minimo" })
                            @Html.LabelFor(modelItem => item.ImporteTotal, string.Format("{0:N2}", item.ImporteTotal), new { id = "lblLPImpTotalMinimo" + item.PedidoDetalleID, @class = "classImporteTotal_minimo", style = "display: none;" })
                        }
                        @Html.LabelFor(modelItem => item.ImporteTotal, string.Format("{0:N2}", item.ImporteTotal), new { id = "lblLPImpTotal" + item.PedidoDetalleID, @class = "classImporteTotal" })
                    </span>
                </td>
                <td>
                    @Html.Hidden("hdfLPTempCliId" + item.PedidoDetalleID, item.ClienteID)
                    @Html.Hidden("hdfLPTempCliDes" + item.PedidoDetalleID, item.Nombre)
                    @Html.Hidden("hdfLPCli" + item.PedidoDetalleID, item.ClienteID, new { @class = "classClienteID" })
                    @Html.Hidden("hdfLPTipoOfertaSisID" + item.PedidoDetalleID, item.TipoOfertaSisID, new { @class = "classTipoOfertaSisID" })
                    @Html.Hidden("hdfLPCliDes" + item.PedidoDetalleID, item.Nombre)
                    @if (item.ConfiguracionOfertaID == Portal.Consultoras.Common.Constantes.TipoOferta.Nueva)
                    {
                        @Html.TextBoxFor(modelItem => item.Nombre, new { id = "txtLPCli" + item.PedidoDetalleID, maxlength = "50", @class = "classClienteNombre ValidaAlfanumerico", ReadOnly = "ReadOnly", onkeydown = "return false;", style = "border-style: none; background-color:#F0F6F8;" })
                    }
                    else
                    {
                        @Html.TextBoxFor(modelItem => item.Nombre, new { id = "txtLPCli" + item.PedidoDetalleID, maxlength = "50", @class = "classClienteNombre ValidaAlfanumerico", onblur = "BlurF(" + item.CampaniaID + "," + item.PedidoID + "," + item.PedidoDetalleID + ",'2')", onfocus = "EstadoActualizacion(" + item.PedidoDetalleID + ")", style = "border-style: none; background-color:#F0F6F8;" })
                    }
                </td>
                <td class="center">
                    <div align="center">
                        @{ 
                    idDiv = "divContenedor" + item.PedidoDetalleID;
                    idDivE = "divContenedorE" + item.PedidoDetalleID;
                    idCan = "btnLPCancel" + item.PedidoDetalleID;
                    idUpd = "btnLPUpdate" + item.PedidoDetalleID;
                    FuncionUpd = "Update(" + item.CampaniaID + "," + item.PedidoID + "," + item.PedidoDetalleID + ")";
                    FuncionCan = "Cancel(" + item.PedidoDetalleID + ")";
                        }
                        @Html.Hidden("hdfLPEstado" + item.PedidoDetalleID, 0, new { @class = "classEstado" })
                        <div id="@idDiv" style=" display:none;" >
                        </div>
                        <div id="@idDivE" style=" display:block;" >
                            @Ajax.ActionLink(" ", "Delete", new { CampaniaID = item.CampaniaID, PedidoID = item.PedidoID, PedidoDetalleID = item.PedidoDetalleID, TipoOfertaSisID = item.TipoOfertaSisID, CUV = item.CUV, Cantidad = item.Cantidad }, new AjaxOptions { HttpMethod = "Post", UpdateTargetId = "divListadoPedido", OnSuccess = "CalcularTotal();ClientByDelete();SaveDeleteAnalytics();", OnBegin = "AbrirSplash()", OnComplete = "CerrarSplash()" }, new { id = "btnLPDelete" + item.PedidoDetalleID, @class = "eliminar", title = "Eliminar" })
                        </div>
                    </div>
                </td>

            </tr>  
                    if (!string.IsNullOrEmpty(item.Mensaje))
                    { 
            <tr class="@item.ClaseFila red_texto">
                <td></td>
                <td colspan="6">
                    @Html.Raw(item.Mensaje.Replace("¿Deseas aceptar el reemplazo?", ""))
                </td>
            </tr>
                    }
            }
        }
        <script type="text/javascript">
            CargarAutocomplete();
        </script>
    </tbody>


</table>
@if (ViewBag.ErrorDelete != null)
{
    <script type="text/javascript">
        //debugger;
        alert_msg(@Html.Raw(Json.Encode(ViewBag.ErrorDelete)));
        CalcularTotal();
    </script>
    ViewBag.ErrorDelete = "";
}