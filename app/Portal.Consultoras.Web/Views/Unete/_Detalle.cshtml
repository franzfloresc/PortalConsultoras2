@using Portal.Consultoras.Common
@using Portal.Consultoras.Web.GestionPasos
@model Portal.Consultoras.Web.Models.DetalleSolicitudPostulanteModel

@{
    var Solicitud = Model;
    var estadosCiviles = ViewBag.EstadosCiviles as SelectList;
    var nivelesEducativos = ViewBag.NivelesEducativos as SelectList;
    var tiposNacionalidad = ViewBag.TiposNacionalidad as SelectList;
    var tiposContacto = ViewBag.TiposContacto as SelectList;
    var tiposDocumentos = ViewBag.TiposDocumentos as SelectList;
    var validacionTipoRucEmpresa = false;
  
}

<style>
    .validation {
        float: left;
        width: 170px !important;
        padding: 0 9px !important;
        min-height: 1px !important;
        color: #702789;
    }

    .validation_clear {
        float: left;
        width: 140px !important;
        height: 1px !important;
        padding: 0 9px !important;
    }

    .border_modal {
        margin-bottom: 10px;
    }

    .modal_base h3, .modal_base h4 {
        color: lightgray;
        border-bottom: 1px solid lightgray;
        margin: 0 40px;
    }

    .div_3_fix {
        padding: 1px !important;
        margin: 0 !important;
    }

        .div_3_fix .titC {
            width: 150px !important;
        }

    #frmDetalleSolicitud * {
        text-transform: uppercase;
    }

    #frmDetalleSolicitud .field-validation-error, #frmDetalleSolicitud .field-validation-error span {
        text-transform: initial !important;
    }

    #frmDetalleSolicitud .titC, #frmDetalleSolicitud .selectP2 * {
        font-size: 12px !important;
    }
</style>

@using (Ajax.BeginForm("Detalle", "Unete", null, new AjaxOptions()
{
    HttpMethod = "POST",
    UpdateTargetId = "divEditarSolicitud",
    InsertionMode = InsertionMode.Replace,
    OnSuccess = "OnSuccess",
    OnBegin = "generalLoading();",
    OnComplete = "generalCloseLoading();"
}, new
{
    @id = "frmDetalleSolicitud"
}))
{
    @Html.HiddenFor(m => m.EstadoPostulante)
    @Html.HiddenFor(m => m.CodigoConsultora)

    @Html.HiddenFor(m => m.SolicitudPostulanteID)
    @Html.HiddenFor(m => m.CodigoPais)
    @Html.HiddenFor(m => m.ModoLectura)
    @Html.HiddenFor(m => m.CodigoISO)
    @Html.HiddenFor(m => m.TipoDocumento)



    <div class="popup_eliminarCliente popup_EditSolicit">
        <div class="btn_cerrar_agregarUnidades">
            <a href="javascript:;" onclick="CerrarDiv(7);">
                <img src="@Url.Content("~/Content/Images/btn_cerrar_popup.svg")" alt="Cerrar" />
                <span class="texto_btn_cerrar">CERRAR</span>
            </a>
        </div>
        <h6>Solicitud de  <b>Postulante</b></h6>
        <div class="contenido_popUp eliminarCliente">



            <div class="div-3 estilo2">
                <div class="filterEdit">
                    <div class="">
                        Datos del Postulante
                    </div>
                </div>
            </div>

            @Html.Partial(Dictionaries.TemplatDatosGenerales[Model.CodigoPais], Model)


          <div class="div-3 estilo2">
                <div class="filterEdit">
                    <div class="">
                     Informacion Adicional del Postulante
                    </div>
                </div>
            </div>
            <div class="div-3 estilo2">
                <div class="filterEdit">
                    <div class="selectP2 seleccion_pagina textboxSBEdit2">
                        @Html.DropDownListFor(m => m.EstadoCivil, estadosCiviles, "Estado civil", new { @class = "field_85 textboxSBEdit" })
                    </div>
                </div>
                <div class="filterEdit">
                    <div class="selectP2 seleccion_pagina textboxSBEdit2">
                        @Html.DropDownListFor(m => m.NivelEducativo, nivelesEducativos, "Nivel educativo", new { @class = "field_85 textboxSBEdit" })
                    </div>
                </div>

                @if (Model.CodigoPais != "MX")
                {
                    <div class="filterEdit">
                        <div class="selectP2 seleccion_pagina textboxSBEdit2">
                            @Html.DropDownListFor(m => m.TipoNacionalidad, tiposNacionalidad, "Nacionalidad", new { @class = "field_85 textboxSBEdit" })
                        </div>
                    </div>
                }
                else
                {
                    <div class="filterEdit">
                        <div class="selectP2 seleccion_pagina textboxSBEdit2">
                            @Html.DropDownListFor(m => m.TipoContacto, tiposContacto, "Como llego a nosotros", new { @class = "field_85 textboxSBEdit" })
                        </div>
                    </div>
                }

            </div>
            <div class="div-3 div_3_fix estilo2">
                <div class="validation_clear"></div>
                <div class="validation">
                    @Html.ValidationMessageFor(m => m.EstadoCivil)
                </div>
                <div class="validation_clear"></div>
                <div class="validation">
                    @Html.ValidationMessageFor(m => m.NivelEducativo)
                </div>
                <div class="validation_clear"></div>
                <div class="validation">
                    @Html.ValidationMessageFor(m => m.TipoNacionalidad)
                </div>
            </div>

            <div class="div-3 estilo2">

                @if (Model.CodigoPais != "MX")
                {
                 


                        <div class="filterEdit">
                            <div class="selectP2 seleccion_pagina textboxSBEdit2">
                                @Html.DropDownListFor(m => m.TipoContacto, tiposContacto, "Como llego a nosotros", new { @class = "field_85 textboxSBEdit" })
                            </div>
                        </div>
                        <div class="filterEdit">
                            <div class="selectP2 seleccion_pagina textboxSBEdit2">
                                @Html.TextBoxFor(m => m.CodigoConsultoraRecomienda, new { @class = "numero field_85 textboxSB", @placeholder = "Consultora que recomienda" }   )
                            </div>
                        </div>

                        <div class="filterEdit">
                            <div class="selectP2 seleccion_pagina textboxSBEdit2">
                                @Html.TextBoxFor(m => m.NombreConsultoraRecomienda, new { @class = "texto rfcSearch textboxSB", @placeholder = "Nombre de la consultora", @readonly = "true" })
                            </div>
                        </div>
                }
                else
                {
                     
                        <div class="filterEdit">
                            <div class="selectP2 seleccion_pagina textboxSBEdit2">
                                @Html.TextBoxFor(m => m.CodigoConsultoraRecomienda, new { @class = "numero field_85 textboxSB", @placeholder = "Consultora que recomienda" })
                            </div>
                        </div>

                }


               
            </div>


            <div class="btn_grupo_eliminarCliente" style="width:90%; margin-left:5%; display:inline-block; margin-top:10px;">
                    @if (!Model.ModoLectura)
                    {
               <input type="submit" class="btn_noEliminarCliente btnEditSolic" id="btnGuardar" value="Guardar" />

                    }
                <button type="button" name="btn_noEliminarCliente" class="btn_noEliminarCliente btnEditSolic" onclick="closeModalEditar()" id="btnCancelar">Cancelar </button>
            </div>

        </div>
    </div>


    <style>
        .btnEditSolic {
            float: none !important;
            text-align: center;
            font-weight: normal !important;
            width: 25% !important;
            font-size: 13px;
            line-height: normal !important;
        }

        button:disabled {
            background-color: #B75D9F;
            cursor: default;
        }

        .popup_EditSolicit h6 {
            display: block !Important;
            margin: 0 0 30px 0 !Important;
            padding: 0 !Important;
            font-family: 'Lato' !Important;
            font-size: 20px !Important;
            color: #000 !Important;
            text-align: center !Important;
            font-weight: normal !Important;
            line-height: 1.25 !Important;
        }

        .popup_EditSolicit {
            max-width: 1000px !important;
            margin: 30px auto 0 auto !important;
            /*posicion*/
        }

        .elementsFont {
            width: 100%;
            font-family: 'lato';
            font-size: 11pt;
            font-weight: 300;
            color: black;
            margin-top: 10px;
        }

        .selectP2 select {
            height: 24px;
            font-family: 'Lato';
            color: black;
            font-size: 11.7px;
            cursor: pointer;
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            width: 300px;
        }

        .selectUbicacion {
            width: 300px !important;
        }

            .selectUbicacion select {
                width: 300px !important;
            }

        keygen, select, select[size="0"], select[size="1"] {
            border-radius: 0px;
            border-color: rgb(169, 169, 169);
        }

        user agent stylesheet select:not(:-internal-list-box) {
            overflow: visible !important;
        }

        user agent stylesheet select {
            -webkit-appearance: menulist;
            box-sizing: border-box;
            align-items: center;
            white-space: pre;
            -webkit-rtl-ordering: logical;
            color: black;
            background-color: white;
            cursor: default;
            border-width: 1px;
            border-style: solid;
            border-color: initial;
            border-image: initial;
        }

        user agent stylesheet keygen, select {
            border-radius: 5px;
        }

        user agent stylesheet input, textarea, keygen, select, button {
            text-rendering: auto;
            color: initial;
            letter-spacing: normal;
            word-spacing: normal;
            text-transform: none;
            text-indent: 0px;
            text-shadow: none;
            display: inline-block;
            text-align: start;
            margin: 0em 0em 0em 0em;
            font: 13.3333px Arial;
        }

        user agent stylesheet input, textarea, keygen, select, button, meter, progress {
            -webkit-writing-mode: horizontal-tb;
        }
    </style>


    
}

<script type="text/javascript" src="~/Scripts/jquery.maskedinput.min.js"></script>
<script src="~/Scripts/HojaInscripcion/utilsCommon.js"></script>
<script>
    var urlObtenerNombreConsultora = '@Url.Action("ObtenerNombreConsultora")';

    function closeModalEditar()
    {
        $('#divEditarSolicitud').hide();
    }
    $.validator.setDefaults({
        ignore: '.ignore'
    });

    $.validator.addMethod('LengthTelefonoFijo', function (value, element) {
        return value.length == parseInt('@Solicitud.LengthTelefonoFijo') || value.length == 0;
    }, 'Máximo ' + '@Solicitud.LengthTelefonoFijo' + ' carácteres');

    $.validator.addMethod('LengthTelefonoCelular', function (value, element) {
        return value.length == parseInt('@Solicitud.LengthTelefonoCelular') || value.length == 0;
    }, 'Máximo ' + '@Solicitud.LengthTelefonoCelular' + ' carácteres');

    $.validator.addMethod('DocumentoValido', function (value, element) {
        var regex = new RegExp('@Solicitud.NumeroDocumentoRegex');
        return regex.test(value);
    }, 'El texto ingresado no es un documento valido');

    $(document).ready(function () {
    });

    $(function () {

        $.validator.unobtrusive.parse('form');

        $("#FechaNacimiento").datepicker({
            showOn: "button",
            buttonImage: '@Url.Content("~/Content/Images/calendar.png")',
            buttonImageOnly: true,
            dateFormat: 'dd/mm/yy'
        }).mask('99/99/9999');

        @if (Model.ModoLectura)
        {
            <text>
        var controles = $('#divEditarSolicitud input, #divEditarSolicitud select');
  
        controles.attr('disabled', true);
        controles.attr('readonly', true);
        $('#divEditarSolicitud .ui-datepicker-trigger').remove();
        </text>
        }

        $('#imgCerrar').click(function () {
            //  modal.dialog('close');
            $('#divEditarSolicitud').hide();
        });

    
        
        $('.numero').keydown(IntegerNumber);
        $('.texto').keydown(Text);

        //if ($("#CodigoPais").val() == "CO")
        //    $("#Celular").mask("3-999-999-999");

        if ($("#CodigoPais").val() == "MX") {
            $("body").on("change", ".rfcSearch", function (evt) {
                var primerNombre = $("#PrimerNombre").val();
                var segundoNombre = $("#SegundoNombre").val();
                var apellidoPaterno = $("#ApellidoPaterno").val();
                var apellidoMaterno = $("#ApellidoMaterno").val();
                var diaNacimiento = $("#FechaNacimiento").val().substr(0, 2);
                var mesNacimiento = $("#FechaNacimiento").val().substr(3, 2);
                var anioNacimiento = $("#FechaNacimiento").val().substr(6, 4);


                if (primerNombre && apellidoPaterno && diaNacimiento && mesNacimiento && anioNacimiento) {
                    Utils.Ajax({
                        url: "@Url.Action("GenerarRfc", "Unete", new {area = ""})",
                        parametros: {
                            Nombres: primerNombre + ' ' + segundoNombre,
                            ApellidoPaterno: apellidoPaterno,
                            ApellidoMaterno: apellidoMaterno,
                            DiaNacimiento: diaNacimiento,
                            MesNacimiento: mesNacimiento,
                            AnioNacimiento: anioNacimiento
                        }
                    }, function (response) {
                        $("#NumeroDocumento").val(response.Rfc);
                    });
                }
            });
        }
    });

    $('#CodigoConsultoraRecomienda').donetyping(function () {
        $('#CodigoConsultoraRecomienda').attr('disabled', true);
        $.getJSON(urlObtenerNombreConsultora,
            { codigoISO: $('#CodigoPais').val(), codigoConsultora: this.value },
              function (nombre) {
                  $('#NombreConsultoraRecomienda').val(nombre);
                  $('#CodigoConsultoraRecomienda').valid();
              }).complete(function () {
                  $('#CodigoConsultoraRecomienda').attr('disabled', false);
                  $('#CodigoConsultoraRecomienda').focus();
              });
    });

    function OnSuccess(data) {
        
        if (data.success) {
            //modal.dialog('close');
            $('#divEditarSolicitud').hide();
            fnGrilla();
        }
    }

</script>
<style>
    .textboxSBEdit {
        display: block;
        width: 100% !important;
        ;
        max-width: 283.5px;
        height: 44px;
        font-family: 'Lato';
        font-size: 12px;
        line-height: 44px;
        letter-spacing: 1.2px;
        color: #6a6a6a;
        padding-left: 15px;
        border: 1px solid #979797;
        color: black !important;
    }

    .textboxSBEdit2 {
        width: 75% !important;
        border-color: rgba(0, 0, 0, 0.66) !important;
            font-size: 10px !important;
    }

    .filterEdit {
        width: 33%;
        display: inline-block;
    }

    .textEbelEdit {
        font-size: 11px !important;
        font-family: 'Lato' !Important;
        color: #000 !Important;
        text-align: left !Important;
        font-weight: normal !Important;
        line-height: 1.25 !Important;
    }

    .estilo2 {
        width: 80%;
    margin-left: 10%;
    }
    .RadioSB {
    
        width: auto !important;
    display: inline-block;
    color:black !important;
         font-family: 'Lato';
    }

    .DatePickerSB {
            display: block;
    width: 75% !important;
    max-width: 283.5px;
    
    height: 44px;
    font-family: 'Lato';
    font-size: 13px;
    line-height: 44px;
    letter-spacing: 1.2px;
    color: #6a6a6a;
    padding-left: 15px;
    border: 1px solid #979797;
    color: black !important;
    }
</style>