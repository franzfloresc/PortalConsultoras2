@model Portal.Consultoras.Web.Models.CronogramaFICModel
@{
    ViewBag.Title = "Index";
}
<script type="text/javascript" src="~/Scripts/jquery.form.js"></script>
<script type="text/javascript">

    $(function () {
        fnForm();

        $("#btnDesactivar").click(function () {
            location.href = '@Url.Action("DesactivarCronogramaFIC", "CronogramaFIC")';
        });

        $('#ddlPais, #ddlCampania').on("change", function () {
            Limpiar();

            var PaisID = $("#ddlPais").val();
            var CampaniaID = $("#ddlCampania").val();

            if (PaisID == "" || CampaniaID == "0")
                return false;

            cargarlistas(PaisID, CampaniaID);
        });

        $('#btnGrabar').on("click", function () {

            waitingDialog({});

            var ZonaCodigoInsertar = "";
            var ZonaCodigoEliminar = "";
            var ZonaCodigoEliminar2 = "";
            var PaisID = $("#ddlPais").val();
            var CampaniaID = $("#ddlCampania").val();

            var frmDesactivar = document.getElementById("lbHasNot");
            var frmActivar = document.getElementById("lbHas");
            var labels = frmDesactivar.getElementsByTagName("label");


            if (labels.length == 0)
                ZonaCodigoInsertar = "";
            else {
                for (i = 0; i < labels.length; i++) {
                    if (ZonaCodigoInsertar == "")
                        ZonaCodigoInsertar = ZonaCodigoInsertar + labels[i].innerHTML;
                    else
                        ZonaCodigoInsertar = ZonaCodigoInsertar + "," + labels[i].innerHTML;
                }
            }

            if (frmActivar.length == 0)
                ZonaCodigoEliminar = "";

            for (var i = 0; i < frmActivar.length; i++) {
                if (ZonaCodigoEliminar == "") {
                    ZonaCodigoEliminar = ZonaCodigoEliminar + frmActivar[i].innerHTML;
                }
                else {
                    ZonaCodigoEliminar = ZonaCodigoEliminar + "," + frmActivar[i].innerHTML;
                }
            }            

            //jQuery.ajax({
            //    type: 'POST',
            //    url: baseUrl + 'CronogramaFIC/EstablecerSesion',
            //    dataType: 'json',
            //    contentType: 'application/json; charset=utf-8',
            //    data: JSON.stringify({ ZonaCodigoEliminar: ZonaCodigoEliminar }),
            //    async: true,
            //    success: function (data) {
                   
            //    },
            //    error: function (data, error) {
            //        alert(data.message);
            //    }
            //});
            jQuery.ajax({
                type: 'POST',
                url: baseUrl + 'CronogramaFIC/MantenerCronogramaFIC',
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({ PaisID: PaisID, CampaniaID: CampaniaID, ZonaCodigoEliminar: ZonaCodigoEliminar, ZonaCodigoInsertar: ZonaCodigoInsertar }),
                async: true,
                success: function (data) {
                    Limpiar();
                    $("#ddlPais").val("");
                    $("#ddlCampania").val("0");
                    alert(data.message);
                },
                error: function (data, error) {
                    alert(data.message);
                }

            });
            closeWaitingDialog();
            //alert(ZonaCodigoEliminar);
            //alert(ZonaCodigoEliminar2);            
            //$.getJSON(baseUrl + 'CronogramaFIC/MantenerCronogramaFIC', { PaisID: PaisID, CampaniaID: CampaniaID, ZonaCodigoEliminar: ZonaCodigoEliminar, ZonaCodigoInsertar: ZonaCodigoInsertar }, function (data) {            
            //$.getJSON(baseUrl + 'CronogramaFIC/MantenerCronogramaFIC', { PaisID: PaisID, CampaniaID: CampaniaID, ZonaCodigoEliminar: "", ZonaCodigoInsertar: ZonaCodigoInsertar }, function (data) {
            //    if (data.success == true) {
            //        Limpiar();
            //        $("#ddlPais").val("");
            //        $("#ddlCampania").val("0");
            //    }
            //    else {
            //        alert(data.message);
            //    }
            //    closeWaitingDialog();
            //});
        });

        // Establece los efectos para cada uno de los Tabs
        $(".contenido_tab").hide(); //Ocultar capas
        $("ul.tabs li:first").addClass("activa").show(); //Activar primera pestaña
        $(".contenido_tab:first").show(); //Mostrar contenido primera pestaña

        // Sucesos al hacer click en una pestaña
        $("ul.tabs li").click(function () {
            $("ul.tabs li").removeClass("activa"); //Borrar todas las clases "activa"
            $(this).addClass("activa"); //Añadir clase "activa" a la pestaña seleccionada
            $(".contenido_tab").hide(); //Ocultar todo el contenido de la pestaña
            var activatab = $(this).find("a").attr("href"); //Leer el valor de href para identificar la pestaña activa 
            $(activatab).fadeIn(); //Visibilidad con efecto fade del contenido activo

            return false;
        });
    });

    //EVENTOS PARA CARGA MANUAL
    function cargarlistas(PaisID, CampaniaID) {
        waitingDialog({});

        $.ajaxSetup({ cache: false });

        Limpiar();

        $.getJSON(baseUrl + 'CronogramaFIC/ObtenerZonas', { PaisID: PaisID, CampaniaID: CampaniaID }, function (data) {
            var lbHas = $('#lbHas');
            var lbHasStorage = $('#lbHasStorage');
            var lbHasNot = $('#lbHasNot');
            var lbHasNotStorage = $('#lbHasNotStorage');

            if (data.lstZonasInactivas.length > 0) {
                for (var item in data.lstZonasInactivas) {
                    lbHas.append($('<option/>', {
                        value: data.lstZonasInactivas[item].ZonaID,
                        text: data.lstZonasInactivas[item].Codigo
                    }));
                }
                for (var item in data.lstZonasInactivas) {
                    lbHasStorage.append($('<option/>', {
                        value: data.lstZonasInactivas[item].ZonaID,
                        text: data.lstZonasInactivas[item].Codigo
                    }));
                }
            }
            if (data.lstZonasActivas.length > 0) {
                for (var i = 0; i < data.lstZonasActivas.length; i++) {
                    lbHasNotStorage.append($('<option/>', {
                        value: data.lstZonasActivas[i].ZonaID,
                        text: data.lstZonasActivas[i].Codigo
                    }));
                }
                //for (var item in data.lstZonasInactivas) {

                //}
                var divac = document.getElementById("lbHasNot");

                for (var i = 0; i < data.lstZonasActivas.length; i++) {
                    var lab = document.createElement("label");
                    if (lab.attachEvent) {
                        evento(lab, true, data.lstZonasActivas[i].ZonaID);
                    }
                    else {
                        evento(lab, false, data.lstZonasActivas[i].ZonaID);
                    }
                    lab.innerHTML += data.lstZonasActivas[i].Codigo;
                    divac.appendChild(lab);
                }

                //for (var item in data.lstZonasInactivas) {

                //}
            }
            closeWaitingDialog();
        });
    }
    function Limpiar() {
        var lbHas = $('#lbHas');
        var lbHasStorage = $('#lbHasStorage');
        var lbHasNot = $('#lbHasNot');
        var lbHasNotStorage = $('#lbHasNotStorage');
        lbHas.empty();
        lbHasStorage.empty();
        lbHasNot.empty();
        lbHasNotStorage.empty();
    }
    function MoveSelected(fromBoxID, toBoxID, sortArg, valueType) {
        var fromBox = document.getElementById(fromBoxID);


        if (fromBoxID == "lbHasNot") {
            var labels = fromBox.getElementsByTagName("label");
            for (i = 0; i < labels.length; i++) {
                if (labels[i].className == "active") {
                    waitingDialog({});
                    //metodo para insertar a la base de datos
                    var PaisID = $("#ddlPais").val();
                    var CampaniaID = $("#ddlCampania").val();
                    var ZonaCodigo = labels[i].innerHTML;

                    Limpiar();

                    $.getJSON(baseUrl + 'CronogramaFIC/DelCronogramaFIC', { PaisID: PaisID, CampaniaID: CampaniaID, ZonaCodigo: ZonaCodigo }, function (data) {

                        if (data.success == true) {
                            var PaisID2 = $("#ddlPais").val();
                            var CampaniaID2 = $("#ddlCampania").val();

                            var lbHas = $('#lbHas');
                            var lbHasStorage = $('#lbHasStorage');
                            var lbHasNot = $('#lbHasNot');
                            var lbHasNotStorage = $('#lbHasNotStorage');

                            if (data.lstZonasInactivas.length > 0) {
                                for (var item in data.lstZonasInactivas) {
                                    lbHas.append($('<option/>', {
                                        value: data.lstZonasInactivas[item].ZonaID,
                                        text: data.lstZonasInactivas[item].Codigo
                                    }));
                                }
                                for (var item in data.lstZonasInactivas) {
                                    lbHasStorage.append($('<option/>', {
                                        value: data.lstZonasInactivas[item].ZonaID,
                                        text: data.lstZonasInactivas[item].Codigo
                                    }));
                                }
                            }
                            if (data.lstZonasActivas.length > 0) {
                                for (var i = 0; i < data.lstZonasActivas.length; i++) {
                                    lbHasNotStorage.append($('<option/>', {
                                        value: data.lstZonasActivas[i].ZonaID,
                                        text: data.lstZonasActivas[i].Codigo
                                    }));
                                }
                                //for (var item in data.lstZonasInactivas) {

                                //}
                                var divac = document.getElementById("lbHasNot");

                                for (var i = 0; i < data.lstZonasActivas.length; i++) {
                                    var lab = document.createElement("label");
                                    if (lab.attachEvent) {
                                        evento(lab, true, data.lstZonasActivas[i].ZonaID);
                                    }
                                    else {
                                        evento(lab, false, data.lstZonasActivas[i].ZonaID);
                                    }
                                    lab.innerHTML += data.lstZonasActivas[i].Codigo;
                                    divac.appendChild(lab);
                                }

                                //for (var item in data.lstZonasInactivas) {

                                //}
                            }

                        }
                        else {
                            alert("Hubo un error al ejecutar proceso, por favor intentar nuevamente mas tarde.");
                        }

                        closeWaitingDialog();
                    });
                }
            }
        }
        else {
            for (var i = 0; i < fromBox.length; i++) {
                if (fromBox[i].selected) {
                    waitingDialog({});
                    var PaisID = $("#ddlPais").val();
                    var CampaniaID = $("#ddlCampania").val();
                    var ZonaCodigo = fromBox[i].innerHTML;

                    Limpiar();

                    $.getJSON(baseUrl + 'CronogramaFIC/InsCronogramaFIC', { PaisID: PaisID, CampaniaID: CampaniaID, ZonaCodigo: ZonaCodigo }, function (data) {

                        if (data.success == true) {
                            var PaisID2 = $("#ddlPais").val();
                            var CampaniaID2 = $("#ddlCampania").val();


                            var lbHas = $('#lbHas');
                            var lbHasStorage = $('#lbHasStorage');
                            var lbHasNot = $('#lbHasNot');
                            var lbHasNotStorage = $('#lbHasNotStorage');

                            if (data.lstZonasInactivas.length > 0) {
                                for (var item in data.lstZonasInactivas) {
                                    lbHas.append($('<option/>', {
                                        value: data.lstZonasInactivas[item].ZonaID,
                                        text: data.lstZonasInactivas[item].Codigo
                                    }));
                                }
                                for (var item in data.lstZonasInactivas) {
                                    lbHasStorage.append($('<option/>', {
                                        value: data.lstZonasInactivas[item].ZonaID,
                                        text: data.lstZonasInactivas[item].Codigo
                                    }));
                                }
                            }
                            if (data.lstZonasActivas.length > 0) {
                                for (var i = 0; i < data.lstZonasActivas.length; i++) {
                                    lbHasNotStorage.append($('<option/>', {
                                        value: data.lstZonasActivas[i].ZonaID,
                                        text: data.lstZonasActivas[i].Codigo
                                    }));
                                }
                                //for (var item in data.lstZonasInactivas) {

                                //}
                                var divac = document.getElementById("lbHasNot");

                                for (var i = 0; i < data.lstZonasActivas.length; i++) {
                                    var lab = document.createElement("label");
                                    if (lab.attachEvent) {
                                        evento(lab, true, data.lstZonasActivas[i].ZonaID);
                                    }
                                    else {
                                        evento(lab, false, data.lstZonasActivas[i].ZonaID);
                                    }
                                    lab.innerHTML += data.lstZonasActivas[i].Codigo;
                                    divac.appendChild(lab);
                                }

                                //for (var item in data.lstZonasInactivas) {

                                //}
                            }
                        }
                        else {
                            alert("Hubo un error al ejecutar proceso, por favor intentar nuevamente mas tarde.");
                        }

                        closeWaitingDialog();
                    });
                }
            }
        }
    }
    function MoveAll(fromBoxID, toBoxID, sortArg, valueType) {
        var fromBox = document.getElementById(fromBoxID);

        if (fromBoxID == "lbHasNot") {
            var labels = fromBox.getElementsByTagName("label");
            var PaisID = $("#ddlPais").val();
            var CampaniaID = $("#ddlCampania").val();
            var ZonaCodigo = "";

            if (labels.length == 0)
                return false;

            waitingDialog({});
            for (i = 0; i < labels.length; i++) {
                if (ZonaCodigo == "")
                    ZonaCodigo = ZonaCodigo + labels[i].innerHTML;
                else
                    ZonaCodigo = ZonaCodigo + "," + labels[i].innerHTML;
            }

            Limpiar();

            $.getJSON(baseUrl + 'CronogramaFIC/DelCronogramaFIC', { PaisID: PaisID, CampaniaID: CampaniaID, ZonaCodigo: ZonaCodigo }, function (data) {

                if (data.success == true) {
                    var PaisID2 = $("#ddlPais").val();
                    var CampaniaID2 = $("#ddlCampania").val();

                    var lbHas = $('#lbHas');
                    var lbHasStorage = $('#lbHasStorage');
                    var lbHasNot = $('#lbHasNot');
                    var lbHasNotStorage = $('#lbHasNotStorage');

                    if (data.lstZonasInactivas.length > 0) {
                        for (var item in data.lstZonasInactivas) {
                            lbHas.append($('<option/>', {
                                value: data.lstZonasInactivas[item].ZonaID,
                                text: data.lstZonasInactivas[item].Codigo
                            }));
                        }
                        for (var item in data.lstZonasInactivas) {
                            lbHasStorage.append($('<option/>', {
                                value: data.lstZonasInactivas[item].ZonaID,
                                text: data.lstZonasInactivas[item].Codigo
                            }));
                        }
                    }
                    if (data.lstZonasActivas.length > 0) {
                        for (var i = 0; i < data.lstZonasActivas.length; i++) {
                            lbHasNotStorage.append($('<option/>', {
                                value: data.lstZonasActivas[i].ZonaID,
                                text: data.lstZonasActivas[i].Codigo
                            }));
                        }
                        //for (var item in data.lstZonasInactivas) {

                        //}
                        var divac = document.getElementById("lbHasNot");

                        for (var i = 0; i < data.lstZonasActivas.length; i++) {
                            var lab = document.createElement("label");
                            if (lab.attachEvent) {
                                evento(lab, true, data.lstZonasActivas[i].ZonaID);
                            }
                            else {
                                evento(lab, false, data.lstZonasActivas[i].ZonaID);
                            }
                            lab.innerHTML += data.lstZonasActivas[i].Codigo;
                            divac.appendChild(lab);
                        }

                        //for (var item in data.lstZonasInactivas) {

                        //}
                    }

                }
                else {
                    alert("Hubo un error al ejecutar proceso, por favor intentar nuevamente mas tarde.");
                }

                closeWaitingDialog();
            });

        }
        else {
            var PaisID = $("#ddlPais").val();
            var CampaniaID = $("#ddlCampania").val();
            var ZonaCodigo = "";

            if (fromBox.length == 0)
                return false;

            waitingDialog({});
            for (var i = 0; i < fromBox.length; i++) {
                if (ZonaCodigo == "")
                    ZonaCodigo = ZonaCodigo + fromBox[i].innerHTML;
                else
                    ZonaCodigo = ZonaCodigo + "," + fromBox[i].innerHTML;
            }

            Limpiar();

            $.getJSON(baseUrl + 'CronogramaFIC/InsCronogramaFIC', { PaisID: PaisID, CampaniaID: CampaniaID, ZonaCodigo: ZonaCodigo }, function (data) {

                if (data.success == true) {
                    var PaisID2 = $("#ddlPais").val();
                    var CampaniaID2 = $("#ddlCampania").val();


                    var lbHas = $('#lbHas');
                    var lbHasStorage = $('#lbHasStorage');
                    var lbHasNot = $('#lbHasNot');
                    var lbHasNotStorage = $('#lbHasNotStorage');

                    if (data.lstZonasInactivas.length > 0) {
                        for (var item in data.lstZonasInactivas) {
                            lbHas.append($('<option/>', {
                                value: data.lstZonasInactivas[item].ZonaID,
                                text: data.lstZonasInactivas[item].Codigo
                            }));
                        }
                        for (var item in data.lstZonasInactivas) {
                            lbHasStorage.append($('<option/>', {
                                value: data.lstZonasInactivas[item].ZonaID,
                                text: data.lstZonasInactivas[item].Codigo
                            }));
                        }
                    }
                    if (data.lstZonasActivas.length > 0) {
                        for (var i = 0; i < data.lstZonasActivas.length; i++) {
                            lbHasNotStorage.append($('<option/>', {
                                value: data.lstZonasActivas[i].ZonaID,
                                text: data.lstZonasActivas[i].Codigo
                            }));
                        }
                        //for (var item in data.lstZonasInactivas) {

                        //}
                        var divac = document.getElementById("lbHasNot");

                        for (var i = 0; i < data.lstZonasActivas.length; i++) {
                            var lab = document.createElement("label");
                            if (lab.attachEvent) {
                                evento(lab, true, data.lstZonasActivas[i].ZonaID);
                            }
                            else {
                                evento(lab, false, data.lstZonasActivas[i].ZonaID);
                            }
                            lab.innerHTML += data.lstZonasActivas[i].Codigo;
                            divac.appendChild(lab);
                        }

                        //for (var item in data.lstZonasInactivas) {

                        //}
                    }
                }
                else {
                    alert("Hubo un error al ejecutar proceso, por favor intentar nuevamente mas tarde.");
                }

                closeWaitingDialog();
            });
        }
    }
    function evento(elem, isAttach, id) {
        if (isAttach)
            elem.attachEvent("onclick", function () {
                chkId = [];
                chkId.push(id);
                $('#lbHasNot').find('label').removeClass("active");
                elem.className = "active"
                //event.cancelBubble = true;
                //return false;
            });
        else
            elem.addEventListener('click', function () {
                chkId = [];
                chkId.push(id);
                $('#lbHasNot').find('label').removeClass("active");
                elem.className = "active";
                //event.stopPropagation();
                //event.cancelBubble = true;
            }, false);
    }

    //EVENTOS PARA CARGA MASIVA
    function DescargarModelo() {
        waitingDialog({});
        setTimeout(function () { DownloadAttachExcel() }, 0);
    }

    function DownloadAttachExcel() {
        if (checkTimeout()) {
            var content = baseUrl + "CronogramaFIC/DescargaModelo";
            var iframe_ = document.createElement("iframe");
            iframe_.style.display = "none";
            iframe_.setAttribute("src", content);

            if (navigator.userAgent.indexOf("MSIE") > -1 && !window.opera) { // Si es Internet Explorer
                iframe_.onreadystatechange = function () {
                    switch (this.readyState) {
                        case "loading":
                            waitingDialog({});
                            break;
                        case "complete":
                        case "interactive":
                        case "uninitialized":
                            closeWaitingDialog();
                            break;
                        default:
                            closeWaitingDialog();
                            break;
                    }
                };
            }
            else {
                // Si es Firefox o Chrome
                $(iframe_).ready(function () {
                    closeWaitingDialog();
                });
            }
            document.body.appendChild(iframe_);
        }
    }

    function Procesar() {
        var uplArchivo = $("#uplArchivo").val();
        if (uplArchivo == "") {
            alert("Debe seleccionar un archivo Excel para realizar la carga masiva.");
            return false;
        }

        var paisID = $("#ddlPaisM").val();
        if (paisID == "") {
            alert("Debe seleccionar un Pais.");
            return false;
        }

        var campaniaID = $("#ddlCampaniaM").val();
        if (campaniaID == "" || campaniaID == "0") {
            alert("Debe seleccionar una Campaña.");
            return false;
        }

        waitingDialog({});
        //jQuery.ajax({
        //    type: 'POST',
        //    url: baseUrl + 'GestionFaltantes/ProcesarMasivo',
        //    dataType: 'json',
        //    contentType: 'application/json; charset=utf-8',
        //    data: JSON.stringify({
        //        path: uplArchivo,
        //        paisID: paisID,
        //        campaniaID: campaniaID
        //    }),
        //    async: true,
        //    success: function (data) {
        //        closeWaitingDialog();
        //        if (data.success == true) {
        //            alert(data.message);
        //            limpiarM();
        //        }
        //        else
        //            alert(data.message);
        //    },
        //    error: function (data, error) {
        //        closeWaitingDialog();
        //        alert("Ocurrrió un error inesperado al procesar la carga masiva de Faltantes. Consulte con su administrador del sistema para obtener mayor información");
        //    }
        //});
        $("#frmProcesarMasivo").submit();
    }

    function limpiarM() {
        var ddlCampania = $("#ddlCampaniaM");
        $("#ddlPaisM")[0].selectedIndex = 0;
        $("#ddlCampaniaM")[0].selectedIndex = 0;
        $('#divuplArchivo').html($('#divuplArchivo').html());
    }

    function fnForm() {
        $('#frmProcesarMasivo').ajaxForm({
            beforeSubmit: function () {
            },
            success: function (data) {
                if (checkTimeout(data)) {
                    closeWaitingDialog();
                    alert(data);
                    limpiarM();
                }
            },
            error: function (request, status, error) {
                if (checkTimeout(request)) {
                    closeWaitingDialog();
                    alert("Ocurrrió un error inesperado al procesar la carga masiva de Cronograma. Consulte con su administrador del sistema para obtener mayor información");
                }
            }
        });
    }
</script>
<input id="hdFlag" value="0" type="hidden" />
@*<div class="wrap_cab">

    <div class="filtros2">
        <div class="elements">
            <div class="div-2">
                <h1> Activación de <span>Cronograma FIC</span></h1>
            </div>
            <div class="div-3">
                <div class="titJ">País:</div>
                <div class="selectP borde_redondeado">
                    @Html.DropDownListFor(model => model.PaisID, new SelectList(Model.listaPaises, "PaisID", "Nombre"), "-- Seleccionar --")
                </div>
                <div class="titD"></div>

            </div>
        </div>
    </div>

</div>*@

<div class="wrap_cab">
    <div class="filtros">
        <div class="elements">
            <div class="div-2">
                <h1>Activación de <span>Cronograma FIC</span></h1>
            </div>
        </div>
    </div>
</div>
<!--/ .wrap-->


<div class="wrap">
    <div class="container clearfix">
        <div class="border-wrapper">
            <ul class="tabs">
                <li><a href="#tab-manual">Carga Manual</a></li>
                <li><a href="#tab-masiva">Carga Masiva</a></li>
            </ul>
            <div class="contenedor_tab">
                <div id="tab-manual" class="contenido_tab">
                    <div class="div-3">
                        <div class="titG">País:</div>
                        <div class="selectA borde_redondeado">
                            @Html.DropDownListFor(model => model.PaisID, new SelectList(Model.listaPaises, "PaisID", "Nombre"), "-- Seleccionar --", new { id = "ddlPais" })
                        </div>
                        <div class="titB">Campaña:</div>
                        <div class="selectA borde_redondeado">
                            @Html.DropDownListFor(model => model.NombreCorto, new SelectList(Model.DropDownListCampania, "CampaniaID", "Codigo"), new { id = "ddlCampania" })
                        </div>
                    </div>
                    <div style="width: 900px; margin: 0 auto; position: relative;">
                        <div class="border-wrapper">
                            <div class="zonatit3">
                                <h3>Zonas Inactivas</h3>
                            </div>
                            <div class="zonatit4">
                                <h3>Zonas Activas</h3>
                            </div>
                            <div class="zona4">
                                <input type="text" id="lbHasFilter" onkeyup="javascript:Filter('lbHas',this.value);" style="display: none" />
                                @*<select id="lbHas" multiple="multiple" style="height: 300px; width: 300px;"></select>*@
                                @Html.ListBoxFor(s => s.listaZonas, new MultiSelectList(Model.listaZonas, "ZonaID", "Codigo"), new
                                {
                                    id = "lbHas",
                                    style = "height: 200px;width:100%;"
                                })
                            </div>
                            <div class="zona5">
                                <input id="btnToHasNot" type="button" onclick="MoveSelected('lbHas', 'lbHasNot', 'text', 'string');" value=">" />
                                <input id="btnAllToHasNot" type="button" onclick="MoveAll('lbHas', 'lbHasNot', 'text', 'string');" value=">>" />
                                <input id="btnAllToHas" type="button" onclick="MoveAll('lbHasNot', 'lbHas', 'text', 'string');" value="<<" />
                                <input id="btnToHas" type="button" onclick="MoveSelected('lbHasNot', 'lbHas', 'text', 'string');" value="<" />
                            </div>
                            <div class="zona6">
                                <input type="text" id="lbHasNotFilter" onkeyup="javascript:Filter('divactivas',this.value);" style="display: none" />
                                @*<select id="lbHasNot" multiple="multiple" style="height: 300px; width: 300px;"></select>*@
                                @*@Html.ListBoxFor(s => s.listaZonasActivas, new MultiSelectList(Model.listaZonasActivas, "ZonaID", "ZonaID"), new
                                {
                               id = "lbHasNot",
                               style = "height: 200px;width:100%;"
                                })*@
                                <div id="lbHasNot" class="list_content">
                                    @*@foreach (var mp in zonasac)
                                {
                                <label><input type="checkbox" name="option[]" value="@mp.ZonaID" />@mp.Codigo</label>
                                }*@
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="sep"></div>
                    <div class="elementsX">
                        <div class="div-3">
                            <div class="input_modifica_horizontal" style="margin-left: 550px;">
                                <input type="button" value="Desactivar Cronograma" id="btnDesactivar" />
                            </div>
                            <div class="input_validar">
                                <input type="button" value="Grabar" id="btnGrabar" />
                            </div>
                        </div>
                    </div>
                </div>
                <div id="tab-masiva" class="contenido_tab">
                    @using (Html.BeginForm("ProcesarMasivo", "CronogramaFIC", FormMethod.Post, new { id = "frmProcesarMasivo", enctype = "multipart/form-data" }))
                    {
                        <div class="div-3">
                            <div class="titB">País:</div>
                            <div class="selectA borde_redondeado">
                                @Html.DropDownListFor(model => model.PaisID, new SelectList(Model.listaPaises, "PaisID", "Nombre"), "-- Seleccionar --", new { id = "ddlPaisM" })
                            </div>
                        </div>
                        <div class="div-3">
                            <div class="titB">Archivo:</div>
                            <div id="divuplArchivo" class="titB">
                                <input id="uplArchivo" name="uplArchivo" type="file" />
                            </div>
                        </div>
                        <div class="div-3">
                            <div class="titB">Campaña:</div>
                            <div class="selectA borde_redondeado">
                                @Html.DropDownListFor(model => model.NombreCorto, new SelectList(Model.DropDownListCampania, "CampaniaID", "Codigo"), new { id = "ddlCampaniaM" })
                            </div>
                        </div>
                        <div class="div-3">
                            <div class="titB"></div>
                            <div class="input_modifica_horizontal">
                                <input id="btnProcesar" type="button" value="Procesar Archivos" onclick="Procesar();" />
                            </div>
                            <div class="input_modifica_horizontal">
                                <input id="btnBorrarM" type="button" value="Borrar Campos" onclick="limpiarM();" />
                            </div>
                        </div>
                        <div class="div-4">
                            <div class="noti3">
                                Puede descargar 
                            <a href="#" onclick="DescargarModelo()">aquí</a>
                                el modelo de plantilla, para la carga masiva de Cronograma FIC.
                            </div>
                        </div>
                        <div style="clear: both">
                            <div style="clear: both">
                                <div style="width: 300px; padding: 30px 0">
                                    <div style="width: 150px; float: left; text-align: center">
                                    </div>
                                    <div style="width: 150px; float: left; text-align: center">
                                    </div>
                                </div>
                            </div>
                        </div>
                        @Html.HiddenFor(model => model.PaisID, new { id = "hdpaisID", value = "0" })
                        @Html.HiddenFor(model => model.CampaniaID, new { id = "hdcampaniaID", value = "0" })
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="wrap">
    <div class="container clearfix">
    </div>
</div>


<div id="loadingScreen"></div>
<select id="lbHasStorage" multiple="multiple" style="height: 300px; width: 300px; display: none"></select>
<select id="lbHasNotStorage" multiple="multiple" style="height: 300px; width: 300px; display: none"></select>
