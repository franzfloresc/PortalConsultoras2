@using Portal.Consultoras.Common
@using Portal.Consultoras.Web.HojaInscripcionBelcorpPais
@model Portal.Consultoras.Web.Models.HojaInscripcionPaso2Model
@{
    var lugaresNivel1 = ViewBag.LugaresNivel1 != null ? ViewBag.LugaresNivel1 as SelectList : new SelectList(new List<ParametroUneteBE>());
    var DireccionesCo = ViewBag.DireccionesCo != null ? ViewBag.DireccionesCo as SelectList : new SelectList(new List<ParametroUneteBE>());
    var PrefijosCelular = ViewBag.PrefijosCelular != null ? ViewBag.PrefijosCelular as SelectList : new SelectList(new List<ParametroUneteBE>());
}

@using (Ajax.BeginForm("Paso2", new AjaxOptions
{
    HttpMethod = "POST",
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "Formulario",
    OnBegin = "showLoader",
    OnComplete = "hideLoader"
}))
{
    @Html.HiddenFor(m => Model.Token)

    @Html.Hidden("Paso", 2)
    @Html.HiddenFor(m => Model.CodigoISO)
    @Html.HiddenFor(m => Model.FuenteIngreso)
    @Html.HiddenFor(m => Model.PaisID)
    @Html.HiddenFor(m => Model.TipoSolicitud)
    @Html.HiddenFor(m => Model.UsuarioCreacion)

    //Campos del Formulario 1
    @Html.HiddenFor(m => Model.NumeroDocumento)
    @Html.HiddenFor(m => Model.PrimerNombre)
    @Html.HiddenFor(m => Model.SegundoNombre)
    @Html.HiddenFor(m => Model.ApellidoPaterno)
    @Html.HiddenFor(m => Model.ApellidoMaterno)
    @Html.HiddenFor(m => Model.Dia)
    @Html.HiddenFor(m => Model.Mes)
    @Html.HiddenFor(m => Model.Anio)
    @Html.HiddenFor(m => Model.FechaNacimiento)
    @Html.HiddenFor(m => Model.Sexo)
    @Html.HiddenFor(m => Model.EstadoPostulante)
    @Html.HiddenFor(m => Model.CodigoConsultora)

    //Campos del Formulario 2
    @Html.HiddenFor(m => Model.NombreRegion)
    @Html.HiddenFor(m => Model.NombreComuna)
    @Html.HiddenFor(m => Model.Latitud)
    @Html.HiddenFor(m => Model.Longitud)
    @Html.HiddenFor(m => Model.DireccionCorrecta)
    @Html.HiddenFor(m => Model.ConsultoServicioGEO)
    @Html.HiddenFor(m => Model.NombreDireccionColombia)
    @Html.HiddenFor(m => Model.NombreColonia)
    @Html.HiddenFor(m => Model.NombrePrefijoCelular)

    <div class="field12">
        <h2>Datos de contacto</h2>
    </div>

    if (Model.CodigoISO == "CL")
    {
        <div class="field4 no-margin-bottom"><b>*</b>Tel&eacute;fono Celular</div>
        <div class="field8 no-margin-bottom lastfield">
            @Html.TextBox("pref1", Dictionaries.PrefijoTelefonoCelular[Model.CodigoISO], new { @class = "field2 input-prefijo", @readonly = "readonly", @tabindex = -1 })
            @Html.TextBoxFor(m => Model.Celular, new { @class = "numero field9", @placeholder = "Telf. Celular", @maxlength = (Dictionaries.LengthTelefonoCelular.ContainsKey(Model.CodigoISO) ? Dictionaries.LengthTelefonoCelular[Model.CodigoISO] : 15) })
        </div>
        <div class="field4 auto-height"></div>
        <div class="field8 auto-height lastfield">
            @Html.ValidationMessageFor(m => Model.Celular)
        </div>
    }
    else if (Model.CodigoISO == "CO")
    {
        <div class="field4 no-margin-bottom"><b>*</b>Tel&eacute;fono Celular</div>
        <div class="field8 no-margin-bottom lastfield">
            @Html.TextBoxFor(m => Model.Celular, new { @class = "numero field11", @placeholder = "Telf. Celular", @maxlength = (Dictionaries.LengthTelefonoCelular.ContainsKey(Model.CodigoISO) ? Dictionaries.LengthTelefonoCelular[Model.CodigoISO] : 15) })
        </div>
        <div class="field4 auto-height"></div>
        <div class="field8 auto-height lastfield">
            @Html.ValidationMessageFor(m => Model.Celular)
        </div>
    }
    else if (Model.CodigoISO == "MX")
    {
        <div class="field4 no-margin-bottom"><b>*</b>Tel&eacute;fono Celular</div>
        <div class="field8 no-margin-bottom lastfield">
            @Html.DropDownListFor(m => Model.PrefijoCelular, PrefijosCelular, new { @class = "field2" })
            @Html.TextBoxFor(m => Model.Celular, new { @class = "numero field9", @placeholder = "Telf. Celular", @maxlength = (Dictionaries.LengthTelefonoCelular.ContainsKey(Model.CodigoISO) ? Dictionaries.LengthTelefonoCelular[Model.CodigoISO] : 15) })
        </div>
        <div class="field4 auto-height"></div>
        <div class="field8 auto-height lastfield">
            @Html.ValidationMessageFor(m => Model.Celular)
        </div>
    }

    if (Model.CodigoISO == "CL" || Model.CodigoISO == "MX")
    {
        <div class="field4 no-margin-bottom"><b>*</b>Tel&eacute;fono Fijo</div>
        <div class="field8 no-margin-bottom lastfield">
            @Html.TextBox("pref2", Dictionaries.PrefijoTelefonoFijo[Model.CodigoISO], new { @class = "field2 input-prefijo", @readonly = "readonly", @tabindex = -1 })
            @Html.TextBoxFor(m => Model.Telefono, new { @class = "numero field9", @placeholder = "Telf. Fijo", @maxlength = (Dictionaries.LengthTelefonoFijo.ContainsKey(Model.CodigoISO) ? Dictionaries.LengthTelefonoFijo[Model.CodigoISO] : 15) })
        </div>
        <div class="field4 auto-height"></div>
        <div class="field8 auto-height lastfield">
            @Html.ValidationMessageFor(m => Model.Telefono)
        </div>
    }
    else if (Model.CodigoISO == "CO")
    {
        <div class="field4 no-margin-bottom">Tel&eacute;fono Fijo</div>
        <div class="field8 no-margin-bottom lastfield">
            @Html.TextBoxFor(m => Model.Telefono, new { @class = "numero field11", @placeholder = "Telf. Fijo", @maxlength = (Dictionaries.LengthTelefonoFijo.ContainsKey(Model.CodigoISO) ? Dictionaries.LengthTelefonoFijo[Model.CodigoISO] : 15) })
        </div>
        <div class="field4 auto-height"></div>
        <div class="field8 auto-height lastfield">
            @Html.ValidationMessageFor(m => Model.Telefono)
        </div>
    }

    <div class="field4 no-margin-bottom"><b>*</b>Correo electr&oacute;nico</div>
    <div class="field8 no-margin-bottom lastfield">
        @Html.TextBoxFor(m => Model.CorreoElectronico, new { @class = "field11", @placeholder = Html.Raw("Correo electrónico") })
    </div>
    <div class="field4 auto-height"></div>
    <div class="field8 auto-height lastfield">
        @Html.ValidationMessageFor(m => Model.CorreoElectronico)
    </div>

    <div class="field12">
        <h2>Dirección del solicitante</h2>
    </div>

    <div class="field4 no-margin-bottom"><b>*</b>@Dictionaries.LabelLugar1[Model.CodigoISO]</div>
    <div class="field8 no-margin-bottom lastfield">
        @Html.DropDownListFor(m => Model.Region, lugaresNivel1, "-- Seleccionar --", new { @class = "field11" })
    </div>
    <div class="field4 auto-height"></div>
        <div class="field8 auto-height lastfield">
            @Html.ValidationMessageFor(m => Model.Region)
        </div>

        <div class="field4 no-margin-bottom"><b>*</b>@Dictionaries.LabelLugar2[Model.CodigoISO]</div>
        <div class="field8 no-margin-bottom lastfield">
            @Html.DropDownListFor(m => Model.Comuna, new SelectList(new List<ParametroUneteBE>()), "-- Seleccionar --", new { @class = "field11", @disabled = "disabled" })
        </div>
        <div class="field4 auto-height"></div>
        <div class="field8 auto-height lastfield">
            @Html.ValidationMessageFor(m => Model.Comuna)
        </div>

    if (Model.CodigoISO == "CL")
    {
        <div class="field4 no-margin-bottom"><b>*</b>Calle &oacute; avenida</div>
        <div class="field8 no-margin-bottom lastfield">
            @Html.TextBoxFor(m => Model.CalleOAvenida, new { @class = "field11", @placeholder = "Ejm: Av. Castellana" })
        </div>
        <div class="field4 auto-height"></div>
        <div class="field8 auto-height lastfield">
            @Html.ValidationMessageFor(m => Model.CalleOAvenida)
        </div>
    }
    else if (Model.CodigoISO == "CO")
    {
        <div class="field4 no-margin-bottom"><b>*</b>Barrio</div>
        <div class="field8 no-margin-bottom lastfield">
            @Html.TextBoxFor(m => Model.CalleOAvenida, new { @class = "field11", @placeholder = "Ejm: Av. Castellana" })
        </div>
        <div class="field4 auto-height"></div>
        <div class="field8 auto-height lastfield">
            @Html.ValidationMessageFor(m => Model.CalleOAvenida)
        </div>
    }

    else if (Model.CodigoISO == "MX")
    {
        <div class="field4 no-margin-bottom"><b>*</b>Colonia</div>
        <div class="field8 no-margin-bottom lastfield">
            @Html.DropDownListFor(m => Model.Colonia, new SelectList(new List<ParametroUneteBE>()), "-- Seleccionar --", new { @class = "field11", @disabled = "disabled" })
        </div>
        <div class="field4 auto-height"></div>
        <div class="field8 auto-height lastfield">
            @Html.ValidationMessageFor(m => Model.Colonia)
        </div>
    }

    if (Model.CodigoISO == "CL")
    {
        <div class="field4 no-margin-bottom"><b>*</b>Nro.</div>
        <div class="field8 no-margin-bottom lastfield">
            @Html.TextBoxFor(m => Model.Numero, new { @class = "numero field11", @placeholder = "Ejm: 100", @maxlength = 5 })
        </div>
        <div class="field4 auto-height"></div>
        <div class="field8 auto-height lastfield">
            @Html.ValidationMessageFor(m => Model.Numero)
        </div>
    }
    else if (Model.CodigoISO == "CO")
    {
        <div class="field4 no-margin-bottom"><b>*</b>Dirección</div>
        <div class="field8 no-margin-bottom lastfield" style="width:25%;margin-bottom:0px;">
            @Html.DropDownListFor(m => Model.DireccionColombia, DireccionesCo, "Seleccionar", new { @class = "field11" })
        </div>
        <div class="field8 no-margin-bottom lastfield" style="width:39%;margin:0px;">
            @Html.TextBoxFor(m => Model.DptoCasa, new { @class = "field11", @placeholder = "EJ. 93B 17-52", @maxlength = 40 })
        </div>
        <div class="field4 auto-height"></div>
        <div class="field8 no-margin-bottom lastfield" style="width: 25%; height: 20px; margin-bottom: 0px;">
            @Html.ValidationMessageFor(m => Model.DireccionColombia)
        </div>
        <div class="field8 no-margin-bottom lastfield" style="width:39%;height: 20px;margin:0px;">
            @Html.ValidationMessageFor(m => Model.DptoCasa)
        </div>
    }
    else if (Model.CodigoISO == "MX")
    {
        <div class="field4 no-margin-bottom"><b>*</b>Dirección</div>
        <div class="field8 no-margin-bottom lastfield">
            @Html.TextBoxFor(m => Model.CalleOAvenida, new { @class = "field11", @placeholder = "Ejm: Av. Castellana" })
        </div>
        <div class="field4 auto-height"></div>
        <div class="field8 auto-height lastfield">
            @Html.ValidationMessageFor(m => Model.CalleOAvenida)
        </div>
    }
   

    if (Model.CodigoISO == "CL")
    {
        <div class="field4 no-margin-bottom">Referencia</div>
        <div class="field8 no-margin-bottom lastfield">
            @Html.TextBoxFor(m => Model.DptoCasa, new { @class = "field11", @placeholder = "Referencia", @maxlength = 40 })
        </div>
        <div class="field4 auto-height"></div>
        <div class="field8 auto-height lastfield">
            @Html.ValidationMessageFor(m => Model.DptoCasa)
        </div>
    }
    else if (Model.CodigoISO == "MX")
    {
        <div class="field4 no-margin-bottom"><B>*</B>Referencia</div>
        <div class="field8 no-margin-bottom lastfield">
            @Html.TextBoxFor(m => Model.DptoCasa, new { @class = "field11", @placeholder = "Ej. entre calle 1 y calle 3", @maxlength = 40 })
        </div>
        <div class="field4 auto-height"></div>
        <div class="field8 auto-height lastfield">
            @Html.ValidationMessageFor(m => Model.DptoCasa)
        </div>
    }

    if (Model.CodigoISO == "MX")
    {
        <div class="field4 no-margin-bottom"><b>*</b>Código Postal</div>
        <div class="field8 no-margin-bottom lastfield">
            @Html.TextBoxFor(m => Model.CodigoPostal, new { @class = "numero field11", @placeholder = "Ejm: 100", @maxlength = 5 })
        </div>
        <div class="field4 auto-height"></div>
        <div class="field8 auto-height lastfield">
            @Html.ValidationMessageFor(m => Model.CodigoPostal)
        </div>
    }

    <br />
    <div class="field12 text_align_center">
        <button type="submit" class="button_purple clear" id="btnEnviar">CONTINUAR</button>
    </div>
}

<script type="text/javascript" src="~/Scripts/jquery.maskedinput.min.js"></script>
<script>
    $.validator.setDefaults({
        ignore: '.ignore'
    });

    $.validator.addMethod('LengthTelefonoFijo', function (value, element) {
        return value.length == parseInt('@Dictionaries.LengthTelefonoFijo[Model.CodigoISO]') || value.length == 0;
    }, 'El teléfono fijo debe ser de ' + '@Dictionaries.LengthTelefonoFijo[Model.CodigoISO]' + ' números');

    $.validator.addMethod('LengthTelefonoCelular', function (value, element) {
        return value.length == parseInt('@Dictionaries.LengthTelefonoCelular[Model.CodigoISO]') || value.length == 0;
    }, 'El teléfono celular debe ser de ' + '@Dictionaries.LengthTelefonoCelular[Model.CodigoISO]' + ' números');

    $.validator.addMethod('LengthCodigoPostal', function (value, element) {
        return value.length == parseInt('@Dictionaries.LengthCodigoPostal[Model.CodigoISO]') || value.length == 0;
    }, 'El códgio postal debe ser de ' + '@Dictionaries.LengthCodigoPostal[Model.CodigoISO]' + ' números');

    $('div[data-paso="1"]').click(IrAPaso);
    $('div[data-paso="2"]').unbind('click');
    $('div[data-paso="1"], div[data-paso="2"]').addClass('item_color');
    $('div[data-paso="3"]').removeClass('item_color');

    var defaultOption = '<option value="" >-- Seleccionar --</option>';
    var regionOnChangeCallback;
    var comunaOnChangeCallback;
    var radioChecked;
    var cargando = true;

    $(function () {

        $("body").on("change", "#PrefijoCelular", function () {
            $('#NombrePrefijoCelular').val($(this).find('option:selected').text());
        });

        $('#PrefijoCelular').change();

        $('#Region, #Comuna, #CalleOAvenida, #Numero').change(function () {
            if (!cargando) {
                $('#Latitud, #Longitud').val(0);
                $('#DireccionCorrecta').val(null);
            }
        });

        $('#Region').change(function () {
            var region = $(this);
            var comuna = $('#Comuna');
            comuna.attr('disabled', 'disabled');

            $('#NombreRegion').val(region.find('option:selected').text());

            $.getJSON('@Url.Action("ObtenerLugaresSegundoNivel")', { id: this.value, codigoISO: '@Model.CodigoISO' }, function (data) {
                $('#Comuna').html(defaultOption);

                $.map(data, function (e, i) {
                    $('#Comuna').append('<option value="' + e.Value + '">' + e.Text + '</option>');
                });
            }).done(function () {
                if (regionOnChangeCallback) {
                    regionOnChangeCallback();
                }
            }).complete(function () {
                comuna.attr('disabled', false);
                if (region.val() == '') {
                    comuna.html(defaultOption);
                }
            });
        });

        $('#Comuna').change(function () {
            var comuna = $(this);
            var colonia = $('#Colonia');
            colonia.attr('disabled', 'disabled');

            $('#NombreComuna').val(comuna.find('option:selected').text());

            $.getJSON('@Url.Action("ObtenerLugaresTercerNivel")', { id: this.value, codigoISO: $('#CodigoISO').val() }, function (data) {
                $('#Colonia').html(defaultOption);

                $.map(data, function (e, i) {
                    $('#Colonia').append('<option value="' + e.Value + '">' + e.Text + '</option>');
                });
            }).done(function () {
                if (comunaOnChangeCallback) {
                    comunaOnChangeCallback();
                }
            }).complete(function () {
                colonia.attr('disabled', false);
                if (comuna.val() == '') {
                    colonia.html(defaultOption);
                }
            });
        });

        $('#Comuna').change(function () {
            var nombre = $(this).find('option:selected').text();
            $('#NombreComuna').val(nombre);
        });

        $('#DireccionColombia').change(function () {
            $('#NombreDireccionColombia').val($(this).find('option:selected').text());
        });

        $('#Colonia').change(function () {
            $('#NombreColonia').val($(this).find('option:selected').text());
        });

        if ($('#Region').val() != '') {
            regionOnChangeCallback = function () {
                $('#Comuna').val('@Model.Comuna');
                $('#Comuna').change();
                regionOnChangeCallback = null;
            }

            comunaOnChangeCallback = function () {
                $('#Colonia').val('@Model.Colonia');
                $('#Colonia').change();
                comunaOnChangeCallback = null;
            };

            $('#Region').change();
        }

        $('.numero').keydown(IntegerNumber);

        if ($("#CodigoISO").val() == "CO")
            $("#Celular").mask("3-999-999-999");

        $.validator.unobtrusive.parse('form');
        $('input[name="Celular"]').rules('add', 'LengthTelefonoCelular');
        $('input[name="Telefono"]').rules('add', 'LengthTelefonoFijo');
        $('#contenedor_pais').hide();

        if ('@Model.CodigoISO' == "MX") {
            $('input[name="CodigoPostal"]').rules('add', 'LengthCodigoPostal');
        }

        $('#Latitud, #Longitud').val(0);
        $('#DireccionCorrecta').val(null);
    });

</script>


@if (Model.ConsultoServicioGEO)
{
    Html.RenderPartial("_ModalMapa", Model);
}