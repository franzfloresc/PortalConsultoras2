@model Portal.Consultoras.Web.Models.ActualizarDatosModel
@{
    ViewBag.Title = "Index";
}
<script>

    jQuery(document).ready(function () {

        $("#btnCancelar").click(function () {
            location.href = '@Url.Action("Index", "Bienvenida")';
        });

        $("#btnGuardar").click(function () {
            ActualizarDatos();
        });

        $('#txtTelefono').keyup(function (evt) {
            ValidatekeyUp(evt);
        });

        $('#txtTelefono').keypress(function (e) {
            return ValidatekeyPress(e);
        });

        $('#txtCelular').keyup(function (evt) {
            ValidatekeyUp(evt);
        });

        $('#txtCelular').keypress(function (e) {
            return ValidatekeyPress(e);
        });
    });

    function ValidatekeyUp(evt)  {
        var theEvent = evt || window.event;
        var key = theEvent.keyCode || theEvent.which;
        key = String.fromCharCode(key);
        var regex = /[0-9]|\./;
        if (!regex.test(key)) {
            theEvent.returnValue = false;
            if (theEvent.preventDefault) theEvent.preventDefault();
        }
    }

    function ValidatekeyPress(e) {
        if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
            return false;
        }
    }

    function paste(obj) {
        var totalCharacterCount = window.clipboardData.getData('Text');
        var strValidChars = "0123456789";
        var strChar;
        var FilteredChars = "";
        for (i = 0; i < totalCharacterCount.length; i++) {
            strChar = totalCharacterCount.charAt(i);
            if (strValidChars.indexOf(strChar) != -1) {
                FilteredChars = FilteredChars + strChar;
            }
        }
        obj.value = FilteredChars;
        return false;
    }

    function ActualizarDatos() {
        var ClaveSecreta = $('#txtActualizarClaveSecreta').val();
        var ConfirmarClaveSecreta = $('#txtConfirmarClaveSecreta').val();

        if (ClaveSecreta != ConfirmarClaveSecreta) {
            alert('Las claves ingresadas no coinciden');
            return false;
        }
        var item = {
            Telefono: jQuery('#txtTelefono').val(),
            Celular: jQuery('#txtCelular').val(),
            Email: $.trim(jQuery('#txtEMail').val()),
            ActualizarClave: ClaveSecreta,
            ConfirmarClave: ConfirmarClaveSecreta,
            CorreoAnterior: $.trim(jQuery('#hdn_Correo').val()),
        };
        waitingDialog({});

        jQuery.ajax({
            type: 'POST',
            url: baseUrl + 'ActualizarDatos/Registrar',
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(item),
            async: true,
            success: function (data) {
                if (checkTimeout(data)) {
                    closeWaitingDialog();
                }
            },
            error: function (data, error) {
                if (checkTimeout(data)) {
                    closeWaitingDialog();
                    alert(data.message);
                }
            }
        });

        return false;
    }
</script>
<style type="text/css">
    .laber_alerta {
        color: red;
    }
</style>


<div class="wrap_cab">
    <div class="filtros">
        <div class="elements">
            <div class="div-2">
                <h1><span>Actualizar Datos</span></h1>
            </div>
        </div>
    </div>
</div>
<div class="wrap">
    <section class="container clearfix">

        <div class="border-wrapper">
            <div class="div-3">
                <div class="titE">Nombre:</div>
                <div class="titAuto">
                    @Model.NombreCompleto
                </div>
            </div>
            <div class="div-3">
                <div class="titE">Teléfono:</div>
                <div class="selectA borde_redondeado">
                    @Html.TextBoxFor(model => model.Telefono, new { id = "txtTelefono", onpaste = "return paste(this);" })
                </div>
            </div>
            <div class="div-3">
                <div class="titE">Celular:</div>
                <div class="selectA borde_redondeado">
                    @Html.TextBoxFor(model => model.Celular, new { id = "txtCelular", onpaste = "return paste(this);" })
                </div>
            </div>
            <div class="div-3">
                <div class="titE">Correo Electrónico:</div>
                <div class="selectA borde_redondeado">
                    @Html.TextBoxFor(model => model.EMail, new { id = "txtEMail" })
                </div>
            </div>
            <div class="div-3">
                <div class="titE">Actualizar Clave Secreta:</div>
                <div class="selectA borde_redondeado">
                    <input id="txtActualizarClaveSecreta" type="password" />
                </div>
            </div>
            <div class="div-3">
                <div class="titE">Confirmar Clave Secreta:</div>
                <div class="selectA borde_redondeado">
                    <input id="txtConfirmarClaveSecreta" type="password" />
                </div>
            </div>
            <div class="div-3">
                <div class="input_search">
                    <input type="submit" name="" id="btnGuardar" value="Actualizar" />
                </div>
                <div class="input_search">
                    <input type="submit" name="" id="btnCancelar" value="Cerrar" />
                </div>
            </div>
        </div>
    </section>
</div>
<div id="loadingScreen"></div>
@Html.Hidden("hdn_Correo", (string)Model.EMail)

